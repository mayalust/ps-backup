let {
  expect
} = require("chai");
let Command = require("../../dist/lib/command.js");
let command = new Command();
describe("测试模块 Command :", () => {
  describe("模块[Command]成功导入 :", () => {
    it("成功引入./Command.js", () => {
      expect(typeof command).to.be.equal("object");
    });
  });
  describe("模块[Command].getFactory方法", () => {
    it(`command.getFactory("core")`, () => {
      expect(command.getFactory("core")).to.be.equal("ps-core");
    });
  });

  describe("模块[Command].getFactoryQuery方法", () => {
    {
      let testCase = command.getFactoryQuery("core");
      it(`command.getFactoryQuery("core")`, () => {
        expect(testCase.factory).to.be.equal("ps-core");
        expect(testCase.path).to.be.equal(undefined);
        expect(testCase.file).to.be.equal(undefined);
      });
    } {
      let testCase = command.getFactoryQuery("core/output");
      it(`command.getFactoryQuery("core/output")`, () => {
        expect(testCase.factory).to.be.equal("ps-core");
        expect(testCase.path).to.be.equal("output");
        expect(testCase.file).to.be.equal(undefined);
      });
    } {
      let testCase = command.getFactoryQuery("core/config.controller");
      it(`command.getFactoryQuery("core/config.controller")`, () => {
        expect(testCase.factory).to.be.equal("ps-core");
        expect(testCase.path).to.be.equal("config.controller");
        expect(testCase.file).to.be.equal(undefined);
      });
    } {
      let testCase = command.getFactoryQuery("core/controllers/demo");
      it(`command.getFactoryQuery("core/controllers/demo")`, () => {
        expect(testCase.factory).to.be.equal("ps-core");
        expect(testCase.path).to.be.equal("controllers");
        expect(testCase.file).to.be.equal("demo");
      });
    }
  });
  let testName = "test";
  describe("模块[Command].pack方法", () => {
    /* {
      it(`command.pack("${testName}/controller.config")`, done => {
        command.pack(testName + "/controller.config", nodes => {
          done();
        });
      });
    } {
      it(`command.pack("${testName}/output")`, done => {
        command.pack(testName + "/output", nodes => {
          done();
        });
      });
    } {
      it(`command.pack("${testName}/controller")`, done => {
        command.pack(testName + "/controller", nodes => {
          done();
        });
      });
    } {
      it(`command.pack("${testName}/service")`, done => {
        command.pack(testName + "/service", nodes => {
          done();
        });
      });
    } {
      it(`command.pack("${testName}/directive")`, done => {
        command.pack(testName + "/directive", nodes => {
          done();
        });
      });
    } {
      it(`command.pack("${testName}/styles")`, done => {
        command.pack(testName + "/styles", nodes => {
          done();
        });
      });
    } {
      it(`command.pack("${testName}/controller/*")`, done => {
        command.pack(testName + "/controller/*", nodes => {
          done();
        });
      });
    } {
      it(`command.pack("${testName}/service/*")`, done => {
        command.pack(testName + "/service/*", nodes => {
          done();
        });
      });
    } {
      it(`command.pack("${testName}/directive/*")`, done => {
        command.pack(testName + "/directive/*", nodes => {
          done();
        });
      });
    } */
  });
});