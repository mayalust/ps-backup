const PathMaker = require("../../dist/lib/path-maker.js"),
    filePath = process.cwd(),
    {
        expect
    } = require("chai");
describe("模块测试：PathMaker", () => {
    {
        let moduleList = new PathMaker(filePath, {
            a: 10
        });
        it(`new PathMaker(filePath, { a : 10 })`, (done) => {
            expect(moduleList.getPath()).to.be.equal(`${filePath}?a=10`);
            done();
        });
    } {
        let moduleList = new PathMaker(filePath, {
            a: undefined
        });
        it(`new PathMaker(filePath, { a : undefined })`, (done) => {
            expect(moduleList.getPath()).to.be.equal(`${filePath}?a`);
            done();
        });
    } {
        let moduleList = new PathMaker(filePath, {
            a: null
        });
        it(`new PathMaker(filePath, { a : null })`, (done) => {
            expect(moduleList.getPath()).to.be.equal(`${filePath}?a`);
            done();
        });
    } {
        let moduleList = new PathMaker(filePath, {
            a: {
                b: 2
            }
        });
        it(`new PathMaker(filePath, { a : {b:2}} })`, (done) => {
            expect(moduleList.getPath()).to.be.equal(`${filePath}?a=${encodeURIComponent(JSON.stringify({"b":2}))}`);
            done();
        });
    } {
        let moduleList = new PathMaker(filePath, {
            a: [1, 2, 3, 4]
        });
        it(`new PathMaker(filePath, { a : [1,2,3,4] })`, (done) => {
            expect(moduleList.getPath()).to.be.equal(`${filePath}?a=${encodeURIComponent(JSON.stringify([1,2,3,4]))}`);
            done();
        });
    }
})