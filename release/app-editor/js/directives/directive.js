define(["app","commonlib","jquery","jquery-ui","colorPicker"],function(app,lib){app.directive("contentTr",["$compile",function(l){var t={};return t.scope={ngModel:"=",target:"="},t.replace=!1,t.restrict="C",t.link=function(t,e,a){var n=function(t){switch(t){case"INPUT":return"<table><tr ng-model='ngModel' data-target='target' class='standard-input'></tr><table>";case"SLIDER":return"<table><tr ng-model='ngModel' data-target='target' class='standard-slider'></tr><table>";case"LINE":return"<table><tr><hr></tr><table>";case"SELECT":return"<table><tr ng-model='ngModel' data-target='target' class='standard-select'></tr><table>";case"TITLE":return"<table><tr><td>{{ngModel.name}}<td></tr><table>";case"COLOR":return"<table><tr ng-model='ngModel' data-target='target' class='standard-color'></tr><table>";default:return"<table><tr>BAD MODULE</tr><table>"}}(t.ngModel.type);e.html(n),l(e.contents())(t)},t}]),app.directive("clickableInput",["$timeout",function(d){var t={};return t.scope={ngModel:"=",ngDisabled:"="},t.restrict="C",t.link=function(e,t){var a=$(t),n=a.parent();function l(t){t.stopPropagation(),e.$apply(function(){e.ngDisabled=!1}),a.focus(),n.off("click"),n.on("keypress.enter",r),a.blur(i)}function i(t){e.$apply(function(){e.ngDisabled=!0}),n.on("click",l),n.off("keypress.enter")}function r(t){var e=t.charCode;13==e&&a.blur()}d(function(){n.on("click",l)}),e.$watch("ngModel",function(t,e,a){})},t}]),app.directive("chartIcon",["$timeout",function(t){var e={};return e.scope={ngModel:"="},e.restrict="C",e.link=function(t,n){t.$watch("ngModel",function(t,e,a){switch(t){case"line":n.removeClass().addClass("chartIcon line");break;case"bar":n.removeClass().addClass("chartIcon bar");break;case"pie":n.removeClass().addClass("chartIcon pie");break;case"gauge":n.removeClass().addClass("chartIcon gauge")}})},e}]),app.directive("dropdowntree",["$timeout",function(a){var t={};return t.scope={ngModel:"=",options:"=",change:"&"},t.restrict="C",t.link=function(g,d,t){g.$watch("ngModel",function(t,e,a){t&&(t.setCurrentSelect=function(t){v.text(t.label)})}),g.$watch("options",function(t,e,a){if(t){var n=t,l=$("<div></div>").attr("id","container").addClass("noview"),i=$("<div></div>").addClass("children"),r=n.children;0<r.getData().length&&(v.text(r.first().label),g.change({value:r.first()})),l.append(i),d.find("[id*=container]").remove(),d.append(l),function s(t,c,p){t.each(function(e){var t,a,l=$("<div></div>").addClass("wrap"),n=$("<div></div>").addClass("glyphicon"),i=$("<div></div>").addClass("labeltxt"),r=$("<div></div>").addClass("children"),d=e.children;l.attr("id",e.id),n.data("children",d),i.text(e.label);for(var o=0;o<=p;o++)t=$("<div></div>").addClass("vline"),(a=o)==p-1&&t.addClass("last"),t.css("left",10+20*a+"px"),l.append(t);l.append(n),l.append(i),l.css("padding-left",20*p+"px"),u.push(l),c.append(l),l.on("click",function(t){g.$apply(function(){var a=[e.id];v.text(e.label),u.each(function(t){t.removeClass("active")}),l.addClass("active");var t=e.children;function n(t){t.each(function(t){a.push(t.id);var e=t.children;e&&n(e)})}a=[e.id],t&&n(t),g.change({value:e}),g.ngModel=a})}),d?(n.addClass("glyphicon-minus"),n.on("click",function(t){t.stopPropagation(),n.hasClass("glyphicon-minus")?(n.removeClass("glyphicon-minus").addClass("glyphicon-plus"),r.animate({"max-height":0,opacity:0},300,function(){r.css({display:"none"})})):(n.removeClass("glyphicon-plus").addClass("glyphicon-minus"),r.css({display:"block"}),r.animate({"max-height":200,opacity:1},300))}),c.append(r),s(d,r,p+1)):n.addClass("glyphicon-hdd")})}(r,i,1)}else d.find("[id*=container]").remove()});var v=$("<div></div>").addClass("select"),u=new lib.ArrayHandler([]);v.on("click",function(){g.$apply(function(){var t=$(d).find("[id*=container]");if(t.hasClass("noview")){var e=function(){t.addClass("noview"),$("body").off("click.body"),v.removeClass("extend")};t.removeClass("noview"),v.addClass("extend"),a(function(){$("body").on("click.body",e)})}})}),d.append(v)},t}]),app.directive("checkbox",["$timeout",function(t){var e={};return e.scope={ngModel:"="},e.restrict="C",e.template="<span class='glyphicon glyphicon-ok' ng-show='ngModel'></span>",e.link=function(a,n){n.bind("click",function(t){if(!a.disabled){var e=function(){a.ngModel=!a.ngModel};a.$apply(e)}}),a.$watch("ngModel",function(t,e,a){1==t?n.addClass("active"):n.removeClass("active")})},e}]),app.directive("standardInput",["$timeout",function(timeout){var standardInput={},cacheValue;function link(scope,element,attrs){function onDomReady(){scope.$watch("avaliable",avaliableWatcher),scope.$watch("target",targetWatcher)}function targetWatcher(newVal,oldVal,scope){if(newVal){if(fillBlankObject(),-1!=scope.ngModel.bind.indexOf("[*]")){var leftP=scope.ngModel.bind.split("[*]")[0],rightP=scope.ngModel.bind.split("[*]")[1];scope.bindData=eval("scope.target."+leftP+"[0]"+rightP)}else scope.bindData=eval("scope.target."+scope.ngModel.bind);scope.avaliable=null!=scope.bindData,scope.$watch("bindData",bindDataWatcher)}}function avaliableWatcher(t,e,a){a.bindData=t?a.bindData?a.bindData:cacheValue:void(cacheValue=a.bindData)}function fillBlankObject(){var params=scope.ngModel.bind.split("."),variable="scope.target";for(var i in params)i<params.length-1&&(variable+="."+params[i],eval(variable+"== undefined")&&eval(variable+"={}"))}function bindDataWatcher(newVal,oldVal,scope){var params=scope.ngModel.bind.split("."),end=params[params.length-1],evalStr=[];if(-1!=scope.ngModel.bind.indexOf("[*]")){var leftP=scope.ngModel.bind.split("[*]")[0],rightP=scope.ngModel.bind.split("[*]")[1],arr=eval("scope.target."+scope.ngModel.bind.split("[*]")[0]);for(var i in arr)evalStr.push(leftP+"["+i+"]"+rightP)}else evalStr.push(scope.ngModel.bind);for(var i in evalStr){var rs=evalStr[i].split("."+end)[0];eval("scope.target."+rs)[end]=newVal}}timeout(onDomReady)}return standardInput.scope={ngModel:"=",target:"="},standardInput.restrict="C",standardInput.template="\t\t\t\t<td><div class='checkbox' ng-model='avaliable' name='{{ngModel.name}}'></div></td>\t\t\t\t<td class='title' ng-class='{true : \"\", false : \"notavaliable\"}[avaliable]'>{{ngModel.name}}</td>\t\t\t\t<td class='content'>\t\t\t\t\t<input \t\t\t\t\t\tng-disabled = '!avaliable'\t\t\t\t\t\tng-model='bindData'\t\t\t\t\t\tng-model-options='{ updateOn : \"blur\" }''\t\t\t\t\t\tng-class='{true:\"\",false: \"disabled\"}[avaliable]'\t\t\t\t\t\tclass='updateOnEnter mTitle'/>\t\t\t\t</td>",standardInput.link=link,standardInput}]),app.directive("standardSelect",function(){var standardSelect={};function link(scope,element,attrs){var cacheValue;function selectClick(t){scope.bindData=t}function targetWatcher(newVal,oldVal,scope){if(newVal){if(fillBlankObject(),-1!=scope.ngModel.bind.indexOf("[*]")){var leftP=scope.ngModel.bind.split("[*]")[0],rightP=scope.ngModel.bind.split("[*]")[1];scope.bindData=eval("scope.target."+leftP+"[0]"+rightP)}else scope.bindData=eval("scope.target."+scope.ngModel.bind);scope.avaliable=null!=scope.bindData,scope.$watch("bindData",bindDataWatcher)}}function targetValueWatcher(t,e,a){}function avaliableWatcher(t,e,a){a.bindData=t?a.bindData?a.bindData:cacheValue:void(cacheValue=a.bindData?a.bindData:cacheValue)}function bindDataWatcher(newVal,oldVal,scope){var params=scope.ngModel.bind.split("."),end=params[params.length-1],evalStr=new Array;if(-1!=scope.ngModel.bind.indexOf("[*]")){var leftP=scope.ngModel.bind.split("[*]")[0],rightP=scope.ngModel.bind.split("[*]")[1],arr=eval("scope.target."+scope.ngModel.bind.split("[*]")[0]);for(var i in arr)evalStr.push(leftP+"["+i+"]"+rightP)}else evalStr.push(scope.ngModel.bind);for(var i in evalStr){var rs=evalStr[i].split("."+end)[0];eval("scope.target."+rs)[end]=newVal}}function fillBlankObject(){var params=scope.ngModel.bind.split("."),variable="scope.target";for(var i in params)i<params.length-1&&(variable+="."+params[i],eval(variable+"== undefined")&&eval(variable+"={}"))}scope.$watch("target",targetWatcher),scope.$watch("target",targetValueWatcher,!0),scope.$watch("avaliable",avaliableWatcher),scope.selectClick=selectClick}return standardSelect.scope={ngModel:"=",target:"="},standardSelect.restrict="C",standardSelect.template="\t\t\t\t<td><div class='checkbox' ng-model='avaliable' name='{{ngModel.name}}'></div></td>\t\t\t\t<td class='title' ng-class='{true : \"\", false : \"notavaliable\"}[avaliable]'>{{ngModel.name}}</td>\t\t\t\t<td class='content'>\t\t\t\t\t<div class='btn-group btn-group-justified' role='group' aria-label='...'>\t\t\t\t\t\t<a ng-repeat='value in ngModel.values'\t\t\t\t\t\t\tng-disabled = '!avaliable'\t\t\t\t\t\t\tng-click = 'selectClick(value.value)'\t\t\t\t\t\t\tclass='btn btn-primary'\t\t\t\t\t\t\tng-class='{true : \"selected\", false : \"\"}[bindData==value.value]'>\t\t\t\t\t\t\t{{value.name}}\t\t\t\t\t\t</a>\t\t\t\t\t</div>\t\t\t\t</td>",standardSelect.link=link,standardSelect}),app.directive("standardSlider",["$timeout",function(timeout){var standardInput={};function link(scope,element,attrs){function onDomReady(){var cachValue,elementTarget;function targetWatcher(newVal,oldVal,scope){if(newVal){var numberUpdate=function(t,e){scope.$apply(function(){scope.bindData=e.value})};if(fillBlankObject(),-1!=scope.ngModel.bind.indexOf("[*]")){var leftP=scope.ngModel.bind.split("[*]")[0],rightP=scope.ngModel.bind.split("[*]")[1];scope.bindData=eval("scope.target."+leftP+"[0]"+rightP)}else scope.bindData=eval("scope.target."+scope.ngModel.bind);null!=scope.bindData?scope.avaliable=!0:(scope.bindData=scope.ngModel.default?scope.ngModel.default:0,scope.avaliable=!1);try{if(null==scope.bindData)throw"bindData is undefined"}catch(t){alert(t)}elementTarget=$(element[0]).find("#number-input"),elementTarget.slider({max:scope.ngModel.max,min:scope.ngModel.min,value:scope.bindData,range:"min",slide:numberUpdate})}}function groupWatcher(newVal,oldVal,scope){var aval=newVal[0],data=newVal[1],params=scope.ngModel.bind.split("."),end=params[params.length-1],evalStr=new Array;if(-1!=scope.ngModel.bind.indexOf("[*]")){var leftP=scope.ngModel.bind.split("[*]")[0],rightP=scope.ngModel.bind.split("[*]")[1],arr=eval("scope.target."+scope.ngModel.bind.split("[*]")[0]);for(var i in arr)evalStr.push(leftP+"["+i+"]"+rightP)}else evalStr.push(scope.ngModel.bind);for(var i in evalStr){var rs=evalStr[i].split("."+end)[0];newVal[0]?(eval("scope.target."+rs)[end]=parseInt(data),elementTarget.slider("enable"),elementTarget.slider("option","value",parseInt(data)?parseInt(data):0)):(elementTarget.slider("disable"),eval("scope.target."+rs)[end]=void 0)}}function fillBlankObject(){var params=scope.ngModel.bind.split("."),variable="scope.target";for(var i in params)i<params.length-1&&(variable+="."+params[i],eval(variable+"== undefined")&&eval(variable+"={}"))}scope.$watch("target",targetWatcher),scope.$watchGroup(["avaliable","bindData"],groupWatcher)}timeout(onDomReady)}return standardInput.scope={ngModel:"=",target:"="},standardInput.restrict="C",standardInput.template="\t\t\t\t\t<td><div class='checkbox' ng-model='avaliable' name='{{ngModel.name}}'></div></td>\t\t\t\t\t<td class='title' ng-class='{true : \"\", false : \"notavaliable\"}[avaliable]'>{{ngModel.name}}</td>\t\t\t\t\t<td class='content' style='width:130px;'>\t\t\t\t\t\t<div id='number-input'></div>\t\t\t\t\t</td>\t\t\t\t\t<td class='valcls' style='padding:0;'>\t\t\t\t\t\t<input ng-model='bindData' ng-model-options='{ updateOn : \"blur\" }' ng-disabled='!avaliable' type='unmber'/>\t\t\t\t\t\t<span>{{ngModel.unit}}</span>\t\t\t\t\t</td>",standardInput.link=link,standardInput}]),app.directive("standardColor",["$timeout",function(timeout){var standardColor={};function link(scope,element,attrs){var cachValue,currentTarget;function onDomReady(){function onColorChange(t){scope.$apply(function(){scope.bindData=t.color})}function targetWatcher(newVal,oldVal,scope){if(newVal){if(fillBlankObject(),-1!=scope.ngModel.bind.indexOf("[*]")){var leftP=scope.ngModel.bind.split("[*]")[0],rightP=scope.ngModel.bind.split("[*]")[1];scope.bindData=eval("scope.target."+leftP+"[0]"+rightP)}else scope.bindData=eval("scope.target."+scope.ngModel.bind);scope.avaliable=null!=scope.bindData,scope.$watch("bindData",bindDataWatcher)}}function avaliableWatcher(t,e,a){t?(a.bindData=cachValue||a.bindData,currentTarget.setEnabled()):(cachValue=a.bindData?a.bindData:cachValue,a.bindData=void 0,currentTarget.setDisabled())}function bindDataWatcher(newVal,oldVal,scope){var params=scope.ngModel.bind.split("."),end=params[params.length-1],evalStr=new Array;if(-1!=scope.ngModel.bind.indexOf("[*]")){var leftP=scope.ngModel.bind.split("[*]")[0],rightP=scope.ngModel.bind.split("[*]")[1],arr=eval("scope.target."+scope.ngModel.bind.split("[*]")[0]);for(var i in arr)evalStr.push(leftP+"["+i+"]"+rightP)}else evalStr.push(scope.ngModel.bind);for(var i in evalStr){var rs=evalStr[i].split("."+end)[0];eval("scope.target."+rs)[end]=newVal}}function fillBlankObject(){var params=scope.ngModel.bind.split("."),variable="scope.target";for(var i in params)i<params.length-1&&(variable+="."+params[i],eval(variable+"== undefined")&&eval(variable+"={}"))}currentTarget=$(element[0]).find("input#colorPicker"),currentTarget.createNewColorPicker({onColorChange:onColorChange}),scope.$watch("target",targetWatcher),scope.$watch("avaliable",avaliableWatcher)}timeout(onDomReady)}return standardColor.scope={ngModel:"=",target:"="},standardColor.restrict="C",standardColor.template="\t\t\t\t<td><div class='checkbox' ng-model='avaliable' name='{{ngModel.name}}'></div></td>\t\t\t\t<td class='title' ng-class='{true : \"\", false : \"notavaliable\"}[avaliable]' ng-bind='ngModel.name'></td>\t\t\t\t<td class='content'>\t\t\t\t\t<input \t\t\t\t\t\tid='colorPicker'\t\t\t\t\t\tdata-target='target'>\t\t\t\t</td>",standardColor.link=link,standardColor}]),app.directive("updateOnEnter",["$timeout",function(t){var e={};return e.scope={ngModel:"="},e.restrict="C",e.link=function(t,e,a){var n=$(e[0]);n.bind("keyup",function(t){13==t.keyCode&&n.blur()})},e}])});
//# sourceMappingURL=../../../map/app-editor/js/directives/directive.js.map
