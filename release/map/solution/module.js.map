{"version":3,"sources":["solution/module.js"],"names":["define","angular","config","type","slice","Array","prototype","tostring","Object","toString","contexts","isUndefined","obj","call","_tools","bind","target","fn","apply","arguments","each","arr","callback","i","length","eachProp","Promise","this","state","d","resolveFn","e","rejectFn","pototype","then","catch","all","promises","result","promise","push","module","getAllTools","map","inx","resolve","reject","require","args","res","reduce","a","b","concat","method","list","item","name","params","injector","$routeProvider","ctrl","when","route","templateUrl","controller"],"mappings":"AAAAA,OAAO,CAAC,UAAW,+BAAgC,0CAA2C,mCAAoC,SAAUC,EAASC,GACnJ,IAMgBC,EANZC,EAAQC,MAAMC,UAAUF,MACxBG,EAAWC,OAAOF,UAAUG,SAC5BC,EAAW,GACXC,GAGYR,EAHS,YAIhB,SAAUS,GACf,OAAOL,EAASM,KAAKD,KAAS,WAAaT,EAAO,MAJlDW,EAAS,CAAC,cAAe,WAAY,aAAc,WAQvD,SAASC,EAAKC,EAAQC,GACpB,OAAO,WACLA,EAAGC,MAAMF,EAAQG,YAIrB,SAASC,EAAKC,EAAKC,GACjB,IAAIC,EAEJ,IAAKA,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,IAC1BD,EAASD,EAAIE,GAAIA,EAAGF,GAIxB,SAASI,EAASb,EAAKU,GACrB,IAAIC,EAEJ,IAAKA,KAAKX,EACRU,GAAYA,EAASV,EAAIW,GAAIA,GA+GjC,OAzGIZ,EAAYe,WACdA,QAAU,SAAiBT,GACzBU,KAAKC,MAAQ,EAYbX,EAAGF,EAAKY,KAVR,SAAiBE,GACfF,KAAKC,MAAQ,EACbD,KAAKG,WAAaH,KAAKG,UAAUD,KAQXd,EAAKY,KAL7B,SAAgBI,GACdJ,KAAKC,MAAQ,EACbD,KAAKK,UAAYL,KAAKG,UAAUD,OAMpCH,QAAQO,SAASC,KAAO,SAAUjB,GAChCU,KAAKG,UAAYb,GAGnBS,QAAQpB,UAAU6B,MAAQ,SAAUlB,GAClCU,KAAKK,SAAWf,GAGlBS,QAAQU,IAAM,SAAUC,EAAUf,GAChC,IACIgB,EAAS,GACblB,EAAKiB,EAAU,SAAUE,GACvBA,EAAQL,KAAK,SAAUL,GACrBS,EAAOE,KAAKX,GACZS,EAAOd,QAAUa,EAASb,QAAUF,GAAYA,EAASgB,SA2CjE,SAAoBhB,GAClB,IAAImB,EAASxC,EAAQwC,OAAO,WAAY,IACxCC,YAAc5B,EAAO6B,IAAI,SAAUxC,EAAMyC,GACvC,OAAO,IAAIlB,QAAQ,SAAUmB,EAASC,GACpC,IAAIH,EAAMzC,EAAOC,GAAQD,EAAOC,GAAMwC,IAAI,SAAUZ,GAClD,MAfC,kBAekB5B,EAfS,IAeH4B,IACtB,KACLY,EAAMI,QAAQJ,EAAK,WACjB,IAfiBK,EAebC,GAfaD,EAeS7B,UAdtBf,EAAMS,KAAKmC,EAAM,GAChBE,OAAO,SAAUC,EAAGC,GAC7B,OAAOD,EAAEE,OAAOD,IACf,KAYG1C,EAASP,GAAQ8C,EACjBJ,EAAQI,KACLJ,EAAQ,UAGjBnB,QAAQU,IAAIM,aAAaR,KAAK,SAAUL,GACtCJ,EAASf,EAAU,SAAUuC,EAAK9C,GApDtC,IAAgBsC,EAAQa,EAAQC,EAAhBd,EAqDHA,EArDmBc,EAqDLN,EApDzBK,GADsBA,EAqDHnD,GApDHC,MAAM,GAAI,GAC1BgB,EAAKmC,EAAM,SAAUC,GACnB,IAAIC,EAAOD,EAAKC,KACZC,EAASF,EAAKG,SAAWH,EAAKG,SAASN,OAAO,CAACG,EAAKF,KAAYE,EAAKF,GACzEb,EAAOa,GAAQG,EAAMC,OAkDrBjB,EAAOvC,OAAO,CAAC,iBAAkB,SAAU0D,GAEzCnC,EADkBf,EAAS,YACL,SAAUmD,EAAMtC,GACpCqC,EAAeE,KAAKD,EAAKE,MAAO,CAC9BC,YAAa,wBAA0BH,EAAKG,YAC5CC,WAAYJ,EAAKJ,YAIvBnC,EAASmB","file":"solution/module.js","sourcesContent":["define(['angular', '../solution/module.config.js', '../js/directives/data-tables-adv-dom.js', '../js/directives/ps-tree-dom.js'], function (angular, config) {\n  var slice = Array.prototype.slice,\n      tostring = Object.prototype.toString,\n      contexts = {},\n      isUndefined = isType(\"Undefined\"),\n      _tools = ['controllers', 'services', 'directives', 'filters'];\n\n  function isType(type) {\n    return function (obj) {\n      return tostring.call(obj) === \"[object \" + type + \"]\";\n    };\n  }\n\n  function bind(target, fn) {\n    return function () {\n      fn.apply(target, arguments);\n    };\n  }\n\n  function each(arr, callback) {\n    var i;\n\n    for (i = 0; i < arr.length; i++) {\n      callback(arr[i], i, arr);\n    }\n  }\n\n  function eachProp(obj, callback) {\n    var i;\n\n    for (i in obj) {\n      callback && callback(obj[i], i);\n    }\n  }\n  /** ES5 下面PROMISE的兼容性写法 */\n\n\n  if (isUndefined(Promise)) {\n    Promise = function Promise(fn) {\n      this.state = 0;\n\n      function resolve(d) {\n        this.state = 1;\n        this.resolveFn && this.resolveFn(d);\n      }\n\n      function reject(e) {\n        this.state = 2;\n        this.rejectFn && this.resolveFn(d);\n      }\n\n      fn(bind(this, resolve), bind(this, reject));\n    };\n\n    Promise.pototype.then = function (fn) {\n      this.resolveFn = fn;\n    };\n\n    Promise.prototype.catch = function (fn) {\n      this.rejectFn = fn;\n    };\n\n    Promise.all = function (promises, callback) {\n      var i = 0;\n      var result = [];\n      each(promises, function (promise) {\n        promise.then(function (d) {\n          result.push(d);\n          result.length == promises.length && callback && callback(result);\n        });\n      });\n    };\n  }\n\n  function inject(module, method, list) {\n    method = method.slice(0, -1);\n    each(list, function (item) {\n      var name = item.name;\n      var params = item.injector ? item.injector.concat([item[method]]) : item[method];\n      module[method](name, params);\n    });\n  }\n\n  function loader(dependencies) {\n    var definition = {\n      resolver: ['$q', '$rootScope', function ($q, $rootScope) {\n        var defered = $q.defer();\n\n        require(dependencies, function () {\n          $rootScope.$apply(function () {\n            defered.resolve();\n          });\n        });\n\n        return defered.promise;\n      }]\n    };\n    return definition;\n  }\n\n  function getResource(path, e) {\n    return \"../../solution/\" + path + \"/\" + e; //return e != \"controller\" ? \"../../solution/\" + path + \"/\" + e : \"../../release/\" + path + \"/\" + e;\n  }\n\n  function getDataFromArgs(args) {\n    var arr = slice.call(args, 0);\n    return arr.reduce(function (a, b) {\n      return a.concat(b);\n    }, []);\n  }\n\n  function loadModule(callback) {\n    var module = angular.module(\"solution\", []);\n    getAllTools = _tools.map(function (type, inx) {\n      return new Promise(function (resolve, reject) {\n        var map = config[type] ? config[type].map(function (e) {\n          return getResource(type, e);\n        }) : null;\n        map ? require(map, function () {\n          var res = getDataFromArgs(arguments);\n          contexts[type] = res;\n          resolve(res);\n        }) : resolve(null);\n      });\n    });\n    Promise.all(getAllTools).then(function (d) {\n      eachProp(contexts, function (res, type) {\n        inject(module, type, res);\n      });\n      module.config(['$routeProvider', function ($routeProvider) {\n        var controllers = contexts[\"controllers\"];\n        eachProp(controllers, function (ctrl, i) {\n          $routeProvider.when(ctrl.route, {\n            templateUrl: \"../solution/partials/\" + ctrl.templateUrl,\n            controller: ctrl.name\n          });\n        });\n      }]);\n      callback(module);\n    });\n  }\n\n  return loadModule;\n});"],"sourceRoot":"/source/"}