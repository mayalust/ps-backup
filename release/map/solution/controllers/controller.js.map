{"version":3,"sources":["solution/controllers/controller.js"],"names":["define","treeCache","cache","key","val","route","templateUrl","name","injector","controller","scope","rootScope","q","$location","resourceUIService","$routeParams","cms","serviceProxy","growl","navigators","label","active","a","_res","callback","resourceIdMap","root","_projects","invalidNodes","nextTick","fn","setTimeout","isType","type","obj","tostring","call","extend","b","i","each","arr","length","nodeClick","node","_onlyDeviceClickable","modelId","removeAllRequest","setHighlight","target","trigger","changeNavString","getResourceById","id","resource","setValue","analysisChangePath","deviceChangePath","path","this","parent","push","reverse","join","rule","regeExp","RegExp","val1","values","number","val2","getMaxUnmber","variable","maxLength","ret","exec","num","addZeroBefore","word","dif","max","mnum1","mnum2","Math","replace","extendToResIdMap","resources","domains","split","filter","e","last2","slice","parentID","resourceType","LOC","console","err","clickFn","getParameter","event","preventDefault","toggle","_backToMainWhileDeviceChange","setParameter","navigateTo","main","inputToRelativeMap","defer","getParent","children","inserted","insertBySort","assert","view","treeViewData","postService","code","resolve","data","promise","then","d","click","$on","eventname","events","getKpiValueCi","ci","kpi","getDomains","mids","getResourceByModelId","inx","mid","isArray","apply","extendstr","getCurrentResourceSuccess","getDomainsSuccess","domain","dev","traverse","child","postponed","getDomainsKpiValueCiSuccess","valuelist","runtime","getKpiValueCiSuccess","getDevicesByConditionSuccess","getDevicesByCondition","treeData","treeMap","find","Array","isObject","phase","$root","$$phase","option","$apply","getTreeViewSuccess","tree","rs","getValue","prototype","Object","toString","isNull","isUndefined","isNumber","isFunction","isString","treenavigator","$","_role","icons","_LOCATION","parameters","navitype","300","301","302","1000","searchContent","oninit","treeIns","search","save","saveEditorStatus","success","getEditorStatus","$scope","viewFlexService","getConfigureViewSuccess","source","showSelector","n","body","viewTitle","on","row","customers","projects","devices","viewId","parseInt","info","bind","style","color","text-decoration","window","open","getManagedViewsByType"],"mappings":"AAAAA,OAAO,WACL,IAAIC,EAIU,SAASC,EAAMC,EAAKC,GAC9BF,EAAMC,GAAOC,GAMjB,MAAO,CAAC,CACNC,MAAO,SACPC,YAAa,YACbC,KAAM,YACNC,SAAU,CAAC,SAAU,aAAc,KAAM,YAAa,oBAAqB,eAAgB,sBAAuB,eAAgB,SAClIC,WAAY,SAAoBC,EAAOC,EAAWC,EAAGC,EAAWC,EAAmBC,EAAcC,EAAKC,EAAcC,GAClHR,EAAMS,WAAa,CAAC,CAClBC,MAAO,SACPC,QAAQ,IAEVX,EAAMY,EAAI,GACV,IAGIC,EA0hBiBC,EAzhBjBC,EAAgB,CAClBC,KAAM,IAEJC,EAAY,GAEZC,EAAe,GAYnB,SAASC,EAASC,GAChBC,WAAWD,EAAI,KAWjB,SAASE,EAAOC,GACd,OAAO,SAAUC,GACf,OAAOC,SAASC,KAAKF,IAAQ,WAAaD,EAAO,KAAOC,GAAQA,GA2CpE,SAASG,EAAOf,EAAGgB,GACjB,IAAK,IAAIC,KAAKD,EACZhB,EAAEiB,GAAKD,EAAEC,GAIb,SAASC,EAAKC,EAAKjB,GACjB,IAAIe,EAGJ,IAFAE,EAAMA,GAAO,GAERF,EAAI,EAAGA,EAAIE,EAAIC,OAAQH,IAC1Bf,GAAYA,EAASiB,EAAIF,GAAIA,GAyCjC,SAASI,EAAUC,GACbC,sBAAwBD,EAAKE,QAAU,MAC3C7B,EAAa8B,mBAETH,EAAKI,cACPJ,EAAKI,cAAa,GAIpBnB,EAAS,WACHgB,qBAyCR,SAA4BD,GACfA,EAAK/B,UAEhBoC,OAAOC,QAAQ,kBAAmBC,EAAgBf,KAAKQ,IACvDQ,EAAgBR,EAAKS,GAAI,SAAUC,GACjCjB,EAAOO,EAAMU,GACbL,OAAOM,SAAS,kBAAmBX,GACnCK,OAAOC,QAAQ,sBAAuB,CACpCI,SAAUV,IAEZK,OAAOC,QAAQ,0BAA2B,KAlDxCM,CAAmBZ,GAEnBa,EAAiBb,MAuBvB,SAASa,EAAiBb,GACxB,IAAIc,EAAOd,EAAK/B,UAEhBoC,OAAOC,QAAQ,kBAAmBC,EAAgBf,KAAKQ,IACvDQ,EAAgBR,EAAKS,GAAI,SAAUC,GACjCjB,EAAOO,EAAMU,GACbL,OAAOM,SAAS,kBAAmBX,GACnCK,OAAOC,QAAQ,aAAcQ,GAC7BT,OAAOC,QAAQ,sBAAuB,CACpCI,SAAUV,IAEZK,OAAOC,QAAQ,0BAA2B,KAkB9C,SAASC,IAMP,IALA,IAEIV,EAAM,CAFCkB,KAEKvC,OACZwC,EAHOD,KAGOC,OAEXA,GACY,IAAbA,EAAOP,IACTZ,EAAIoB,KAAKD,EAAOxC,OAGlBwC,EAASA,EAAOA,OAIlB,OADAnB,EAAIqB,UACGrB,EAAIsB,KAAK,OAGlB,SAASX,EAAgBC,EAAI7B,GAC3ByB,OAAOG,gBAAgBC,EAAI,SAAUC,GACnC9B,GAAYA,EAAS8B,KAczB,SAASU,EAAK1C,EAAGgB,GACf,IAAI2B,EAAU,IAAIC,OAAO,SAAU,KAC/BC,EAAO7C,EAAE8C,QAAU9C,EAAE8C,OAAOC,QAAU,KACtCC,EAAOhC,EAAE8B,QAAU9B,EAAE8B,OAAOC,QAAU,KAE1C,SAASE,EAAaC,GAIpB,IAHA,IAAIC,EAAY,EACZC,EAAMT,EAAQU,KAAKH,EAASpD,OAElB,MAAPsD,GAAa,CAClB,IAAIE,EAAMF,EAAI,GAAGhC,OAEP+B,EAANG,IACFH,EAAYG,GAGdF,EAAMT,EAAQU,KAAKH,EAASpD,OAG9B,OAAOqD,EAGT,SAASI,EAAcC,GAGrB,IAFA,IAAIC,EAAMC,EAAMF,EAAKpC,OAEZH,EAAI,EAAGA,EAAIwC,EAAKxC,IACvBuC,EAAO,IAAMA,EAGf,OAAOA,EAGT,GAAIX,GAAQG,EACV,OAAOH,EAAOG,EAEd,IAAIW,EAAQV,EAAajD,GACrB4D,EAAQX,EAAajC,GACrB0C,EAAMG,KAAKH,IAAIC,EAAOC,GAO1B,OANS5D,EAAEF,MAAMgE,QAAQnB,EAAS,SAAUa,GAC1C,OAAOD,EAAcC,KAEdxC,EAAElB,MAAMgE,QAAQnB,EAAS,SAAUa,GAC1C,OAAOD,EAAcC,KAqB3B,SAASO,EAAiBpC,EAAQqC,GAChC,IACIjC,EACApB,EACAa,EAqBJ,OAnBAN,EAAK8C,EAAW,SAAUhC,EAAUf,GACpBe,EAASiC,QAAQC,MAAM,KAAKC,OAAO,SAAUC,GACzD,OAAOA,IADT,IAGIC,EAAmBrC,EAASiC,QAxBhBC,MAAM,KAAKC,OAAO,SAAUC,GAC5C,OAAOA,IAEEE,OAAO,GAsBZC,EAAWvC,EAASD,IAAMsC,EAAM,GAAKA,EAAM,GAAKA,EAAM,GAEtDE,IAAavC,EAASD,IACxBC,EAASuC,SAAWA,EACpBxC,EAAKC,EAASD,GACdP,EAAUQ,EAASR,QACnBb,EAAiB,IAAVa,EAAiB,IAAOA,GAC/BG,EAAOI,GAAMC,GACJwC,aAAeC,IAAI9D,KAE5B+D,QAAQC,IAAI,cAAe3C,GAC3B1B,EAAaiC,KAAKP,MAGfL,EAGT,SAASiD,IACP,IA7KqBtD,EA6KjBS,EAAKJ,OAAOkD,aAAa,MAEzBtD,sBAA8C,WAAtBc,KAAKmC,cAC/BM,MAAMC,iBACN1C,KAAK2C,UACIjD,GAAMM,KAAKN,KAChBkD,8BACGtD,OAAOkD,aAAa,QApLRvD,EAuLDe,KAtLhBd,sBAAwBD,EAAKE,QAAU,MAC3C7B,EAAa8B,mBAMblB,EAAS,WAGPoB,OAAOuD,aAAa,MAAO,MAC3BvD,OAAOwD,WAAW,QAAS,CACzBC,KAAMzD,OAAOkD,aAAa,SACzB,YA4KDxD,EAAUgB,OAKhB,SAASgD,EAAmBrD,GAC1B,IAoPwBD,EAAInB,EACxB0E,EArPArB,EAAUjC,EAASiC,QAGnB3B,GADUN,EAASR,QACV+D,EAAUvD,IAKvB,SAASuD,EAAUvD,GACjB,GAAIA,EAASuC,SACX,OAAOpE,EAAc6B,EAASuC,UAE9BG,QAAQC,IAAI,kBARhBV,EAAUA,EAAQC,MAAM,KAAKC,OAAO,SAAUC,GAC5C,OAAOA,IA4BL9B,GACFA,EAAOkD,SAAWlD,EAAOkD,UAAY,GAhRzC,SAAsBA,EAAUC,EAAU/C,GACxC,IAAK,IAAIzB,EAAIuE,EAASpE,OAAS,GAAQ,EAALH,GAC5ByB,EAAK+C,EAAUD,EAASvE,KAC1BuE,EAASvE,EAAI,GAAKuE,EAASvE,GAC3BA,IAMJuE,EAASvE,EAAI,GAAKwE,EAuQhBC,CAAapD,EAAOkD,SAAUxD,EAAUU,KAExCvC,EAAc,KAAQoC,KAAKP,GAC3B0C,QAAQiB,QAAO,EAAO,UAAW3D,IAG/BA,EAASlC,MAETkC,EAASc,QAAUd,EAASc,OAAO8C,KACrC5D,EAAS4D,KAAO5D,EAASc,OAAO8C,MAEhC5D,EAAS4D,KAAOC,aAAa7D,EAASD,IAElCC,EAAS4D,OAoMS7D,EAnMHC,EAASD,GAmMFnB,EAnMMoB,EAAS4D,KAoMvCN,EAAQhG,EAAEgG,QACd3D,OAAOmE,YAAY,oBAAqB,oBAAqB,CAAC/D,EAAI,OAAQnB,GAAM,SAAUkE,GACpFA,EAAMiB,MACRT,EAAMU,QAAQlB,EAAMmB,QAGjBX,EAAMY,SA1MoCC,KAAK,SAAUC,OAKhEpE,EAASqE,MAAQzB,EAEjB5C,EAASsE,IAAM,SAAUC,EAAWrG,GAClCsG,OAAOD,GAAarG,GAsBxB,SAASuG,EAAcC,EAAIC,EAAKzG,GAS9BA,EAAS,IAGX,SAAS0G,EAAW1G,GAClB,IAAI+D,EAAU,GACV4C,EAAO,CAAC,IAAK,IAAK,MAGtB,SAASC,EAAqBC,GAC5B,IAAIC,EAAMH,EAAKE,GAOfC,GAAOrF,OAAOmF,qBAAqBE,EALnC,SAAiBZ,GA9ZrB,IAAkBjF,EAAKP,EAALO,EA+ZH8C,EA/ZQrD,EA+ZCwF,EA9ZlBa,QAAQrG,GACV2B,KAAK2E,MAAM/F,EAAKP,GAEhB2B,KAAKzB,KAAKK,EAAKP,GA4ZbkG,EAAqBC,EAAM,IAGoBI,YAChDH,GAAO9G,GAAYA,EAAS+D,GAG/B6C,CAAqB,GAGvB,SAASM,EAA0BpF,GACjC/B,EAAO+B,EACP4E,EAAWS,GAGb,SAASA,EAAkBpD,GACzBF,EAAiB5D,EAAe8D,GAChC,IACI3C,EADAoF,EAAK,GAETxF,EAAK+C,EAAS,SAAUqD,GACtBjC,EAAmBiC,GACnBZ,EAAGnE,KAAK+E,EAAOvF,MAEjBwF,IAAMpH,EAAc,KAEpB,SAASqH,EAASpB,GAChBlF,EAAKkF,EAAG,SAAUqB,IACfA,EAAMjC,UAAYnF,EAAUkC,KAAKkF,GAClCA,EAAMjC,UAAYgC,EAASC,EAAMjC,YAIrCgC,CAASD,KAEJhG,uBACEtB,EAGCA,EAAKuB,QAAU,MACjBF,EAAOnB,EAAcF,EAAK8B,KAH5BT,EAAOnB,EAAc,KAAQ,GAS3BmB,IACGA,EAAK/B,UAGR4C,EAAiBb,GAFjBA,EAAKoG,WAAY,IAOvBjB,EAAcC,EAAI,EAAYiB,GAGhC,SAASA,EAA4BC,GAvFrC,IAA+B1H,EAAAA,EAwFP,SAAUkG,IAKlC,SAAsCpC,GACpC6D,QAAQ,wBACR,IAAInB,EAAK,GAET3C,EAAiB5D,EADN6D,GAEX9C,EAAK8C,EAAW,SAAUhC,GACxBqD,EAAmBrD,GACnB0E,EAAGnE,KAAKP,EAASD,MAEnB8F,QAAQ,SAAU1H,EAAc,MAChCsG,EAAcC,EAAI,EAAYoB,GAd5BC,CAA6B3B,IAxF/ByB,QAAQ,gBACRlG,OAAOqG,sBAAsB,GAAI,SAAUhE,GACzC6D,QAAQ,gBACR3H,GAAYA,EAAS8D,IACpBmD,WAuGL,SAASW,EAAqBF,IAC3BjJ,EAAUsJ,UAAYtJ,EAAU,WAAYwB,EAAc,OAC1DxB,EAAUuJ,SAAWvJ,EAAU,UAAWwB,GAE3C,IAAIgI,EAAO9H,EAAU8H,KAAK,SAAU/D,GAClC,OAAOA,EAAEoB,oBAAoB4C,OAA6B,EAApBhE,EAAEoB,SAASpE,SAGnDjB,EAAc,YAAiBkI,SAASF,IAASlB,QAAQkB,EAAK3C,WAAa2C,EAAK3C,SAAS,GACzF,IAAI8C,EAAQlJ,EAAMmJ,MAAMC,QAEX,UAATF,GAA+B,YAAVA,EACvBlJ,EAAMqJ,OAAS9J,EAAUsJ,SAEzB7I,EAAMsJ,OAAO,WACXtJ,EAAMqJ,OAAS9J,EAAUsJ,WAI7BJ,QAAQ,gBAWV,SAASc,IAnJT,IAA4BzI,EACtB8B,EACAD,EAkJJ8D,aAAe,SAAU+C,GACvB,IAAIC,EAAK,GAET,IAAK,IAAIlI,KAAQiI,EACf,IAAK,IAAI3H,EAAI,EAAGA,EAAI2H,EAAKjI,GAAMS,OAAQH,IACrC4H,EAAGD,EAAKjI,GAAMM,GAAGc,IAAM6G,EAAKjI,GAAMM,GAAG2E,KAIzC,OAAOiD,EATM,CAUblK,EAAU,UAEPA,EAAUsJ,SAGbH,KAnKwB5H,EAiKLkH,EAhKjBpF,EAAWL,OAAOmH,SAAS,oBAAsB,IACjD/G,EAAKJ,OAAOkD,aAAa,OAAS7C,EAASD,KACzCJ,OAAOG,gBAAgBC,EAAI,SAAUC,GACzC9B,GAAYA,EAAS8B,MAEtBD,GAAM7B,GAAYA,EAAS,OA5Y9BsG,OAAS,GAAIjE,KAAO6F,MAAMW,UAAUxG,KAAM1B,SAAWmI,OAAOD,UAAUE,SAAUZ,SAAW3H,EAAO,UAAWwI,OAASxI,EAAO,QAASyI,YAAczI,EAAO,aAAcuG,QAAUvG,EAAO,SAAU0I,SAAW1I,EAAO,UAAW2I,WAAa3I,EAAO,YAAa4I,SAAW5I,EAAO,UAAWiB,OAASjC,IAAO6J,cAAgBC,EAAE,iCAAoCxH,SAAWL,OAAOkD,aAAa,YAAa4E,MAAQ9H,OAAOmH,SAAS,eAAgBY,MAAQ,CAAC,gBAAiB,iBAAkB,iBAAkB,eAAgBvC,UAAY,wGAAyGwC,UAAY,CAAC,KAAM,QAAS,WAAY,UAAW,cAAepI,qBACnqB,WACzBI,OAAOiI,YAAc,IADRC,SACa5E,8BAA+B,EAAOR,IAAM,CACtEqF,IAAO,SACPC,IAAO,WACPC,IAAO,UACPC,IAAQ,UAikBV7K,EAAM8K,cAAgB,GAEtB9K,EAAM+K,OAAS,SAAUC,GACvBhL,EAAMiL,OAAS,WACbD,EAAQC,OAAOjL,EAAM8K,iBAIzB9K,EAAMkL,KAAO,WACX3I,OAAO4I,iBAAiB,qBAAsB5L,EAAU,SAAa,WACnEiB,EAAM4K,QAAQ,WAId7L,EAAU,SACZgK,KArEmBzI,EAuEPyI,EAtEZhH,OAAO8I,gBAAgB,qBAAsB,SAAU7B,GACrDjK,EAAU,WAAYiK,GAEtB1I,GAAYA,SAsEjB,CACDnB,MAAO,yBACPC,YAAa,YACbC,KAAM,aACNC,SAAU,CAAC,SAAU,YAAa,oBAAqB,eAAgB,kBAAmB,sBAAuB,SACjHC,WAAY,SAAoBuL,EAAQnL,EAAWC,EAAmBC,EAAckL,EAAiBjL,EAAKE,GACxG,IAqH0BM,EArHtB8G,EAAMvH,EAAa,IACnBsC,EAAKtC,EAAa,GAElBkC,EAASjC,IAwBb,SAASkL,IACPF,EAAO7K,WAAa,CAAC,CACnBC,MAAO,SACPC,QAAQ,IAEV2K,EAAOG,OAAS,CACdC,cAAc,EACd7E,KAAMtH,EAAU,cAAiBwF,OAAO,SAAU4G,GAChD,OAAO,IAETC,KAAM,CACJC,UAAW,CACTnL,MAAO,SACPoL,GAAI,CACF7E,MAAO,SAAe8E,GACpB3L,EAAkBsC,gBAAgBC,EAAI,SAAU+C,GAC9C,GAAkB,GAAdA,EAAMiB,KAAW,CACnB,IAAIoC,EACAhH,EACAa,EAAW8C,EAAMmB,KAEV,KAAPe,EACF7F,EAAMxC,EAAU,SAAYsF,QACZ,KAAP+C,EACT7F,EAAMxC,EAAU,SAAYyM,UACZ,KAAPpE,EACT7F,EAAMxC,EAAU,SAAY0M,SACb,IAANrE,IACT7F,EAAMxC,EAAU,SAAY2M,UAG9BnD,EAAOhH,EAAIgH,KAAK,SAAU4C,GACxB,OAAOA,EAAEhJ,IAAMA,MAIfoG,EAAKvC,KAAK2F,OAASJ,EAAII,OACvBpD,EAAKvC,KAAKqF,UAAYE,EAAIF,WAE1B9J,EAAIoB,KAAK,CACPR,GAAIyJ,SAASzJ,GACbP,QAASgK,SAASxE,GAClBlH,MAAOkC,EAASlC,MAChB8F,KAAM,CACJ2F,OAAQJ,EAAII,OACZN,UAAWE,EAAIF,aAMrBtM,EAAUuJ,QAAQnG,GAAI6D,KAAO,CAC3B2F,OAAQJ,EAAII,OACZN,UAAWE,EAAIF,WAEjBrL,EAAM6L,KAAK,UACX9J,EAAOmE,YAAY,oBAAqB,oBAAqB,CAAC/D,EAAI,OAAQpD,EAAUuJ,QAAQnG,GAAI6D,MAAO,SAAUd,GAC3GA,EAAMiB,MACRnG,EAAM4K,QAAQ,QAGhBjL,EAAU6C,KAAK,kBAO3BmJ,OAAQ,CACNzL,MAAO,SACP4L,KAAM,SAAcP,GAClB,OAAOA,EAAII,QAEbI,MAAO,SAAeR,GACpB,MAAO,CACLS,MAAO,OACPC,kBAAmB,cAGvBlL,KAAM,OACNuK,GAAI,CACF7E,MAAO,SAAe8E,GACpBW,OAAOC,KAAK,+DAAmEZ,EAAII,OAAS,SAAU,eAxG7G5M,EAAU,UACbY,EAAU6C,KAAK,UAGF,SAAUwG,GACvB,IAAIC,EAAK,GAET,IAAK,IAAIlI,KAAQiI,EACf,IAAK,IAAI3H,EAAI,EAAGA,EAAI2H,EAAKjI,GAAMS,OAAQH,IACrC4H,EAAGD,EAAKjI,GAAMM,GAAG2E,KAAK2F,QAAU3C,EAAKjI,GAAMM,GAAG2E,KALrC,CAUbjH,EAAU,UAEPA,EAAU,cAGbiM,KA6FwB1K,EA/FP0K,EAgGjBD,EAAgBqB,sBAAsB,YAAa,KAAM,SAAUlH,GAC/C,GAAdA,EAAMiB,OACRpH,EAAU,gBAAiBmG,EAAMmB,MACjC/F","file":"solution/controllers/controller.js","sourcesContent":["define(function () {\n  var treeCache = createCache();\n\n  function createCache() {\n    //不可写为 function cache()编译时会丢失包内容\n    var cache = function cache(key, val) {\n      cache[key] = val;\n    };\n\n    return cache;\n  }\n\n  return [{\n    route: \"/rview\",\n    templateUrl: \"tree.html\",\n    name: \"ctrlTest3\",\n    injector: [\"$scope\", \"$rootScope\", \"$q\", \"$location\", \"resourceUIService\", \"$routeParams\", \"commonMethodService\", \"serviceProxy\", \"growl\"],\n    controller: function controller(scope, rootScope, q, $location, resourceUIService, $routeParams, cms, serviceProxy, growl) {\n      scope.navigators = [{\n        label: \"设备视图管理\",\n        active: true\n      }];\n      scope.a = 10;\n      var ALERTKPI = 999999;\n\n      var treeIns,\n          _res,\n          resourceIdMap = {\n        root: []\n      },\n          _projects = [],\n          _devices = [],\n          invalidNodes = [],\n          treeViewMap = null;\n\n      events = {}, push = Array.prototype.push, tostring = Object.prototype.toString, isObject = isType(\"Object\"), isNull = isType(\"Null\"), isUndefined = isType(\"Undefined\"), isArray = isType(\"Array\"), isNumber = isType(\"Number\"), isFunction = isType(\"Function\"), isString = isType(\"String\"), target = cms(), treenavigator = $(\"<div class=\\\"tree-menu\\\"></div>\"), resource = target.getParameter(\"resource\"), _role = target.getValue(\"global/ROLE\"), icons = ['tag tag-green', 'tag tag-yellow', 'tag tag-orange', 'tag tag-red'], extendstr = \"includeFields=id,label,modelId,values.view.viewTitle,values.view.viewId,domains,resourcetype,viewType\", _LOCATION = [null, \"index\", \"navigate\", \"factory\", \"production\"], _onlyDeviceClickable = function (param) {\n        return param.navitype == \"device\";\n      }(target.parameters || {}), _backToMainWhileDeviceChange = false, LOC = {\n        \"300\": \"domain\",\n        \"301\": \"customer\",\n        \"302\": \"project\",\n        \"1000\": \"device\"\n      };\n\n      function nextTick(fn) {\n        setTimeout(fn, 100);\n      }\n\n      function pushBack(arr, obj) {\n        if (isArray(obj)) {\n          push.apply(arr, obj);\n        } else {\n          push.call(arr, obj);\n        }\n      }\n\n      function isType(type) {\n        return function (obj) {\n          return tostring.call(obj) == \"[object \" + type + \"]\" && obj === obj;\n        };\n      }\n\n      function isNaN(num) {\n        return num !== num;\n      }\n\n      function bind(target, fn) {\n        return function () {\n          fn.apply(target, arguments);\n        };\n      }\n\n      function find(arr, callback) {\n        var i;\n        arr = arr || [];\n\n        for (var i = 0; i < arr.length; i++) {\n          if (callback(arr[i], i)) {\n            return arr[i];\n          }\n        }\n      }\n\n      function filter(arr, callback) {\n        var i,\n            rs = [];\n        arr = arr || [];\n\n        for (var i = 0; i < arr.length; i++) {\n          if (callback(arr[i], i)) {\n            rs.push(arr[i]);\n          }\n        }\n\n        return rs;\n      }\n\n      function clone(obj) {\n        return JSON.parse(JSON.stringify(obj));\n      }\n\n      function extend(a, b) {\n        for (var i in b) {\n          a[i] = b[i];\n        }\n      }\n\n      function each(arr, callback) {\n        var i;\n        arr = arr || [];\n\n        for (i = 0; i < arr.length; i++) {\n          callback && callback(arr[i], i);\n        }\n      }\n\n      function eachProp(obj, callback) {\n        var i;\n        obj = obj || {};\n\n        for (var i in obj) {\n          callback && callback(obj[i], i);\n        }\n      }\n\n      function insertBySort(children, inserted, rule) {\n        for (var i = children.length - 1; i > -1;) {\n          if (rule(inserted, children[i])) {\n            children[i + 1] = children[i];\n            i--;\n          } else {\n            break;\n          }\n        }\n\n        children[i + 1] = inserted;\n      }\n\n      ;\n\n      function getLocationByModel(model) {\n        var viewType = function (model) {\n          if (!model) return undefined;\n          var attrs = model.attrs || [];\n          var viewTypeAttr = attrs.find(function (elem) {\n            return elem.name == \"viewType\";\n          }) || {};\n          return viewTypeAttr.sourceValue;\n        }(model);\n\n        return viewType == \"motor\" ? \"motor\" : \"device\";\n      }\n\n      function nodeClick(node) {\n        if (_onlyDeviceClickable && node.modelId < 1000) return;\n        serviceProxy.removeAllRequest();\n\n        if (node.setHighlight) {\n          node.setHighlight(true);\n        }\n\n        ;\n        nextTick(function () {\n          if (_onlyDeviceClickable) {\n            analysisChangePath(node);\n          } else {\n            deviceChangePath(node);\n          }\n        });\n      }\n\n      function nodeClickMove(node) {\n        if (_onlyDeviceClickable && node.modelId < 1000) return;\n        serviceProxy.removeAllRequest();\n        /**\n         if(node.setHighlight){\n        node.setHighlight(true);\n        };*/\n\n        nextTick(function () {\n          //target.setParameter(\"id\", node.id);\n          //target.trigger(\"changeNavString\", changeNavString.call(node));\n          target.setParameter(\"sub\", null);\n          target.navigateTo(\"index\", {\n            main: target.getParameter(\"main\")\n          }, \"self\");\n        });\n      }\n\n      function deviceChangePath(node) {\n        var path = node.$location; //target.setParameter(\"id\", node.id);\n\n        target.trigger(\"changeNavString\", changeNavString.call(node));\n        getResourceById(node.id, function (resource) {\n          extend(node, resource);\n          target.setValue(\"global/resource\", node);\n          target.trigger(\"pathChange\", path);\n          target.trigger(\"tree_resourceChange\", {\n            resource: node\n          });\n          target.trigger(\"analysisShakeNavigateTo\", 0);\n        });\n      }\n\n      function analysisChangePath(node) {\n        var path = node.$location; //target.setParameter(\"id\", node.id);\n\n        target.trigger(\"changeNavString\", changeNavString.call(node));\n        getResourceById(node.id, function (resource) {\n          extend(node, resource);\n          target.setValue(\"global/resource\", node);\n          target.trigger(\"tree_resourceChange\", {\n            resource: node\n          });\n          target.trigger(\"analysisShakeNavigateTo\", 0);\n        });\n      }\n\n      function changeNavString() {\n        var node = this,\n            str,\n            arr = [node.label],\n            parent = node.parent;\n\n        while (parent) {\n          if (parent.id != 99) {\n            arr.push(parent.label);\n          }\n\n          parent = parent.parent;\n        }\n\n        arr.reverse();\n        return arr.join(\" > \");\n      }\n\n      function getResourceById(id, callback) {\n        target.getResourceById(id, function (resource) {\n          callback && callback(resource);\n        });\n      }\n\n      function getIcon(i) {\n        return icons[i - 1] || 'tag tag-green';\n      }\n\n      function error(msg) {\n        this.msg = msg;\n      }\n\n      ;\n\n      function rule(a, b) {\n        var regeExp = new RegExp(\"/\\\\d+/\", \"g\"),\n            val1 = a.values && a.values.number || null,\n            val2 = b.values && b.values.number || null;\n\n        function getMaxUnmber(variable) {\n          var maxLength = 0,\n              ret = regeExp.exec(variable.label);\n\n          while (ret != null) {\n            var num = ret[0].length;\n\n            if (num > maxLength) {\n              maxLength = num;\n            }\n\n            ret = regeExp.exec(variable.label);\n          }\n\n          return maxLength;\n        }\n\n        function addZeroBefore(word) {\n          var dif = max - word.length;\n\n          for (var i = 0; i < dif; i++) {\n            word = \"0\" + word;\n          }\n\n          return word;\n        }\n\n        if (val1 || val2) {\n          return val1 < val2;\n        } else {\n          var mnum1 = getMaxUnmber(a),\n              mnum2 = getMaxUnmber(b),\n              max = Math.max(mnum1, mnum2),\n              la = a.label.replace(regeExp, function (word) {\n            return addZeroBefore(word);\n          }),\n              lb = b.label.replace(regeExp, function (word) {\n            return addZeroBefore(word);\n          });\n          return la < lb;\n        }\n      }\n\n      function getLastTwo(domains) {\n        var arr = domains.split(\"/\").filter(function (e) {\n          return e;\n        });\n        return arr.slice(-2);\n      }\n\n      function checkModelId(modelId) {\n        if (modelId > 1000) {\n          return true;\n        } else {\n          return modelId == 300 || modelId == 301 || modelId == 302;\n        }\n      }\n\n      function extendToResIdMap(target, resources) {\n        var proj = {},\n            id,\n            type,\n            modelId; //extendToResIdMap.size = extendToResIdMap.size || 1/0;\n\n        each(resources, function (resource, i) {\n          var domains = resource.domains.split(\"/\").filter(function (e) {\n            return e;\n          }),\n              last2 = getLastTwo(resource.domains),\n              parentID = resource.id == last2[1] ? last2[0] : last2[1];\n\n          if (parentID !== resource.id) {\n            resource.parentID = parentID;\n            id = resource.id;\n            modelId = resource.modelId;\n            type = modelId > 1000 ? 1000 : modelId;\n            target[id] = resource;\n            resource.resourceType = LOC[type];\n          } else {\n            console.err(\"此节点为错误或无效节点\", resource);\n            invalidNodes.push(resource);\n          }\n        });\n        return target;\n      }\n\n      function clickFn() {\n        var id = target.getParameter(\"id\");\n\n        if (_onlyDeviceClickable && this.resourceType !== \"device\") {\n          event.preventDefault();\n          this.toggle();\n        } else if (id != this.id) {\n          if (_backToMainWhileDeviceChange) {\n            if (!target.getParameter(\"sub\")) {\n              nodeClick(this);\n            } else {\n              nodeClickMove(this);\n            }\n          } else {\n            nodeClick(this);\n          }\n        }\n      }\n\n      function inputToRelativeMap(resource) {\n        var domains = resource.domains,\n            parents,\n            modelId = resource.modelId,\n            parent = getParent(resource);\n        domains = domains.split(\"/\").filter(function (e) {\n          return e;\n        });\n\n        function getParent(resource) {\n          if (resource.parentID) {\n            return resourceIdMap[resource.parentID];\n          } else {\n            console.err(\"没有设置PARENTID属性\");\n          }\n        }\n\n        function getParentsWithSomeModelID(resource) {\n          var rs = [],\n              cached,\n              modelId = resource.modelId,\n              parent = resource;\n\n          while (parent = getParent(parent)) {\n            if (parent.modelId != modelId) {\n              break;\n            }\n\n            rs.push(parent);\n          }\n\n          return rs;\n        }\n\n        if (parent) {\n          parent.children = parent.children || [];\n          insertBySort(parent.children, resource, rule);\n        } else {\n          resourceIdMap['root'].push(resource);\n          console.assert(false, \"无根节点的节点\", resource);\n        }\n\n        if (resource.label == \"电厂\") {}\n\n        if (resource.values && resource.values.view) {\n          resource.view = resource.values.view;\n        } else {\n          resource.view = treeViewData[resource.id];\n\n          if (resource.view) {\n            saveResourceView(resource.id, resource.view).then(function (d) {// \n            });\n          }\n        }\n\n        resource.click = clickFn;\n\n        resource.$on = function (eventname, callback) {\n          events[eventname] = callback;\n        }; //console.assert(resource.$location, \"$location没正确倒入\", resource.label, resource.modelId, resource.layer);\n\n      }\n\n      function getCurrentResource(callback) {\n        var resource = target.getValue(\"global/resource\") || {},\n            id = target.getParameter(\"id\") || resource.id;\n        id && target.getResourceById(id, function (resource) {\n          callback && callback(resource);\n        });\n        !id && callback && callback(null);\n      }\n\n      function getDevicesByCondition(callback) {\n        runtime('resource开始加载');\n        target.getDevicesByCondition({}, function (resources) {\n          runtime('resource完成加载');\n          callback && callback(resources);\n        }, extendstr);\n      }\n\n      function getKpiValueCi(ci, kpi, callback) {\n        /**\n        runtime('getStatus开始加载');\n        target.getKpiValueCi(ci, kpi, function(valuelist){\n          runtime('getStatus完成加载');\n          callback && callback(valuelist)\n        },{\n          isRealTimeData: true\n        });*/\n        callback([]);\n      }\n\n      function getDomains(callback) {\n        var domains = [];\n        var mids = [300, 301, 302];\n        var i;\n\n        function getResourceByModelId(inx) {\n          var mid = mids[inx];\n\n          function handler(d) {\n            pushBack(domains, d);\n            getResourceByModelId(inx + 1);\n          }\n\n          mid && target.getResourceByModelId(mid, handler, extendstr);\n          !mid && callback && callback(domains);\n        }\n\n        getResourceByModelId(0);\n      }\n\n      function getCurrentResourceSuccess(resource) {\n        _res = resource;\n        getDomains(getDomainsSuccess);\n      }\n\n      function getDomainsSuccess(domains) {\n        extendToResIdMap(resourceIdMap, domains);\n        var ci = [],\n            node;\n        each(domains, function (domain) {\n          inputToRelativeMap(domain);\n          ci.push(domain.id);\n        });\n        dev = resourceIdMap['root'];\n\n        function traverse(d) {\n          each(d, function (child) {\n            !child.children && _projects.push(child);\n            child.children && traverse(child.children);\n          });\n        }\n\n        traverse(dev);\n\n        if (!_onlyDeviceClickable) {\n          if (!_res) {\n            node = resourceIdMap[\"root\"][0];\n          } else {\n            if (_res.modelId < 1000) {\n              node = resourceIdMap[_res.id];\n            }\n          }\n\n          ;\n\n          if (node) {\n            if (!node.$location) {\n              node.postponed = true;\n            } else {\n              deviceChangePath(node);\n            }\n          }\n        }\n\n        getKpiValueCi(ci, [ALERTKPI], getDomainsKpiValueCiSuccess);\n      }\n\n      function getDomainsKpiValueCiSuccess(valuelist) {\n        getDevicesByCondition(function (d) {\n          getDevicesByConditionSuccess(d);\n        });\n      }\n\n      function getDevicesByConditionSuccess(resources) {\n        runtime('getResourceSuccess开始');\n        var ci = [];\n        _devices = resources;\n        extendToResIdMap(resourceIdMap, resources);\n        each(resources, function (resource) {\n          inputToRelativeMap(resource);\n          ci.push(resource.id);\n        });\n        runtime(\"MAP全完成\", resourceIdMap['root']);\n        getKpiValueCi(ci, [ALERTKPI], getKpiValueCiSuccess);\n      }\n\n      ;\n\n      function getKpiValueCiSuccess(valuelist) {\n        !treeCache.treeData && treeCache(\"treeData\", resourceIdMap['root']);\n        !treeCache.treeMap && treeCache(\"treeMap\", resourceIdMap);\n\n        var find = _projects.find(function (e) {\n          return e.children instanceof Array && e.children.length > 0;\n        });\n\n        resourceIdMap['firstDevice'] = isObject(find) && isArray(find.children) && find.children[0];\n        var phase = scope.$root.$$phase;\n\n        if (phase == \"$apply\" || phase === \"$digest\") {\n          scope.option = treeCache.treeData;\n        } else {\n          scope.$apply(function () {\n            scope.option = treeCache.treeData;\n          });\n        }\n\n        runtime('resource加载完成');\n      }\n\n      function getTreeView(callback) {\n        target.getEditorStatus(\"DomainAreaLineTree\", function (tree) {\n          treeCache('treeview', tree); //saveTreeDateToResource(tree);\n\n          callback && callback();\n        });\n      }\n\n      function getTreeViewSuccess() {\n        treeViewData = function (tree) {\n          var rs = {};\n\n          for (var type in tree) {\n            for (var i = 0; i < tree[type].length; i++) {\n              rs[tree[type][i].id] = tree[type][i].view;\n            }\n          }\n\n          return rs;\n        }(treeCache['treeview']);\n\n        if (!treeCache.treeData) {\n          getCurrentResource(getCurrentResourceSuccess);\n        } else {\n          getKpiValueCiSuccess();\n        }\n      }\n      /**\n      function saveTreeDateToResource(tree){\n        var defers = [];\n        eachProp(tree, function(n, i){\n          each(n, function(n){\n            defers.push(saveResource(n.id, {\n              viewId : n.view.viewId\n            }))\n          })\n        });\n        q.all(defers).then(function(resources){\n           \n        })\n      }*/\n\n\n      function saveResourceView(id, obj) {\n        var defer = q.defer();\n        target.postService(\"resourceUIService\", \"updateDeviceValue\", [id, \"view\", obj], function (event) {\n          if (event.code) {\n            defer.resolve(event.data);\n          }\n        });\n        return defer.promise;\n      }\n\n      ;\n      scope.searchContent = \"\";\n\n      scope.oninit = function (treeIns) {\n        scope.search = function () {\n          treeIns.search(scope.searchContent);\n        };\n      };\n\n      scope.save = function () {\n        target.saveEditorStatus(\"DomainAreaLineTree\", treeCache['treeview'], function () {\n          growl.success(\"保存完成\");\n        });\n      };\n\n      if (treeCache['treeview']) {\n        getTreeViewSuccess();\n      } else {\n        getTreeView(getTreeViewSuccess);\n      }\n    }\n  }, {\n    route: \"/rview_select/:mid/:id\",\n    templateUrl: \"test.html\",\n    name: \"dialogtest\",\n    injector: [\"$scope\", \"$location\", \"resourceUIService\", \"$routeParams\", \"viewFlexService\", \"commonMethodService\", \"growl\"],\n    controller: function controller($scope, $location, resourceUIService, $routeParams, viewFlexService, cms, growl) {\n      var mid = $routeParams['mid'],\n          id = $routeParams['id'],\n          treeViewData,\n          target = cms();\n\n      if (!treeCache['treeview']) {\n        $location.path(\"/rview\");\n      }\n\n      treeViewData = function (tree) {\n        var rs = {};\n\n        for (var type in tree) {\n          for (var i = 0; i < tree[type].length; i++) {\n            rs[tree[type][i].view.viewId] = tree[type][i].view;\n          }\n        }\n\n        return rs;\n      }(treeCache['treeview']);\n\n      if (!treeCache['configureview']) {\n        getConfigureView(getConfigureViewSuccess);\n      } else {\n        getConfigureViewSuccess();\n      }\n\n      function getConfigureViewSuccess() {\n        $scope.navigators = [{\n          label: \"选择组态视图\",\n          active: true\n        }];\n        $scope.source = {\n          showSelector: false,\n          data: treeCache['configureview'].filter(function (n) {\n            return true; //!treeViewData[n.viewId];\n          }),\n          body: {\n            viewTitle: {\n              label: \"组态视图名称\",\n              on: {\n                click: function click(row) {\n                  resourceUIService.getResourceById(id, function (event) {\n                    if (event.code == 0) {\n                      var find,\n                          arr,\n                          resource = event.data;\n\n                      if (mid == 300) {\n                        arr = treeCache['treeview'].domains;\n                      } else if (mid == 301) {\n                        arr = treeCache['treeview'].customers;\n                      } else if (mid == 302) {\n                        arr = treeCache['treeview'].projects;\n                      } else if (mid > 1000) {\n                        arr = treeCache['treeview'].devices;\n                      }\n\n                      find = arr.find(function (n) {\n                        return n.id == id;\n                      });\n\n                      if (find) {\n                        find.view.viewId = row.viewId;\n                        find.view.viewTitle = row.viewTitle;\n                      } else {\n                        arr.push({\n                          id: parseInt(id),\n                          modelId: parseInt(mid),\n                          label: resource.label,\n                          view: {\n                            viewId: row.viewId,\n                            viewTitle: row.viewTitle\n                          }\n                        });\n                      }\n\n                      ;\n                      treeCache.treeMap[id].view = {\n                        viewId: row.viewId,\n                        viewTitle: row.viewTitle\n                      };\n                      growl.info(\"保存中请稍后\");\n                      target.postService(\"resourceUIService\", \"updateDeviceValue\", [id, \"view\", treeCache.treeMap[id].view], function (event) {\n                        if (event.code) {\n                          growl.success(\"修改成功\");\n                        }\n\n                        $location.path(\"/rview\");\n                      });\n                    }\n                  });\n                }\n              }\n            },\n            viewId: {\n              label: \"组态视图链接\",\n              bind: function bind(row) {\n                return row.viewId;\n              },\n              style: function style(row) {\n                return {\n                  color: \"blue\",\n                  \"text-decoration\": \"underline\"\n                };\n              },\n              type: \"text\",\n              on: {\n                click: function click(row) {\n                  window.open(\"../app-free-style/index.html#/topoview/index/%5B%7B\\\"viewId\\\":\" + row.viewId + \"%7D%5D\", \"_blank\");\n                }\n              }\n            }\n          }\n        };\n      }\n\n      function getConfigureView(callback) {\n        viewFlexService.getManagedViewsByType(\"configure\", null, function (event) {\n          if (event.code == 0) {\n            treeCache('configureview', event.data);\n            callback();\n          }\n        });\n      }\n    }\n  }];\n});"],"sourceRoot":"/source/"}