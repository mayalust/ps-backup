{"version":3,"sources":["solution/customview/generalMultiSelect.js"],"names":["define","on","init","event","runtime","target","global","resource","getValue","multiSelectValues","name","success","accessConfigValues","physicalConfig","accessConfigs","getAttrsByResource","attrs","MeasurePointLocate","sourceValue","eval","sourceValueArr","i","j","k","ins","configValues","filter","accessConfigValue","instance","push","elem","test","label","render","getConfigValues","kpiDes","map","setValue","trigger","nextTick","ctrlGroups","type","value","multiselect","source","style","padding","change","options","format","id","length","off","node"],"mappings":"AAAAA,OAAO,CACLC,GAAI,CACFC,KAAM,SAASA,KAAKC,OAClBC,QAAQ,WACR,IAAIC,OAASF,MAAME,OACfC,OAASH,MAAMG,OACfC,SAAWF,OAAOG,SAAS,mBAC3BC,kBAAoB,GACpBC,KAAOL,OAAOG,SAAS,mBAEvBG,QAAU,SAASA,QAAQJ,UAC7BE,kBAAoB,GACpB,IAAIG,mBAAqBL,SAASM,eAAiBN,SAASM,eAAeC,cAAgB,KAC3FT,OAAOU,mBAAmBR,SAAU,SAAUS,OAC5C,IAAIC,mBAAqBD,MAAMC,mBAC3BC,YAAcC,KAAKF,qBAAuB,GAC1CG,eAAiB,GAErB,IAAK,IAAIC,KAAKH,YACZ,IAAK,IAAII,KAAKJ,YAAYG,GACxB,IAAK,IAAIE,KAAKL,YAAYG,GAAGC,GAAI,CAC/B,IAAIE,IAAMN,YAAYG,GAAGC,GAAGC,GAC5BC,IAAIC,aAAeb,mBAAmBc,OAAO,SAAUC,GACrD,OAAOH,IAAId,MAAQiB,EAAkBC,WAEvCR,eAAeS,KAAKL,KAM1BJ,eAAiBA,eAAeM,OAAO,SAAUI,GAE/C,OADa,YACEC,KAAKD,EAAKE,SAG3B,IAAIC,OAAS,SAASA,IACpB,IAAIC,EAAkB,SAAyBJ,GAC7C,OAAOA,EAAKL,cAGVU,EAAS1B,kBAAkBiB,OAAOQ,GAAiBE,IAAIF,GAAiB,GAC5E7B,OAAOgC,SAAS,aAAcF,GAE1BA,GACF9B,OAAOiC,QAAQ,oBAAoB,GACnCjC,OAAOkC,SAAS,WACdlC,OAAOiC,QAAQ,oBAAqBH,MAGtC9B,OAAOiC,QAAQ,oBAAoB,GAIrC,IAAIE,EAAa,CAAC,CAAC,CACjBC,KAAM,QACNC,MAAO,SACL,CAAC,CACHD,KAAM,eACNE,aAAa,EACbD,MAAOjC,kBAAkB2B,IAAI,SAAUQ,GACrC,OAAOA,EAAOlC,OAEhBmC,MAAO,CACLC,QAAW,OAEb7C,GAAI,CACF8C,OAAQ,SAAgBjB,GACLA,EAAKY,MACtBjC,kBAAoBqB,EAAKY,MACzBT,MAGJe,QAAS5B,eACT6B,OAAQ,CACNC,GAAM,OACNlB,MAAS,YAGb7B,MAAME,OAAO4B,OAAOO,IAGtBpC,QAAQ,WAEoB,EAAxBgB,eAAe+B,QAEf1C,kBADEC,KACkBU,eAAeM,OAAO,SAAUI,GAClD,OAAOA,EAAKpB,MAAQA,OAGF,CAACU,eAAe,IAItCa,SACA5B,OAAOiC,QAAQ,oBAAoB,IAEnCjC,OAAOkC,SAAS,WACdlC,OAAOiC,QAAQ,oBAAqB,MACpCjC,OAAOiC,QAAQ,oBAAoB,QAOvC/B,UACFI,QAAQJ,UAGVF,OAAO+C,IAAI,yCACX/C,OAAOJ,GAAG,wCAAyC,SAAyCoD,GAC1F1C,QAAQ0C,EAAK9C","file":"solution/customview/generalMultiSelect.js","sourcesContent":["define({\n  on: {\n    init: function init(event) {\n      runtime(\"右边树开始加载\");\n      var target = event.target;\n      var global = event.global;\n      var resource = target.getValue(\"global/resource\");\n      var multiSelectValues = [];\n      var name = target.getValue(\"global/instance\");\n\n      var success = function success(resource) {\n        multiSelectValues = [];\n        var accessConfigValues = resource.physicalConfig ? resource.physicalConfig.accessConfigs : null;\n        target.getAttrsByResource(resource, function (attrs) {\n          var MeasurePointLocate = attrs.MeasurePointLocate;\n          var sourceValue = eval(MeasurePointLocate) || \"\";\n          var sourceValueArr = [];\n\n          for (var i in sourceValue) {\n            for (var j in sourceValue[i]) {\n              for (var k in sourceValue[i][j]) {\n                var ins = sourceValue[i][j][k];\n                ins.configValues = accessConfigValues.filter(function (accessConfigValue) {\n                  return ins.name == accessConfigValue.instance;\n                });\n                sourceValueArr.push(ins);\n              }\n            }\n          }\n\n          ;\n          sourceValueArr = sourceValueArr.filter(function (elem) {\n            var regExp = /\\s*整体\\s*/g;\n            return !regExp.test(elem.label);\n          });\n\n          var render = function render() {\n            var getConfigValues = function getConfigValues(elem) {\n              return elem.configValues;\n            };\n\n            var kpiDes = multiSelectValues.filter(getConfigValues).map(getConfigValues)[0];\n            target.setValue(\"global/kpi\", kpiDes);\n\n            if (kpiDes) {\n              target.trigger(\"showGeneralChart\", true);\n              target.nextTick(function () {\n                target.trigger(\"multiSelectValues\", kpiDes);\n              });\n            } else {\n              target.trigger(\"showGeneralChart\", false);\n            }\n\n            ;\n            var ctrlGroups = [[{\n              type: \"label\",\n              value: \"测点选择\"\n            }], [{\n              type: \"checkboxlist\",\n              multiselect: false,\n              value: multiSelectValues.map(function (source) {\n                return source.name;\n              }),\n              style: {\n                \"padding\": \"0px\"\n              },\n              on: {\n                change: function change(elem) {\n                  var elemValues = elem.value;\n                  multiSelectValues = elem.value;\n                  render();\n                }\n              },\n              options: sourceValueArr,\n              format: {\n                \"id\": \"name\",\n                \"label\": \"label\"\n              }\n            }]];\n            event.target.render(ctrlGroups);\n          };\n\n          runtime(\"右边树加载完成\");\n\n          if (sourceValueArr.length > 0) {\n            if (name) {\n              multiSelectValues = sourceValueArr.filter(function (elem) {\n                return elem.name == name;\n              });\n            } else {\n              multiSelectValues = [sourceValueArr[0]];\n            }\n\n            ;\n            render();\n            target.trigger(\"showGeneralChart\", true);\n          } else {\n            target.nextTick(function () {\n              target.trigger(\"multiSelectValues\", null);\n              target.trigger(\"showGeneralChart\", false);\n            });\n          } //})\n\n        });\n      };\n\n      if (resource) {\n        success(resource);\n      }\n\n      target.off(\"tree_resourceChange.generalChartMulti\");\n      target.on(\"tree_resourceChange.generalChartMulti\", function tree_resourceChange_multiSelect(node) {\n        success(node.resource);\n      });\n    }\n  }\n});"],"sourceRoot":"/source/"}