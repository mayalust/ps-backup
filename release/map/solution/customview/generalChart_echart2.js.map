{"version":3,"sources":["solution/customview/generalChart_echart2.js"],"names":["define","on","init","event","endTime","startTime","target","resource","global","getValue","kpiDes","alertTime","dateHandler","clone","addHour","getUTCDateString","renderEchart","renderEchartFn","showLoading","hideNoData","getKpiTypeByFilter","hasSingnal","noSignalkpis","id","getParameter","ci","extension","includeInstance","queryInstances","isRealTimeData","kpi","map","elem","dataItemId","getKpiValueList","returnData","hideLoading","length","minDate","reduce","a","b","dt","arisingTime","before","series","after","name","kpiName","type","symbolSize","data","filter","vdata","kpiCode","instance","sort","dt1","Date","getTime","dh","minus","value","option","animation","title","textStyle","color","grid","containLabel","left","right","tooltip","trigger","formatter","params","c","str","i","time","val","marker","seriesIndex","addTimeStamp","getDateString","legend","toolbox","feature","dataZoom","restore","saveAsImage","backgroundColor","iconStyle","normal","borderColor","emphasis","xAxis","boundaryGap","axisLabel","yAxis","render","showNoData","off","dataItems","res","dateRangeTime"],"mappings":"AAAAA,OAAO,CACLC,GAAI,CACFC,KAAM,SAAcC,GAClB,IAMIC,EACAC,EAPAC,EAASH,EAAMG,OAIfC,GAHSJ,EAAMK,OAGJF,EAAOG,SAAS,oBAC3BC,EAASJ,EAAOG,SAAS,cAGzBE,EAAYL,EAAOG,SAAS,oBAE5BE,GACFA,EAAYL,EAAOM,YAAYD,GAC/BN,EAAYM,EAAUE,QACtBT,EAAUO,EAAUE,QACpBR,EAAUS,SAAS,GACnBV,EAAQU,QAAQ,KAEhBV,EAAUE,EAAOM,eACjBP,EAAYD,EAAQS,SACVC,SAAS,IAIrBT,EAAYA,EAAUU,mBACtBX,EAAUA,EAAQW,mBAElB,IAAIC,EAAe,SAASC,IAE1BD,EAAe,aAGfV,EAAOY,cACPZ,EAAOa,aACPb,EAAOc,mBAAmB,CACxBC,YAAY,GACX,SAAUC,GACX,IAAIC,EAAKjB,EAAOkB,aAAa,MACzBC,EAAKF,EAAK,CAACA,GAAM,CAAChB,EAASgB,IAC3BG,EAAY,CACdC,iBAAiB,EACjBC,eAAgB,KAChBC,gBAAgB,GAGdxB,IACFqB,EAAU,UAAerB,GAGvBD,IACFsB,EAAU,QAAatB,GAGzB,IACI0B,EAAMpB,GAAUA,EAAOqB,IAAI,SAAUC,GACvC,OAAOA,EAAKC,cACR,GACN3B,EAAO4B,gBAAgBT,EAAIK,EAAK,KAAM,SAAUK,GAG9C,GAFA7B,EAAO8B,cAEiB,EAApBD,EAAWE,OACb,CAAA,IAAIC,EAAUH,EAAWI,OAAO,SAAUC,EAAGC,GAC3C,IAAIC,EAAKpC,EAAOM,YAAY6B,EAAEE,aAE9B,OAAIH,EACEE,EAAGE,OAAOJ,GACLE,EAEAF,EAGFE,GAER,MAcCG,GAbUV,EAAWI,OAAO,SAAUC,EAAGC,GAC3C,IAAIC,EAAKpC,EAAOM,YAAY6B,EAAEE,aAE9B,OAAIH,EACEE,EAAGI,MAAMN,GACJE,EAEAF,EAGFE,GAER,MACUhC,EAAOqB,IAAI,SAAUD,GAoBhC,MAnBS,CACPiB,KAAMjB,EAAIkB,QACVC,KAAM,OACNC,WAAY,EACZC,KAAMhB,EAAWiB,OAAO,SAAUC,GAChC,IAAIC,EAAUD,EAAMC,QAChBC,EAAWF,EAAME,SACrB,OAAOzB,EAAIG,YAAcqB,GAAWxB,EAAIyB,UAAYA,IACnDC,KAAK,SAAUhB,EAAGC,GACnB,IAAIgB,EAAM,IAAIC,KAAKlB,EAAEG,aAErB,OADU,IAAIe,KAAKjB,EAAEE,aACVgB,UAAYF,EAAIE,YAC1B5B,IAAI,SAAUC,GACf,IAAIU,EAAK,IAAIgB,KAAK1B,EAAKW,aACnBiB,EAAKtD,EAAOM,YAAY8B,GAChBpC,EAAOM,YAAY,cAC/B,MAAO,CAACgD,EAAGC,MAAMvB,GAAUN,EAAK8B,aAKlCC,EAAS,CACXC,WAAW,EACXC,MAAO,CACLC,UAAW,CACTC,MAAO,SAGXC,KAAM,CACJC,aAAc,OACdC,KAAM,OACNC,MAAO,QAETC,QAAS,CACPC,QAAS,OACTC,UAAW,SAAmBC,EAAQlC,EAAGmC,GAGvC,IAFA,IAAIC,EAAM,GAEDC,EAAI,EAAGA,EAAIH,EAAOtC,OAAQyC,IAAK,CACtC,IAAIC,EAAOJ,EAAOG,GAAGhB,MAAM,GACvBkB,EAAML,EAAOG,GAAGhB,MAAM,GACtBmB,EAASN,EAAOG,GAAGG,OACnBC,EAAcP,EAAOG,GAAGI,YAE5BL,GAAOI,EADC3C,EAAQzB,QAAQsE,aAAaJ,GACnBK,cAAc,kBAAoB,OACpDP,GAAOnE,EAAOwE,GAAalC,QAAU,IAAMgC,EAAM,OAGnD,OAAOH,IAGXQ,OAAQ,CACNlC,KAAMzC,EAAOqB,IAAI,SAAUC,GACzB,OAAOA,EAAKgB,WAGhBsC,QAAS,CACPC,QAAS,CACPC,SAAU,GACVC,QAAS,GACTC,YAAa,CACXzC,KAAM,MACNF,KAAM,aACN4C,gBAAiB,YAGrBC,UAAW,CACTC,OAAQ,CACNC,YAAa,QAEfC,SAAU,CACRD,YAAa,UAInBE,MAAO,CACLC,aAAa,EACbhD,KAAM,QACNiD,UAAW,CACTxB,UAAW,SAAmBC,GAE5B,OADQrC,EAAQzB,QAAQsE,aAAaR,GAC5BS,cAAc,qBAI7Be,MAAO,CACLlD,KAAM,SAcRJ,OAAQA,GAEAvC,EAAO8F,OAAOrC,QAExBzD,EAAO+F,aAKTrF,EAAeC,GACdS,MAIPpB,EAAOgG,IAAI,oCACXhG,EAAOL,GAAG,mCAAoC,SAA4BsG,GAExE7F,EAAS6F,EAELhG,GAAYG,GACdM,MAGJV,EAAOgG,IAAI,qCACXhG,EAAOL,GAAG,oCAAqC,SAA2CuG,GAExFjG,EAAWiG,EAAIjG,WAYjBD,EAAOgG,IAAI,4CACXhG,EAAOL,GAAG,2CAA4C,SAAoCwG,GAExFpG,EAAYoG,EAAc,GAAG1F,mBAC7BX,EAAUqG,EAAc,GAAG1F,mBAEvBR,GAAYG,GACdM","file":"solution/customview/generalChart_echart2.js","sourcesContent":["define({\n  on: {\n    init: function init(event) {\n      var target = event.target;\n      var global = event.global;\n      var color = \"#ffe400\";\n      var LENGTH = 50;\n      var resource = target.getValue(\"global/resource\");\n      var kpiDes = target.getValue(\"global/kpi\");\n      var endTime;\n      var startTime;\n      var alertTime = target.getValue(\"global/alertTime\");\n\n      if (alertTime) {\n        alertTime = target.dateHandler(alertTime);\n        startTime = alertTime.clone();\n        endTime = alertTime.clone();\n        startTime.addHour(-2);\n        endTime.addHour(1);\n      } else {\n        endTime = target.dateHandler();\n        startTime = endTime.clone();\n        startTime.addHour(-2);\n      }\n\n      ;\n      startTime = startTime.getUTCDateString();\n      endTime = endTime.getUTCDateString();\n\n      var renderEchart = function renderEchartFn() {\n        // \n        renderEchart = function renderEchart() {//  \n        };\n\n        target.showLoading();\n        target.hideNoData();\n        target.getKpiTypeByFilter({\n          hasSingnal: false\n        }, function (noSignalkpis) {\n          var id = target.getParameter(\"id\");\n          var ci = id ? [id] : [resource.id];\n          var extension = {\n            includeInstance: true,\n            queryInstances: \"00\",\n            isRealTimeData: false\n          };\n\n          if (startTime) {\n            extension['startTime'] = startTime;\n          }\n\n          if (endTime) {\n            extension['endTime'] = endTime;\n          }\n\n          var xAxis = [];\n          var kpi = kpiDes && kpiDes.map(function (elem) {\n            return elem.dataItemId;\n          }) || [];\n          target.getKpiValueList(ci, kpi, null, function (returnData) {\n            target.hideLoading(); // console.warn(extension, ci, kpi, returnData);\n\n            if (returnData.length > 0) {\n              var minDate = returnData.reduce(function (a, b) {\n                var dt = target.dateHandler(b.arisingTime);\n\n                if (a) {\n                  if (dt.before(a)) {\n                    return dt;\n                  } else {\n                    return a;\n                  }\n                } else {\n                  return dt;\n                }\n              }, null);\n              var maxDate = returnData.reduce(function (a, b) {\n                var dt = target.dateHandler(b.arisingTime);\n\n                if (a) {\n                  if (dt.after(a)) {\n                    return dt;\n                  } else {\n                    return a;\n                  }\n                } else {\n                  return dt;\n                }\n              }, null);\n              var series = kpiDes.map(function (kpi) {\n                var rs = {\n                  name: kpi.kpiName,\n                  type: \"line\",\n                  symbolSize: 0,\n                  data: returnData.filter(function (vdata) {\n                    var kpiCode = vdata.kpiCode;\n                    var instance = vdata.instance;\n                    return kpi.dataItemId == kpiCode && kpi.instance == instance;\n                  }).sort(function (a, b) {\n                    var dt1 = new Date(a.arisingTime);\n                    var dt2 = new Date(b.arisingTime);\n                    return dt2.getTime() - dt1.getTime();\n                  }).map(function (elem) {\n                    var dt = new Date(elem.arisingTime);\n                    var dh = target.dateHandler(dt);\n                    var D2017 = target.dateHandler(\"2017/01/01\");\n                    return [dh.minus(minDate), elem.value];\n                  })\n                };\n                return rs;\n              });\n              var option = {\n                animation: false,\n                title: {\n                  textStyle: {\n                    color: \"#fff\"\n                  }\n                },\n                grid: {\n                  containLabel: \"true\",\n                  left: \"23px\",\n                  right: \"50px\"\n                },\n                tooltip: {\n                  trigger: 'axis',\n                  formatter: function formatter(params, b, c) {\n                    var str = \"\";\n\n                    for (var i = 0; i < params.length; i++) {\n                      var time = params[i].value[0];\n                      var val = params[i].value[1];\n                      var marker = params[i].marker;\n                      var seriesIndex = params[i].seriesIndex;\n                      var d = minDate.clone().addTimeStamp(time);\n                      str += marker + d.getDateString(\"MM/dd,hh:mm:ss\") + \"<br>\";\n                      str += kpiDes[seriesIndex].kpiName + \":\" + val + \"<br>\";\n                    }\n\n                    return str;\n                  }\n                },\n                legend: {\n                  data: kpiDes.map(function (elem) {\n                    return elem.kpiName;\n                  })\n                },\n                toolbox: {\n                  feature: {\n                    dataZoom: {},\n                    restore: {},\n                    saveAsImage: {\n                      type: \"png\",\n                      name: \"综合趋势-工艺参数图\",\n                      backgroundColor: \"#0b2232\"\n                    }\n                  },\n                  iconStyle: {\n                    normal: {\n                      borderColor: \"#fff\"\n                    },\n                    emphasis: {\n                      borderColor: \"#fff\"\n                    }\n                  }\n                },\n                xAxis: {\n                  boundaryGap: false,\n                  type: 'value',\n                  axisLabel: {\n                    formatter: function formatter(params) {\n                      var d = minDate.clone().addTimeStamp(params);\n                      return d.getDateString(\"MM/dd,hh:mm:ss\");\n                    }\n                  }\n                },\n                yAxis: {\n                  type: 'value'\n                },\n\n                /**\n                dataZoom: [{\n                show: false,\n                realtime: true,\n                startValue: maxDate.minus(minDate) - 4 * 3600 * 1000,\n                endValue: maxDate.minus(minDate),\n                labelFormatter : function(value){\n                      var d = minDate.clone().addTimeStamp(value)\n                      return d.getDateString(\"MM/dd,hh:mm:ss\");\n                  }\n                }],*/\n                series: series\n              };\n              var ins = target.render(option);\n            } else {\n              target.showNoData();\n            }\n\n            ; // \n\n            renderEchart = renderEchartFn;\n          }, extension);\n        });\n      };\n\n      target.off(\"multiSelectValues2.generalChart2\");\n      target.on(\"multiSelectValues2.generalChart2\", function multiSelectValues2(dataItems) {\n        // \n        kpiDes = dataItems; //  \n\n        if (resource && kpiDes) {\n          renderEchart();\n        }\n      });\n      target.off(\"tree_resourceChange.generalChart2\");\n      target.on(\"tree_resourceChange.generalChart2\", function tree_resourceChange_generalChart2(res) {\n        // \n        resource = res.resource; // renderEchart();\n\n        /**\n         if(resource && kpiDes){\n          renderEchart();\n        }*/\n      });\n      /**\n       if(resource && kpiDes){\n        renderEchart();\n      }*/\n\n      target.off(\"drawDiagnoseFeatureEchart2.generalChart2\");\n      target.on(\"drawDiagnoseFeatureEchart2.generalChart2\", function drawDiagnoseFeatureEchart2(dateRangeTime) {\n        // \n        startTime = dateRangeTime[0].getUTCDateString();\n        endTime = dateRangeTime[1].getUTCDateString();\n\n        if (resource && kpiDes) {\n          renderEchart();\n        } //测点（指标）\n\n      });\n    }\n  }\n});"],"sourceRoot":"/source/"}