{"version":3,"sources":["solution/customview/deviceAreaPreview/home.js"],"names":["define","on","init","event","target","lngs","lngsstart","lats","latsstart","getRootScope","render","$on","queryDomainTree","dt","domains","domainInfos","sort","a","b","y1","$attr","ci","map","elem","id","getKpiValueCi","valuelist","create3Dbar","domain","name","label","lng","values","longitude","lat","latitude","deviceAll","description","ins","find","value","nodeId","kpiCode","deviceNum","persentage","setAlarmStatus","setValue","x","y","setPos","navigateToTab","index","i","isRealTimeData","includeInstance"],"mappings":"AAAAA,OAAO,CACLC,GAAM,CACJC,KAAQ,SAAcC,GACpB,IAAIC,EAASD,EAAMC,OAKfC,EAAO,CAJK,GAIOC,KACnBC,EAAO,CAHK,KAGOC,MACPJ,EAAOK,eACvBL,EAAOM,SAEPN,EAAOO,IAAI,uBAAwB,WACjCP,EAAOQ,gBAAgB,SAAUC,GAC/B,IAAIC,EAAUD,EAAG,GAAGE,YACpBD,EAAQE,KAAK,SAAUC,EAAGC,GACxB,IAAIC,EAAKF,EAAEG,MAAM,mBAEjB,OADSF,EAAEE,MAAM,mBACLD,IAEd,IAEIE,EAAKP,EAAQQ,IAAI,SAAUC,GAC7B,OAAOA,EAAKC,KAGdpB,EAAOqB,cAAcJ,EADX,CAAC,OAAQ,MACW,SAAUK,GACtC,IAAIC,EAAc,SAAqBC,GACrC,IAAIC,EAAOD,EAAOE,MACdC,EAAMH,EAAOI,OAAOC,UACpBC,EAAMN,EAAOI,OAAOG,SACpBC,EAAYR,EAAOS,YAEN,KAAbD,IACFA,EAAY,GAGdhC,EAAOuB,YAAYE,EAAM,SAAUS,GACjC,IAAIC,EAAOb,EAAUa,KAAK,SAAUC,GAClC,OAAOA,EAAMC,QAAUb,EAAOJ,IAAuB,QAAjBgB,EAAME,WACtC,GACFC,EAAYjB,EAAUa,KAAK,SAAUC,GACvC,OAAOA,EAAMC,QAAUb,EAAOJ,IAAuB,MAAjBgB,EAAME,WACtC,GAGFC,EAAUH,MAAQJ,IACpBO,EAAUH,MAAQJ,GAGpB,IAAIQ,EAAaD,EAAUH,MAAQJ,EAAY,IAC/CE,EAAIO,eAAeN,EAAKC,OAExBF,EAAIQ,SAASF,GAAc,GAE3B,IAAIG,GAAKhB,EAAM1B,EAAK,KAAOA,EAAK,GAAKA,EAAK,IAAM,KAC5C2C,GAAKzC,EAAK,GAAK2B,IAAQ3B,EAAK,GAAKA,EAAK,IAAM,IAChD+B,EAAIW,OAAO,CACTF,EAAGA,EACHC,EAAGA,IAELV,EAAIrC,GAAG,QAAS,SAAUE,GAGxBC,EAAO8C,cAAc,CACnBC,MAHS,WAIT3B,GAAII,EAAOJ,UAMnB,IAAK,IAAI4B,KAAKtC,EACZa,EAAYb,EAAQsC,KAErB,CACDC,gBAAkB,EAClBC,iBAAmB","file":"solution/customview/deviceAreaPreview/home.js","sourcesContent":["define({\n  \"on\": {\n    \"init\": function init(event) {\n      var target = event.target;\n      var lngsstart = 72;\n      var lngswidth = 65;\n      var latsstart = 13.5;\n      var latswidth = 40;\n      var lngs = [lngsstart, lngsstart + lngswidth];\n      var lats = [latsstart, latsstart + latswidth];\n      var rootScope = target.getRootScope();\n      target.render(); //debugger;\n\n      target.$on(\"$renderGraphComplete\", function () {\n        target.queryDomainTree(function (dt) {\n          var domains = dt[0].domainInfos;\n          domains.sort(function (a, b) {\n            var y1 = a.$attr(\"values/latitude\");\n            var y2 = b.$attr(\"values/latitude\");\n            return y2 - y1;\n          });\n          var WIDTH = 1200,\n              HEIGHT = 700;\n          var ci = domains.map(function (elem) {\n            return elem.id;\n          });\n          var kpi = [999999, 3014];\n          target.getKpiValueCi(ci, kpi, function (valuelist) {\n            var create3Dbar = function create3Dbar(domain) {\n              var name = domain.label;\n              var lng = domain.values.longitude;\n              var lat = domain.values.latitude;\n              var deviceAll = domain.description;\n\n              if (deviceAll == \" \") {\n                deviceAll = 0;\n              }\n\n              target.create3Dbar(name, function (ins) {\n                var find = valuelist.find(function (value) {\n                  return value.nodeId == domain.id && value.kpiCode == 999999;\n                }) || {};\n                var deviceNum = valuelist.find(function (value) {\n                  return value.nodeId == domain.id && value.kpiCode == 3014;\n                }) || {}; // \n                // \n\n                if (deviceNum.value > deviceAll) {\n                  deviceNum.value = deviceAll;\n                }\n\n                var persentage = deviceNum.value / deviceAll * 100;\n                ins.setAlarmStatus(find.value); //ins.setValue(persentage.value || 0);\n\n                ins.setValue(persentage || 0); // \n\n                var x = (lng - lngs[0]) / (lngs[1] - lngs[0]) * 1200;\n                var y = (lats[1] - lat) / (lats[1] - lats[0]) * 700;\n                ins.setPos({\n                  x: x,\n                  y: y\n                });\n                ins.on(\"click\", function (event) {\n                  var path = \"navigate\"; //target.setParameter(\"id\", domain.id);\n\n                  target.navigateToTab({\n                    index: path,\n                    id: domain.id\n                  }); //domain.click();\n                });\n              });\n            };\n\n            for (var i in domains) {\n              create3Dbar(domains[i]);\n            }\n          }, {\n            \"isRealTimeData\": true,\n            \"includeInstance\": true\n          });\n        });\n      });\n    }\n  }\n});"],"sourceRoot":"/source/"}