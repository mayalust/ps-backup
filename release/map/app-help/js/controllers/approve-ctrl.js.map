{"version":3,"sources":["app-help/js/controllers/approve-ctrl.js"],"names":["define","controllers","BootstrapDialog","controller","$scope","userLoginUIService","resourceUIService","userEnterpriseService","userUIService","growl","protocols","protocolVersions","approveGridData","columns","title","data","orderable","columnDefs","targets","render","type","full","str","isEdit","i","protocol","protocolVersion","escape","getAllCollectionPlugins","returnObj","protocolDic","code","forEach","item","push","addProve","newObj","accessName","accessPassword","domainPath","id","$broadcast","Event","APPROVEINIT","unshift","doAction","select","addEnterpriseAccessAccount","resultObj","getDBdata","success","updateEnterpriseAccessAccount","show","closable","message","buttons","label","cssClass","action","dialogRef","deleteEnterpriseAccessAccount","warning","close","getEnterpriseAccessAccounts","user","isAuthenticated","$on","evt","d"],"mappings":"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","file":"app-help/js/controllers/approve-ctrl.js","sourcesContent":["define(['controllers/controllers', 'bootstrap-dialog'], function (controllers, BootstrapDialog) {\n  'use strict';\n\n  controllers.controller('approveCtrl', ['$scope', 'userLoginUIService', 'resourceUIService', 'userEnterpriseService', 'userUIService', 'growl', function ($scope, userLoginUIService, resourceUIService, userEnterpriseService, userUIService, growl) {\n    $scope.protocols = [];\n    $scope.protocolVersions = []; //用户认证\n\n    $scope.approveGridData = {\n      columns: [{\n        title: \"接入协议\",\n        data: \"protocol\"\n      }, {\n        title: \"协议版本\",\n        data: \"protocolVersion\"\n      }, {\n        title: \"用户名称\",\n        data: \"accessName\"\n      }, {\n        title: \"密码\",\n        data: \"accessPassword\"\n      }, {\n        title: \"操作\",\n        orderable: false,\n        data: \"option\"\n      }],\n      columnDefs: [{\n        \"targets\": 0,\n        \"data\": \"protocol\",\n        \"render\": function render(data, type, full) {\n          var str = \"\"; // 返回自定义内容\n\n          if (full.isEdit > 0) {\n            str += '<select style=\"border: 1px solid #F18282;\" name=\"protocols\" id=\"protocols\" class=\"combobox form-control protocols\">';\n            str += '<option value=\"\">请选择...</option>';\n\n            for (var i in $scope.protocols) {\n              if ($scope.protocols[i].protocol == data) {\n                str += '<option  value=\"' + $scope.protocols[i].protocol + '\" selected = \"selected\" >' + $scope.protocols[i].protocol + '</option>';\n              } else {\n                str += '<option  value=\"' + $scope.protocols[i].protocol + '\">' + $scope.protocols[i].protocol + '</option>';\n              } // }\n\n            }\n\n            str += '</select>';\n          } else {\n            str += data;\n          }\n\n          return str;\n        }\n      }, {\n        \"targets\": 1,\n        \"data\": \"protocolVersion\",\n        \"render\": function render(data, type, full) {\n          var str = \"\"; // 返回自定义内容\n\n          if (full.isEdit > 0) {\n            str += '<select style=\"border: 1px solid #F18282;\" name=\"version\" id=\"version\" class=\"combobox form-control protocols\">';\n            str += '<option value=\"\">请选择...</option>';\n\n            if (full.protocol != \"\" && full.protocol != null) {\n              for (var i in $scope.protocolVersions) {\n                if ($scope.protocolVersions[i].protocol == full.protocol) {\n                  if ($scope.protocolVersions[i].protocolVersion == data) {\n                    str += '<option  value=\"' + $scope.protocolVersions[i].protocolVersion + '\" selected = \"selected\" >' + $scope.protocolVersions[i].protocolVersion + '</option>';\n                  } else {\n                    str += '<option  value=\"' + $scope.protocolVersions[i].protocolVersion + '\">' + $scope.protocolVersions[i].protocolVersion + '</option>';\n                  }\n                }\n              }\n            }\n\n            str += '</select>';\n          } else {\n            str += data;\n          }\n\n          return str;\n        }\n      }, {\n        \"targets\": 2,\n        \"data\": \"accessName\",\n        \"render\": function render(data, type, full) {\n          // 返回自定义内容\n          if (full.isEdit > 0) return \"<input class='form-control col-xs-6' placeholder='不能为空、空格，最多20个字符' type='text'   maxlength='20' style='border: 1px solid #F18282;width:100%;' value='\" + escape(data) + \"'>\";else return escape(data);\n        }\n      }, {\n        \"targets\": 3,\n        \"data\": \"accessPassword\",\n        \"render\": function render(data, type, full) {\n          // 返回自定义内容\n          if (full.isEdit > 0) return \"<input class='form-control col-xs-6' placeholder='不能为空、空格，最多20个字符' maxlength='20'  style='border: 1px solid #F18282;width:100%;' type='text'  value='\" + escape(data) + \"'>\";else return \"*********\";\n        }\n      }, {\n        \"targets\": 4,\n        \"data\": \"option\",\n        \"render\": function render(data, type, full) {\n          if (full.isEdit > 0) {\n            return \"<a id='save-btn' class='btn btn-default btn-sm' style='margin-right: 10px;'>  <i class='fa fa-save  hidden-lg hidden-md hidden-sm'></i> <span class='hidden-xs'> 保存</span></a><a id='cancel-btn' class='btn btn-default btn-sm' > <i class='fa fa-times  hidden-lg hidden-md hidden-sm'></i><span class='hidden-xs'> 取消</span>  </a>\";\n          } else {\n            return \"<a id='edit-btn' class='btn btn-default btn-sm' style='margin-right: 10px;'>  <i class='fa fa-edit  hidden-lg hidden-md hidden-sm'></i> <span class='hidden-xs'> 编辑</span></a><a id='del-btn' class='btn btn-default btn-sm' > <i class='fa fa-times  hidden-lg hidden-md hidden-sm'></i><span class='hidden-xs'> 删除</span>  </a>\";\n          }\n        }\n      }]\n    };\n\n    var getAllCollectionPlugins = function getAllCollectionPlugins() {\n      resourceUIService.getAllCollectionPlugins(function (returnObj) {\n        var protocolDic = {};\n\n        if (returnObj.code == 0) {\n          returnObj.data.forEach(function (item) {\n            if (!protocolDic[item.protocol]) {\n              protocolDic[item.protocol] = item;\n              $scope.protocols.push(item);\n            }\n          });\n          $scope.protocolVersions = returnObj.data;\n        }\n      });\n    }; //添加操作\n\n\n    $scope.addProve = function () {\n      // userCancel();\n      var newObj = {\n        protocol: \"\",\n        protocolVersion: \"\",\n        accessName: \"\",\n        accessPassword: \"\",\n        domainPath: \"\",\n        id: null,\n        isEdit: 3\n      };\n\n      for (var i in $scope.approveGridData.data) {\n        if ($scope.approveGridData.data[i].id == null) {\n          $scope.approveGridData.data[i] = newObj;\n          $scope.$broadcast(Event.APPROVEINIT, $scope.approveGridData);\n          return;\n        }\n      }\n\n      $scope.approveGridData.data.unshift(newObj); //$scope.approveGridData.data.push(newObj);\n\n      $scope.$broadcast(Event.APPROVEINIT, $scope.approveGridData);\n    };\n\n    $scope.doAction = function (type, select) {\n      if (type == \"save\") {\n        if (select.id == null) {\n          resourceUIService.addEnterpriseAccessAccount(select, function (resultObj) {\n            if (resultObj.code == 0) {\n              for (var i in $scope.approveGridData.data) {\n                if ($scope.approveGridData.data[i] == null) {\n                  $scope.approveGridData.data[i] = resultObj.data;\n                  $scope.approveGridData.data[i].isEdit = 0;\n                  break;\n                }\n              }\n\n              $scope.getDBdata();\n              growl.success(\"新增认证用户成功\", {});\n            }\n          });\n        } else {\n          resourceUIService.updateEnterpriseAccessAccount(select, function (resultObj) {\n            if (resultObj.code == 0) {\n              for (var i in $scope.approveGridData.data) {\n                if (select.id == $scope.approveGridData.data[i].id) {\n                  $scope.approveGridData.data[i] = resultObj.data;\n                  $scope.approveGridData.data[i].isEdit = 0;\n                  break;\n                }\n              } //$scope.approveGridData.data = $scope.approveGridData;\n\n\n              $scope.$broadcast(Event.APPROVEINIT, $scope.approveGridData);\n              growl.success(\"修改认证用户成功\", {});\n            }\n          });\n        }\n      } else if (type == \"delete\") {\n        BootstrapDialog.show({\n          title: '提示',\n          closable: false,\n          //size:BootstrapDialog.SIZE_WIDE,\n          message: '确认要删除该认证用户',\n          buttons: [{\n            label: '确定',\n            cssClass: 'btn-success',\n            action: function action(dialogRef) {\n              resourceUIService.deleteEnterpriseAccessAccount(select.id, function (resultObj) {\n                if (resultObj.code == 0) {\n                  growl.warning(\"删除认证用户成功!\", {});\n                  $scope.getDBdata({});\n                }\n              });\n              dialogRef.close();\n            }\n          }, {\n            label: '取消',\n            action: function action(dialogRef) {\n              dialogRef.close();\n            }\n          }]\n        });\n      } else if (type == \"cancel\") {\n        $scope.getDBdata();\n      }\n    }; //用户管理数据初始化\n\n\n    $scope.getDBdata = function () {\n      //查询用户企业域下的接入用户\n      resourceUIService.getEnterpriseAccessAccounts(function (resultObj) {\n        if (resultObj.code == 0) {\n          $scope.approveGridData.data = resultObj.data;\n          $scope.$broadcast(Event.APPROVEINIT, $scope.approveGridData);\n        }\n      });\n    }; //判断用户是否存在\n\n\n    if (!userLoginUIService.user.isAuthenticated) {\n      $scope.$on('loginStatusChanged', function (evt, d) {\n        if (userLoginUIService.user.isAuthenticated) {\n          $scope.getDBdata();\n          getAllCollectionPlugins();\n        }\n      });\n    } else {\n      $scope.getDBdata();\n      getAllCollectionPlugins();\n    }\n  }]);\n});"],"sourceRoot":"/source/"}