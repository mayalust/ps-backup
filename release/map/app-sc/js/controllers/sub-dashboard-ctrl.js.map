{"version":3,"sources":["app-sc/js/controllers/sub-dashboard-ctrl.js"],"names":["define","controllers","initController","$scope","$state","$stateParams","userEnterpriseService","$rootScope","routeParams","resourceUIService","timeout","growl","q","window","location","viewFlexService","freeboardservice","userLoginUIService","roleViewService","psTreeData","commonMethodService2","psUiRouterHandler","hash","str","obj","JSON","parse","e","sub_active_hide","getCurrentParents","then","parents","extId","toLowerCase","toLowercase","length","category","externalDevId","map","d","label","join","$root","treeStr","viewId","params","catch","console","error","message","getSubTabs","subtabs","$emit","main_active_index","sub_active_index","showTree","subNavToPage","index","go","apply"],"mappings":"AAAAA,OAAO,CAAC,0BAA2B,SAAU,SAAUC,GACrD,aAEAA,EAAYC,eAAe,mBAAoB,CAAC,SAAU,SAAU,eAAgB,wBAAyB,aAAc,eAAgB,oBAAqB,WAAY,QAAS,KAAM,UAAW,YAAa,kBAAmB,mBAAoB,qBAAsB,kBAAmB,aAAc,uBAAwB,oBAAqB,SAAUC,EAAQC,EAAQC,EAAcC,EAAuBC,EAAYC,EAAaC,EAAmBC,EAASC,EAAOC,EAAGC,EAAQC,EAAUC,EAAiBC,EAAkBC,EAAoBC,EAAiBC,EAAYC,EAAsBC,GACtlB,IAAIC,EAAOjB,EAAa,KACxBiB,EAoCA,SAAeC,GACb,IAAIC,EAEJ,IACEA,EAAMC,KAAKC,MAAMH,GACjB,MAAOI,GACP,OAGF,OAAOH,EA7CFE,CAAMJ,IAAS,GACtBnB,EAAOyB,kBAAoBN,EAAKM,gBAQhCR,EAAqBS,oBAAoBC,KAAK,SAAUC,GACtD,IAAIC,EAA6D,UAPnE,SAAqBT,GACnB,GAAkB,iBAAPA,EACT,OAAOA,EAAIU,cAKDC,CAAYH,EAAQA,EAAQI,OAAS,GAAGC,WAAyBL,EAAQA,EAAQI,OAAS,GAAGE,cACrGd,EAAMQ,EAAQO,IAAI,SAAUC,GAC9B,OAAOA,EAAEC,QACRC,KAAK,OACRT,IAAQT,GAAO,MAAQS,EAAQ,OAC/B7B,EAAOuC,QAAQvC,EAAOuC,MAAMC,QAAUpB,GACtCpB,EAAOuC,QAAQvC,EAAOuC,MAAME,OAASxC,EAAOyC,OAAOD,UAClDE,MAAM,SAAUnB,GACjBoB,QAAQC,MAAMrB,EAAEsB,WAElB5B,EAAkB6B,aAAapB,KAAK,SAAUqB,GAC5ChD,EAAOgD,QAAUA,IAChBL,MAAM,SAAUnB,GACjBoB,QAAQC,MAAMrB,EAAEsB,WAElB9C,EAAOiD,MAAM,oBAAqB/C,EAAagD,mBAC/ClD,EAAOmD,iBAAmBjD,EAAaiD,iBACvCnD,EAAOuC,MAAMa,SAAoC,GAAzBlD,EAAakD,SAErCpD,EAAOqD,aAAe,SAAUX,GAC9B1C,EAAOmD,iBAAmBT,EAAOY,MACjCpC,EAAkBwB,GAAQf,KAAK,SAAUS,GACvCnC,EAAOsD,GAAGC,MAAMvD,EAAQmC","file":"app-sc/js/controllers/sub-dashboard-ctrl.js","sourcesContent":["define(['controllers/controllers', 'Array'], function (controllers) {\n  'use strict';\n\n  controllers.initController('subDashboardCtrl', ['$scope', '$state', '$stateParams', 'userEnterpriseService', '$rootScope', '$routeParams', 'resourceUIService', '$timeout', 'growl', '$q', '$window', '$location', 'viewFlexService', 'freeboardservice', 'userLoginUIService', 'roleViewService', 'psTreeData', 'commonMethodService2', 'psUiRouterHandler', function ($scope, $state, $stateParams, userEnterpriseService, $rootScope, routeParams, resourceUIService, timeout, growl, q, window, location, viewFlexService, freeboardservice, userLoginUIService, roleViewService, psTreeData, commonMethodService2, psUiRouterHandler) {\n    var hash = $stateParams[\"#\"];\n    hash = parse(hash) || {};\n    $scope.sub_active_hide = !!hash.sub_active_hide;\n\n    function toLowercase(str) {\n      if (typeof str == \"string\") {\n        return str.toLowerCase();\n      }\n    }\n\n    commonMethodService2.getCurrentParents().then(function (parents) {\n      var extId = toLowercase(parents[parents.length - 1].category) == \"device\" && parents[parents.length - 1].externalDevId,\n          str = parents.map(function (d) {\n        return d.label;\n      }).join(\" > \");\n      extId ? str += \" ( \" + extId + \" ) \" : null;\n      $scope.$root ? $scope.$root.treeStr = str : null;\n      $scope.$root ? $scope.$root.viewId = $state.params.viewId : null;\n    }).catch(function (e) {\n      console.error(e.message);\n    });\n    psUiRouterHandler.getSubTabs().then(function (subtabs) {\n      $scope.subtabs = subtabs;\n    }).catch(function (e) {\n      console.error(e.message);\n    });\n    $scope.$emit(\"main_active_index\", $stateParams.main_active_index);\n    $scope.sub_active_index = $stateParams.sub_active_index;\n    $scope.$root.showTree = $stateParams.showTree == 0 ? false : true;\n\n    $scope.subNavToPage = function (params) {\n      $scope.sub_active_index = params.index;\n      psUiRouterHandler(params).then(function (d) {\n        $state.go.apply($state, d);\n      });\n    };\n\n    function parse(str) {\n      var obj;\n\n      try {\n        obj = JSON.parse(str);\n      } catch (e) {\n        return;\n      }\n\n      return obj;\n    }\n  }]);\n});"],"sourceRoot":"/source/"}