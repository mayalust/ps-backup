{"version":3,"sources":["app-sc/js/directives/directives.js"],"names":["define","angular","directives","module","config","$compileProvider","registerDirective","directive","initDirective","directiveName","options","attrs","fun","jQuery","isArray","slice","length","$inject"],"mappings":"AAAAA,OAAO,CAAC,WAAY,SAAUC,GAC5B,aAEA,IAAIC,EAAaD,EAAQE,OAAO,aAAc,IA+B9C,OA9BAD,EAAWE,OAAO,CAAC,mBAAoB,SAAUC,GAC/CH,EAAWI,kBAAoBD,EAAiBE,aAGlDL,EAAWM,cAAgB,SAAUC,EAAeC,GAClD,IAAIC,EAAQ,GACRC,EAAM,KAIRA,EAFEC,OAAOC,QAAQJ,IACjBC,EAAQD,EAAQK,MAAM,EAAGL,EAAQM,OAAS,GACpCN,EAAQA,EAAQM,OAAS,IAEzBN,EAKJR,EAAWI,kBAEbJ,EAAWI,kBAAkBG,EAAeG,GAG5CV,EAAWK,UAAUE,EAAeG,GAKnB,EAAfD,EAAMK,SAAYJ,EAAIK,QAAUN,IAG/BT","file":"app-sc/js/directives/directives.js","sourcesContent":["define(['angular'], function (angular) {\n  'use strict';\n\n  var directives = angular.module('directives', []);\n  directives.config(['$compileProvider', function ($compileProvider) {\n    directives.registerDirective = $compileProvider.directive;\n  }]);\n\n  directives.initDirective = function (directiveName, options) {\n    var attrs = [];\n    var fun = null;\n\n    if (jQuery.isArray(options)) {\n      attrs = options.slice(0, options.length - 1);\n      fun = options[options.length - 1];\n    } else {\n      fun = options;\n    }\n    /** registerDirective is available only after angular.module(\"directive\") finish initializing, when registerDirection method is loaded*/\n\n\n    if (directives.registerDirective) {\n      /** registerDirective mehod is avaliable  */\n      directives.registerDirective(directiveName, fun);\n    } else {\n      /** registerDirective mehod is not avaliable and not in need, so use directive method to inject a function into angular.module('directive')  */\n      directives.directive(directiveName, fun);\n    }\n    /** inject function that depended by the directive created.*/\n\n\n    if (attrs.length > 0) fun.$inject = attrs;\n  };\n\n  return directives;\n});"],"sourceRoot":"/source/"}