{"version":3,"sources":["app-oc/js/controllers/user-group-ctrl.js"],"names":["define","controllers","BootstrapDialog","initController","$scope","userInitService","$location","$routeParams","$timeout","userLoginUIService","Info","growl","userEnterpriseService","activeListTab","queryGroupList","selectedGroup","formReg","name","desc","userGroupList","userGridData","groupsAry","queryEnterpriseGroup","resultObj","code","data","addGroup","arr","i","obj","push","groupID","warning","newModel","groupName","description","enterpriseID","user","userGroupQuery","unshift","delGroup","success","show","title","closable","message","buttons","label","cssClass","action","dialogRef","deleteGroup","length","groupClick","close","doAction","type","select","addUser2UserGroup","userName","deleteUser2UserGroup","userID","saveUserGrop","$","trim","modifyGroupInfo","group","$watch","newValue","oldValue","undefined","newName","addGroupUser","newObj","emailAddress","mobilePhone","officePhone","domainId","userEmail","domainPath","isEdit","userType","userTypeLabel","jobTitle","discription","edit","$broadcast","Event","USERGROUPINIT","enterpriseUser","initEvent","on","e","aname","target","attr","text","$apply","groupId","queryGroupUser","userListInit","queryEnterpriseUser","isAuthenticated","$on","evt","d"],"mappings":"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","file":"app-oc/js/controllers/user-group-ctrl.js","sourcesContent":["define(['controllers/controllers', 'bootstrap-dialog'], function (controllers, BootstrapDialog) {\n  'use strict';\n\n  controllers.initController('userGroupCtrl', ['$scope', 'userInitService', '$location', '$routeParams', '$timeout', 'userLoginUIService', 'Info', 'growl', 'userEnterpriseService', function ($scope, userInitService, $location, $routeParams, $timeout, userLoginUIService, Info, growl, userEnterpriseService) {\n    $scope.activeListTab = \"tab3\";\n    $scope.queryGroupList = \"\";\n    $scope.selectedGroup = \"\";\n    $scope.formReg = {\n      'name': '',\n      'desc': ''\n    };\n    $scope.userGroupList = {};\n    $scope.userGridData = {};\n    $scope.groupsAry = [];\n    userEnterpriseService.queryEnterpriseGroup(function (resultObj) {\n      if (resultObj.code == 0) {\n        $scope.queryGroupList = resultObj.data;\n        $scope.selectedGroup = resultObj.data[0];\n      }\n    });\n\n    $scope.addGroup = function () {\n      //if ($scope.activeListTab == 'tab3') {\n      var arr = [];\n\n      for (var i in $scope.queryGroupList) {\n        var obj = $scope.queryGroupList[i];\n        arr.push(obj);\n\n        if (obj.groupID == 0) {\n          growl.warning(\"当前有未保存用户组\", {});\n          return;\n        }\n      }\n\n      $scope.activeListTab = 'tab3';\n\n      var doAdd = function doAdd(newModelName) {\n        var newModel = {};\n        newModel.groupName = newModelName;\n        newModel.groupID = 0;\n        newModel.description = '';\n        newModel.enterpriseID = userLoginUIService.user.enterpriseID;\n        userGroupQuery(newModel.groupID);\n        $scope.queryGroupList.unshift(newModel);\n        $scope.selectedGroup = newModel;\n      };\n\n      doAdd(''); //} else {\n      //  growl.warning(\"请切换到用户组信息再进行新增操作\", {});\n      //}\n    };\n\n    $scope.delGroup = function () {\n      if ($scope.selectedGroup.groupID != 0) {\n        BootstrapDialog.show({\n          title: '提示',\n          closable: false,\n          //size:BootstrapDialog.SIZE_WIDE,\n          message: '确认删除 ' + $scope.selectedGroup.groupName + ' 吗？',\n          buttons: [{\n            label: '确定',\n            cssClass: 'btn-success',\n            action: function action(dialogRef) {\n              if ($scope.selectedGroup) {\n                userInitService.deleteGroup($scope.selectedGroup.groupID, function (resultObj) {\n                  if (resultObj.code == 0) {\n                    var arr = [];\n\n                    for (var i in $scope.queryGroupList) {\n                      if ($scope.selectedGroup.groupID != $scope.queryGroupList[i].groupID) {\n                        arr.push($scope.queryGroupList[i]);\n                      }\n                    }\n\n                    $scope.queryGroupList = arr;\n                    growl.success(\"删除用户组成功\", {});\n                    if (arr.length > 0) $scope.groupClick($scope.queryGroupList[0]);else $scope.selectedGroup = null;\n                  } else {\n                    growl.success(\"删除用户组失败\", {});\n                  }\n                });\n                dialogRef.close();\n              }\n            }\n          }, {\n            label: '取消',\n            action: function action(dialogRef) {\n              dialogRef.close();\n            }\n          }]\n        });\n      } else {\n        var arr = [];\n\n        for (var i in $scope.queryGroupList) {\n          if ($scope.selectedGroup.groupID != $scope.queryGroupList[i].groupID) {\n            arr.push($scope.queryGroupList[i]);\n          }\n        }\n\n        $scope.queryGroupList = arr;\n        $scope.selectedGroup = $scope.queryGroupList[0];\n        growl.success(\"删除用户组成功\", {});\n        return;\n      }\n    };\n    /*\n     *dataTable 统一处理方式\n     */\n\n\n    $scope.doAction = function (type, select) {\n      if (type == \"saveUser\") {\n        if (select != \"\" && select != null) {\n          userEnterpriseService.addUser2UserGroup($scope.selectedGroup.groupID, userLoginUIService.user.enterpriseID, [select], function (resultObj) {\n            if (resultObj.code == 0) {\n              growl.success(\"添加用户到用户组成功\", {});\n              userGroupQuery($scope.selectedGroup.groupID);\n            } else {\n              growl.warning(\"用户已经存在该用户组中，添加失败\", {});\n              return;\n            }\n          });\n        } else {\n          growl.warning(\"请选择用户\", {});\n          return;\n        }\n      } else if (type == \"removeUser\") {\n        BootstrapDialog.show({\n          title: '提示',\n          closable: false,\n          //size:BootstrapDialog.SIZE_WIDE,\n          message: '确认将用户 \"' + select.userName + '\"移出\" ' + $scope.selectedGroup.groupName + '\" 用户组吗？',\n          buttons: [{\n            label: '确定',\n            cssClass: 'btn-success',\n            action: function action(dialogRef) {\n              userEnterpriseService.deleteUser2UserGroup($scope.selectedGroup.groupID, [select.userID], function (resultObj) {\n                if (resultObj.code == 0) {\n                  growl.success(\"用户组移出用户成功\", {});\n                  userGroupQuery($scope.selectedGroup.groupID);\n                } else {\n                  growl.warning(\"该用户移出失败\", {});\n                }\n              });\n              dialogRef.close();\n            }\n          }, {\n            label: '取消',\n            action: function action(dialogRef) {\n              dialogRef.close();\n            }\n          }]\n        });\n      } else if (type == \"cancel\") {\n        growl.success(\"已取消添加用户组用户\", {});\n        userGroupQuery($scope.selectedGroup.groupID);\n      }\n    };\n\n    $scope.saveUserGrop = function () {\n      if ($scope.formReg.name == 0 && $scope.formReg.desc == 0) {\n        if ($scope.selectedGroup.groupName == \"\") {\n          $scope.formReg[\"name\"] = \"1000\";\n          return;\n        } //if($scope.selectedGroup.description == \"\"){\n        //    $scope.formReg[\"desc\"] = \"1001\";\n        //    return;\n        //}\n        //如果groupId等于0 进行新增操作否则进行修改操作\n\n\n        if ($scope.selectedGroup.groupID == 0) {\n          for (var i in $scope.queryGroupList) {\n            if ($scope.selectedGroup.groupName == $scope.queryGroupList[i].groupName && $scope.queryGroupList[i].groupID != 0) {\n              growl.warning(\"您输入的用户组名称已存在，请重新输入\", {});\n              return;\n            }\n          }\n\n          $scope.selectedGroup.groupName = $.trim($scope.selectedGroup.groupName);\n          $scope.selectedGroup.description = $.trim($scope.selectedGroup.description);\n          userEnterpriseService.addGroup($scope.selectedGroup, function (resultObj) {\n            if (resultObj.code == 0) {\n              var arr = [];\n\n              for (var i in $scope.queryGroupList) {\n                if ($scope.queryGroupList[i].groupID == 0) {\n                  arr.push(resultObj.data);\n                  continue;\n                } else {\n                  arr.push($scope.queryGroupList[i]);\n                }\n              }\n\n              $scope.queryGroupList = arr;\n              $scope.groupClick(resultObj.data);\n              $scope.selectedGroup = resultObj.data;\n              growl.success(\"新增用户组成功\", {});\n            } else {\n              growl.success(\"新增用户组失败\", {});\n            }\n          });\n        } else {\n          for (var i in $scope.queryGroupList) {\n            if ($scope.queryGroupList[i].groupID != $scope.selectedGroup.groupID && $scope.selectedGroup.groupName == $scope.queryGroupList[i].groupName) {\n              growl.warning(\"当前有重复用户组名称，请修改\", {});\n              return;\n            }\n          }\n\n          if ($scope.selectedGroup.groupName == \"\") {\n            $scope.formReg[\"name\"] = \"1000\";\n            return;\n          }\n\n          $scope.selectedGroup.groupName = $.trim($scope.selectedGroup.groupName);\n          $scope.selectedGroup.description = $.trim($scope.selectedGroup.description);\n          userEnterpriseService.modifyGroupInfo($scope.selectedGroup, function (resultObj) {\n            if (resultObj.code == 0) {\n              var arr = [];\n\n              for (var i in $scope.queryGroupList) {\n                if ($scope.queryGroupList[i].groupID == $scope.selectedGroup.groupID) {\n                  arr.push(resultObj.data);\n                  continue;\n                } else {\n                  arr.push($scope.queryGroupList[i]);\n                }\n              }\n\n              $scope.queryGroupList = arr;\n              $scope.selectedGroup = resultObj.data;\n              growl.success(\"修改用户组成功\", {});\n            } else {\n              growl.success(\"修改用户组失败\", {});\n            }\n          });\n        }\n      }\n    };\n\n    $scope.groupClick = function (group) {\n      $scope.selectedGroup = group;\n      userGroupQuery(group.groupID);\n    };\n\n    $scope.$watch(\"selectedGroup.groupName\", function (newValue, oldValue) {\n      $scope.formReg[\"name\"] = \"0\"; //var reg = /^[\\u4e00-\\u9fa5a-zA-Z][u4e00-\\u9fa5a-za-zA-Z0-9_]{0,40}$/;\n\n      if ($scope.selectedGroup != undefined) {\n        var newName = $.trim(newValue);\n\n        if (newName != \"\" && newName != null) {//if (!reg.test(newValue)) {\n          //    $scope.formReg[\"name\"] = \"1000\";\n          //} else {\n          //    $scope.formReg[\"name\"] = \"0\";\n          //}\n        } else {\n          $scope.formReg[\"name\"] = \"0\";\n        }\n      }\n    });\n    $scope.$watch(\"selectedGroup.description\", function (newValue, oldValue) {\n      $scope.formReg[\"desc\"] = \"0\"; //var reg = /^[u4e00-\\u9fa5a-za-zA-Z0-9][u4e00-\\u9fa5a-za-zA-Z0-9]{0,100}$/;\n\n      if ($scope.selectedGroup != undefined) {\n        var newName = $.trim(newValue);\n\n        if (newName != \"\" && newName != null) {//if (!reg.test(newValue)) {\n          //    $scope.formReg[\"desc\"] = \"1001\";\n          //} else {\n          //    $scope.formReg[\"desc\"] = \"0\";\n          //}\n        } else {\n          $scope.formReg[\"desc\"] = \"0\";\n        }\n      }\n    });\n\n    $scope.addGroupUser = function () {\n      if ($scope.selectedGroup == undefined) {\n        // growl.warning(\"请选择用户组，再 进行以下操作\", {});\n        return;\n      }\n\n      if ($scope.selectedGroup.groupID == 0) {\n        growl.warning(\"请先保存新添加的用户组，再进行以下操作\", {});\n        return;\n      }\n\n      var newObj = {\n        userName: '选择用户',\n        emailAddress: '',\n        mobilePhone: '',\n        officePhone: '',\n        groupID: 0,\n        domainId: '',\n        userEmail: '',\n        domainPath: '',\n        isEdit: 2,\n        userType: 2,\n        userTypeLabel: \"普通用户\",\n        jobTitle: \"\",\n        discription: \"\",\n        edit: \"\",\n        userID: null\n      };\n\n      if ($scope.userGroupList.data.length > 0) {\n        if ($scope.userGroupList.data.length != $scope.enterpriseUser.length) {\n          for (var i in $scope.userGroupList.data) {\n            if ($scope.userGroupList.data[i].userID == null) {\n              growl.warning(\"请先保存用户再进行添加\", {});\n              $scope.$broadcast(Event.USERGROUPINIT, $scope.userGroupList);\n              return;\n            } else {\n              $scope.userGroupList.data.unshift(newObj);\n              $scope.$broadcast(Event.USERGROUPINIT, $scope.userGroupList);\n              return;\n            }\n          }\n        } else {\n          growl.warning(\"您已经没有用户可以添加\", {});\n          return;\n        }\n      } else {\n        $scope.userGroupList.data.unshift(newObj);\n        $scope.$broadcast(Event.USERGROUPINIT, $scope.userGroupList);\n        return;\n      }\n    };\n    /**\n     * 初始化切换事件\n     *\n     */\n\n\n    var initEvent = function initEvent() {\n      $('a[data-toggle=\"tab\"]').on('shown.bs.tab', function (e) {\n        var aname = $(e.target).attr(\"name\");\n        var targetText = $(e.target).text();\n        $scope.activeListTab = aname;\n        $scope.$apply();\n\n        if (aname == \"tab4\") {\n          if ($scope.selectedGroup != undefined) {\n            if ($scope.selectedGroup.groupID != undefined) {\n              if ($scope.selectedGroup.groupID == 0) {\n                return;\n              }\n\n              userGroupQuery($scope.selectedGroup.groupID);\n            } else {\n              growl.warning(\"请先添加用户组再进行切换\", {});\n              $scope.userGroupList.data = null;\n              return;\n            }\n          }\n        }\n      });\n    };\n    /*\n     *用户组Id查询用户信息\n     *\n     */\n\n\n    var userGroupQuery = function userGroupQuery(groupId) {\n      userEnterpriseService.queryGroupUser(groupId, function (resultObj) {\n        if (resultObj.code == 0) {\n          for (var i in resultObj.data) {\n            var obj = resultObj.data[i];\n            obj.isEdit = 0;\n\n            if (obj.emailAddress == null || obj.emailAddress == \"\") {\n              obj[\"userEmail\"] = obj.mobilePhone;\n            } else {\n              obj[\"userEmail\"] = obj.emailAddress;\n            }\n          }\n\n          $scope.userGroupList.data = resultObj.data;\n          $scope.$broadcast(Event.USERGROUPINIT, $scope.userGroupList);\n        } else {\n          growl.warning(\"查询用户信息失败\", {});\n          return;\n        }\n      });\n    };\n\n    var userListInit = function userListInit() {\n      //获取用户\n      userEnterpriseService.queryEnterpriseUser(function (resultObj) {\n        if (resultObj.code == 0) {\n          $scope.enterpriseUser = resultObj.data;\n        }\n      });\n    };\n\n    if (!userLoginUIService.user.isAuthenticated) {\n      $scope.$on('loginStatusChanged', function (evt, d) {\n        if (userLoginUIService.user.isAuthenticated) {\n          initEvent();\n          userListInit();\n        }\n      });\n    } else {\n      initEvent();\n      userListInit();\n    }\n  }]);\n});"],"sourceRoot":"/source/"}