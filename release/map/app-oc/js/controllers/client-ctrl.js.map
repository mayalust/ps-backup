{"version":3,"sources":["app-oc/js/controllers/client-ctrl.js"],"names":["define","controllers","BootstrapDialog","initController","$scope","$routeParams","$timeout","ngDialog","distributorUIService","userLoginUIService","customerUIService","userEnterpriseService","growl","userRoleUIService","userFunctionService","userDomainService","solutionUIService","userUIService","$location","userSearch","selectedObj","selectedItem","orCondition","customerName","customerAddress","domainPath","customerPhone","dealerType","selectedDealItem","id","distributorName","distributorAddress","contactPhone","initData","inputItem","userMain","customerEmail","customerContact","duty","values","risingTime","Date","dealer","distributorContact","contactDuty","email","clientOther","contactName","contactEmail","broadInfo","value","type","$broadcast","Event","CLIENTMANAGEINIT","userGridData","dealerGridData","location","hash","search","mistakeMesg","phone","$watch","n","o","jobs","myDicts","othercontactlist","getChange","queryState","columns","title","menuitems","label","data","render","full","meta","addr","undefined","standardAddress","split","join","visible","$","ProudSmart","datatable","optionCol3","columnDefs","targets","str","escape","domainListDic","item","i","valueCode","provinceClick","provinceId","county","cityDics","cityList","cityClick","cityId","districtDics","districtList","isEdit","domainDealerListDic","name","inputFun","addOther","length","error","open","template","className","scope","saveOther","warning","inputOther","newObj","createTime","unshift","forEach","extend","close","doActionOther","select","callback","splice","$apply","show","closable","message","buttons","cssClass","action","dialogRef","saveUser","addUser","href","flg","dealerInfo","updateDistributor","returnObj","code","success","dealerLists","addDistributor","push","otherContacts","getAddressPoint","updateCustomer","mainlabel","city","province","userphone","useremail","obj","param","addCustomer","url","replace","baseDomain","addDomain","description","newUser","userType","baseConfig","customerConfig","typeCode","status","userName","loginName","mobilePhone","domain","userID","domainID","role","roleID","enterpriseUserRegister","doAction","deleteCustomerById","resultObj","trim","doDealerAction","deleteDistributorById","j","searchData","findDistributorsByCondition","findCustomersByCondition","arr","verifyFun","user","test","closeDialog","init","callbackFun","queryEnterpriseDomainTree","domainDealerListTree","domainListTree","queryDomainTree","inputObj","latitude","longitude","address","lat","toFixed","lng","isAuthenticated","$on","evt","d","marketplaceUIService","getDBdata","userInfo","querySupplier","supplierEmail","supplierPhone","SUPPLIERMANAGEINIT"],"mappings":"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","file":"app-oc/js/controllers/client-ctrl.js","sourcesContent":["define(['controllers/controllers', 'bootstrap-dialog'], function (controllers, BootstrapDialog) {\n  'use strict';\n\n  controllers.initController('UserClientCtrl', ['$scope', '$routeParams', '$timeout', 'ngDialog', 'distributorUIService', 'userLoginUIService', 'customerUIService', 'userEnterpriseService', 'growl', 'userRoleUIService', 'userFunctionService', 'userDomainService', 'solutionUIService', 'userUIService', '$location', function ($scope, $routeParams, $timeout, ngDialog, distributorUIService, userLoginUIService, customerUIService, userEnterpriseService, growl, userRoleUIService, userFunctionService, userDomainService, solutionUIService, userUIService, $location) {\n    $scope.userSearch = {};\n    var selectedObj = null; //客户查询\n\n    $scope.selectedItem = {\n      \"orCondition\": \"\",\n      \"customerName\": \"\",\n      //客户姓名\n      \"customerAddress\": \"\",\n      //客户地址\n      \"domainPath\": \"\",\n      //客户归属\n      \"customerPhone\": \"\" //客户电话\n\n    }; //经销商查询\n\n    $scope.selectedDealItem = {\n      \"domainPath\": \"\",\n      \"id\": \"\",\n      //经销商名称id\n      \"distributorName\": \"\",\n      //经销商名称\n      \"distributorAddress\": \"\",\n      \"contactPhone\": \"\",\n      \"orCondition\": \"\"\n    };\n    var dealerType = false; //客户默认为空，经销商会置为true\n\n    if (location.hash.search(\"#/dealerInfo\") > -1) {\n      dealerType = true;\n    }\n\n    ;\n    $scope.mistakeMesg = {\n      //验证错误信息提示\n      email: false,\n      phone: false\n    }; //职务\n\n    $scope.$watch(\"myDicts\", function (n, o) {\n      if (n) {\n        $scope.jobs = $scope.myDicts['jobTitle'];\n      }\n    }); //初始数据\n\n    function initData() {\n      $scope.inputItem = {\n        //添加客户联系人，客户其他联系人及经销商的联系及其他联系人 //客户及经销商的输入数据\n        \"userMain\": {\n          \"customerName\": \"\",\n          //客户姓名\n          \"customerEmail\": \"\",\n          //客户邮箱地址\n          \"customerPhone\": \"\",\n          //客户电话（座机或手机）\n          \"customerAddress\": \"\",\n          //客户地址\n          \"customerContact\": \"\",\n          //客户联系人\n          \"domainPath\": \"\",\n          //客户所属域\n          \"duty\": \"\",\n          //职务key\n          \"values\": {},\n          \"risingTime\": new Date()\n        },\n        \"dealer\": {\n          \"domainPath\": \"\",\n          \"distributorName\": \"\",\n          \"distributorContact\": \"\",\n          //联系人\n          \"contactDuty\": \"\",\n          \"contactPhone\": \"\",\n          \"email\": \"\",\n          \"distributorAddress\": \"\",\n          \"risingTime\": new Date()\n        },\n        \"clientOther\": {\n          \"contactName\": \"\",\n          //联系人\n          \"contactDuty\": \"\",\n          //联系人职务\n          \"contactPhone\": \"\",\n          //联系电话\n          \"contactEmail\": \"\" //邮箱地址\n\n        }\n      };\n    }\n\n    ;\n    $scope.othercontactlist = []; //存储客户的其他联系人\n\n    $scope.getChange = function (type) {\n      if (type == \"searchDealer\") {\n        $scope.selectedDealItem.orCondition = !$scope.queryState ? $scope.selectedDealItem.orCondition : null;\n        $scope.selectedDealItem.domainPath = $scope.queryState == 1 ? $scope.selectedDealItem.domainPath : null;\n        $scope.selectedDealItem.distributorName = $scope.queryState == 2 ? $scope.selectedDealItem.distributorName : null;\n        $scope.selectedDealItem.distributorAddress = $scope.queryState == 3 ? $scope.selectedDealItem.distributorAddress : null;\n        $scope.selectedDealItem.contactPhone = $scope.queryState == 4 ? $scope.selectedDealItem.contactPhone : null;\n      } else {\n        $scope.selectedItem.orCondition = !$scope.queryState ? $scope.selectedItem.orCondition : null;\n        $scope.selectedItem.domainPath = $scope.queryState == 1 ? $scope.selectedItem.domainPath : null;\n        $scope.selectedItem.customerName = $scope.queryState == 2 ? $scope.selectedItem.customerName : null;\n        $scope.selectedItem.customerAddress = $scope.queryState == 3 ? $scope.selectedItem.customerAddress : null;\n        $scope.selectedItem.customerPhone = $scope.queryState == 4 ? $scope.selectedItem.customerPhone : null;\n      }\n    }; //用户信息\n\n\n    $scope.userGridData = {\n      columns: [{\n        title: ($scope.menuitems['S12'] && $scope.menuitems['S12'].label ? $scope.menuitems['S12'].label : \"客户\") + \"归属\",\n        data: \"domainPath\"\n      }, {\n        title: ($scope.menuitems['S12'] && $scope.menuitems['S12'].label ? $scope.menuitems['S12'].label : \"客户\") + \"名称\",\n        data: \"customerName\"\n      }, {\n        title: \"主要联系人\",\n        data: \"customerContact\"\n      }, {\n        title: \"联系人职务\",\n        data: \"duty\"\n      }, {\n        title: \"联系电话\",\n        data: \"customerPhone\"\n      }, {\n        title: \"邮箱地址\",\n        data: \"customerEmail\"\n      }, {\n        title: ($scope.menuitems['S12'] && $scope.menuitems['S12'].label ? $scope.menuitems['S12'].label : \"客户\") + \"地址\",\n        data: \"customerAddress\",\n        \"render\": function render(data, type, full, meta) {\n          var addr = data; //校验所属区域\n\n          if (full.values != null && full.values != undefined && full.values.standardAddress != null && full.values.standardAddress != undefined) {\n            addr = full.values.standardAddress.split(\",\").join(\"\") + \" \" + data;\n          }\n\n          return addr;\n        }\n      }, {\n        title: \"\",\n        data: \"risingTime\",\n        visible: false\n      }, $.ProudSmart.datatable.optionCol3],\n      columnDefs: [{\n        \"targets\": 0,\n        \"data\": \"domainPath\",\n        \"render\": function render(data, type, full) {\n          var data = escape(data);\n          var str = \"\";\n\n          if (data && $scope.domainListDic[data]) {\n            str = $scope.domainListDic[data].label;\n          }\n\n          return str;\n        }\n      }, {\n        \"targets\": 1,\n        \"data\": \"customerName\",\n        \"render\": function render(data, type, full) {\n          return escape(data);\n        }\n      }, {\n        \"targets\": 2,\n        \"data\": \"customerContact\",\n        \"render\": function render(data, type, full) {\n          return escape(data);\n        }\n      }, {\n        \"targets\": 3,\n        \"data\": \"duty\",\n        \"render\": function render(data, type, full) {\n          var item = \"\";\n\n          for (var i in $scope.jobs) {\n            if ($scope.jobs[i].valueCode == data) {\n              item = $scope.jobs[i]['label'];\n            }\n          }\n\n          return item;\n        }\n      }, {\n        \"targets\": 4,\n        \"data\": \"customerPhone\",\n        \"render\": function render(data, type, full) {\n          return data;\n        }\n      }, {\n        \"targets\": 5,\n        \"data\": \"customerEmail\",\n        \"render\": function render(data, type, full) {\n          return data;\n        }\n      }, {\n        \"targets\": 6,\n        \"data\": \"customerAddress\",\n        \"render\": function render(data, type, full) {\n          //return data;\n          var addr = data; //校验所属区域\n\n          if (full.values != null && full.values != undefined && full.values.standardAddress != null && full.values.standardAddress != undefined) {\n            addr = full.values.standardAddress.split(\",\").join(\"\") + \" \" + data;\n          }\n\n          return addr;\n        }\n      }, {\n        \"targets\": 8,\n        \"data\": \"option\",\n        \"render\": function render(data, type, full) {\n          var str = \"<div class='btn-group btn-group-sm'>\";\n\n          if ($scope.menuitems['A03_S12']) {\n            str += \"<button id='edit-btn' class='btn btn-primary btn-sm' ><i class='fa fa-edit hidden-lg hidden-md hidden-sm'></i><span class='hidden-xs'> 编辑</span></button>\";\n          }\n\n          if ($scope.menuitems['A04_S12']) {\n            str += \"<button id='del-btn' class='btn btn-default btn-sm'><i class='fa fa-edit hidden-lg hidden-md hidden-sm'></i><span class='hidden-xs'>删除</span></button>\";\n          }\n\n          if ($scope.menuitems['A01_S12']) {\n            str += \"<button  type='button' class='btn btn-default btn-sm dropdown-toggle' data-toggle='dropdown'> 更多<span class='caret'></span></button>\";\n            str += \"<ul class='dropdown-menu' role='menu'>\";\n\n            if ($scope.menuitems['A01_S12']) {\n              str += \"<li><a  href='#/projectManagement/\" + full.id + \"'>项目信息</a></li></ul>\";\n            }\n          } // str += \"<li><a  href='#/facility/customer/\" + full.id + \"'>设备信息</a></li>\";\n\n\n          str += \"</div>\";\n          return str;\n        }\n      }]\n    };\n\n    $scope.provinceClick = function (provinceId) {\n      $scope.inputItem.userMain.county = \"\";\n\n      if ($scope.cityDics[provinceId]) {\n        $scope.cityList = $scope.cityDics[provinceId];\n      }\n    };\n\n    $scope.cityClick = function (cityId) {\n      if ($scope.districtDics[cityId]) {\n        $scope.districtList = $scope.districtDics[cityId];\n      }\n    }; //经销商信息\n\n\n    $scope.dealerGridData = {\n      columns: [{\n        title: \"经销商归属\",\n        data: \"domainPath\"\n      }, {\n        title: \"经销商名称\",\n        data: \"distributorName\"\n      }, {\n        title: \"联系人\",\n        data: \"distributorContact\"\n      }, {\n        title: \"联系人职务\",\n        data: \"contactDuty\"\n      }, {\n        title: \"联系电话\",\n        data: \"contactPhone\"\n      }, {\n        title: \"邮箱地址\",\n        data: \"email\"\n      }, {\n        title: \"经销商地址\",\n        data: \"distributorAddress\"\n      }, {\n        title: \"\",\n        data: \"risingTime\",\n        visible: false\n      }, $.ProudSmart.datatable.optionCol3],\n      columnDefs: [{\n        \"targets\": 0,\n        \"data\": \"domainPath\",\n        \"render\": function render(data, type, full) {\n          if (full.isEdit == 2 && type == \"display\") {\n            return \"<div class='dropdowntree select-sm' name='domainPath' key='domainPath' placeholder='请选择...' model='\" + data + \"' change='' options='domainListTree' mark='nodes' />\";\n            ;\n          } else {\n            if (data && $scope.domainDealerListDic[data]) {\n              return $scope.domainDealerListDic[data].name;\n            } else {\n              return \"\";\n            }\n          }\n        }\n      }, {\n        \"targets\": 1,\n        \"data\": \"distributorName\",\n        \"render\": function render(data, type, full) {\n          // 返回自定义内容\n          if (full.isEdit == 2 && type == \"display\") return \"<input class='form-control col-xs-6' type='text'  maxlength='20'  style='border: 1px solid #F18282;width:100%;' value='\" + escape(data) + \"'>\";else return escape(data);\n        }\n      }, {\n        \"targets\": 2,\n        \"data\": \"distributorContact\",\n        \"render\": function render(data, type, full) {\n          // 返回自定义内容\n          if (full.isEdit == 2 && type == \"display\") return \"<input class='form-control col-xs-6' type='text'  maxlength='20'  style='border: 1px solid #F18282;width:100%;' value='\" + escape(data) + \"'>\";else return escape(data);\n        }\n      }, {\n        \"targets\": 3,\n        \"data\": \"contactDuty\",\n        \"render\": function render(data, type, full) {\n          // 返回自定义内容\n          if (full.isEdit == 2 && type == \"display\") {\n            var str = '<select class=\"form-control input-sm \" style=\"border: 1px solid #F18282;width:100%;\"><option value=\"\"></option>';\n\n            for (var i in $scope.jobs) {\n              if ($scope.jobs[i].valueCode == data) {\n                str += '<option value=\"' + $scope.jobs[i].valueCode + '\" selected=\"selected\">' + $scope.jobs[i].label + '</option>';\n              }\n\n              str += '<option value=\"' + $scope.jobs[i].valueCode + '\">' + $scope.jobs[i].label + '</option>';\n            }\n\n            str += '</select>';\n            return str;\n          } else {\n            for (var i in $scope.jobs) {\n              if ($scope.jobs[i].valueCode == data) {\n                return $scope.jobs[i].label;\n              }\n            }\n          }\n        }\n      }, {\n        \"targets\": 4,\n        \"data\": \"customerPhone\",\n        \"render\": function render(data, type, full) {\n          // 返回自定义内容\n          if (full.isEdit == 2 && type == \"display\") return \"<input class='form-control col-xs-6' type='text'style='border: 1px solid #F18282;width:100%;' value='\" + data + \"'>\";else return data;\n        }\n      }, {\n        \"targets\": 5,\n        \"data\": \"email\",\n        \"render\": function render(data, type, full) {\n          // 返回自定义内容\n          if (full.isEdit == 2 && type == \"display\") return \"<input class='form-control col-xs-6' style='width:100%;border: 1px solid #F18282;width:100%;' type='text'  value='\" + data + \"'>\";else return data;\n        }\n      }, {\n        \"targets\": 6,\n        \"data\": \"distributorAddress\",\n        \"render\": function render(data, type, full) {\n          // 返回自定义内容\n          if (full.isEdit == 2 && type == \"display\") return \"<input class='form-control col-xs-6' style='width:100%;border: 1px solid #F18282;width:100%;' type='text'  value='\" + data + \"'>\";else return data;\n        }\n      }, {\n        \"targets\": 8,\n        \"data\": \"option\",\n        \"render\": function render(data, type, full) {\n          if (full.isEdit == 2 && type == \"display\") {\n            return \"<a id='save-btn' class='btn btn-primary btn-sm'>  <i class='fa fa-save  hidden-lg hidden-md hidden-sm'></i> <span class='hidden-xs'> 保存</span></a><a id='cancel-btn' class='btn btn-default btn-sm' > <i class='fa fa-times  hidden-lg hidden-md hidden-sm'></i><span class='hidden-xs'> 取消</span>  </a>\";\n          } else {\n            var str = \"<div class='btn-group btn-group-sm'>\";\n\n            if ($scope.menuitems['A03_S46']) {\n              str += \"<button id='edit-btn' class='btn btn-primary btn-sm' ><i class='fa fa-edit hidden-lg hidden-md hidden-sm'></i><span class='hidden-xs'> 编辑</span></button>\";\n            }\n\n            if ($scope.menuitems['A04_S46']) {\n              str += \"<button id='del-btn' class='btn btn-default btn-sm'><i class='fa fa-edit hidden-lg hidden-md hidden-sm'></i><span id='block'>删除</span></button>\";\n            }\n\n            if ($scope.menuitems['A01_S46']) {\n              str += \"<button type='button' class='btn btn-default btn-sm dropdown-toggle' data-toggle='dropdown'> 更多<span class='caret'></span></button>\";\n              str += \"<ul class='dropdown-menu' role='menu'>\";\n\n              if ($scope.menuitems['A01_S46']) {\n                str += \"<li><a  href='#/projectManagement////\" + full.id + \"'>项目信息</a></li></ul>\";\n              }\n            }\n\n            str += \"</div>\";\n            return str;\n          }\n        }\n      }]\n    }; //客户其他联系人操作\n\n    $scope.inputFun = {\n      addOther: function addOther() {\n        $scope.mistakeMesg.email = false;\n        $scope.mistakeMesg.phone = false;\n\n        if ($scope.othercontactlist && $scope.othercontactlist.length >= 5) {\n          growl.error(\"其他联系人最多只能添加5个人\", {});\n          return;\n        }\n\n        $scope.inputItem.clientOther.contactName = \"\";\n        $scope.inputItem.clientOther.contactDuty = \"\";\n        $scope.inputItem.clientOther.contactPhone = \"\";\n        $scope.inputItem.clientOther.contactEmail = \"\";\n        $scope.inputItem.clientOther.id = -1;\n        ngDialog.open({\n          template: '../partials/dialogue/client_other_dia.html',\n          className: 'ngdialog-theme-plain',\n          scope: $scope\n        });\n      },\n      saveOther: function saveOther() {\n        if ($scope.mistakeMesg.phone) {\n          growl.warning(\"请正确填写联系电话\", {});\n          return;\n        }\n\n        if ($scope.mistakeMesg.email) {\n          growl.warning(\"请正确填写联系邮箱\", {});\n          return;\n        }\n\n        var inputOther = $scope.inputItem.clientOther;\n\n        if (inputOther.id == -1) {\n          //新加\n          var newObj = {\n            \"contactName\": inputOther.contactName,\n            \"contactDuty\": inputOther.contactDuty,\n            \"contactPhone\": inputOther.contactPhone,\n            \"contactEmail\": inputOther.contactEmail,\n            'id': 0,\n            \"createTime\": new Date()\n          };\n          $scope.othercontactlist.unshift(newObj);\n        }\n\n        if (inputOther.isEdit == 3) {\n          //编辑\n          if (inputOther.id == 0) {\n            //本地\n            $scope.othercontactlist.forEach(function (item) {\n              if (item.createTime == inputOther.createTime) {\n                $.extend(item, inputOther);\n              }\n            });\n          } else if (inputOther.id > 0) {\n            $scope.othercontactlist.forEach(function (item) {\n              if (item.id == inputOther.id) {\n                $.extend(item, inputOther);\n              }\n            });\n          }\n\n          for (var i in $scope.othercontactlist) {\n            if ($scope.othercontactlist[i].isEdit == 3) {\n              delete $scope.othercontactlist[i].isEdit;\n            }\n          }\n        }\n\n        $timeout(function () {\n          $scope.$broadcast(Event.CLIENTMANAGEINIT + '_Other', $scope.othercontactlist);\n        });\n        ngDialog.close();\n      },\n      doActionOther: function doActionOther(type, select, callback) {\n        if (type == \"cancel\") {\n          for (var i = $scope.othercontactlist.length - 1; i > -1; i--) {\n            if (select.createTime && $scope.othercontactlist[i].createTime == select.createTime) {\n              $scope.othercontactlist.splice(i, 1);\n            } else if (!select.createTime && select.id && $scope.othercontactlist[i].id == select.id) {\n              $scope.othercontactlist.splice(i, 1);\n            } else {\n              $scope.othercontactlist[i][\"isEdit\"] = 0;\n            }\n          }\n\n          $scope.$broadcast(Event.CLIENTMANAGEINIT + '_Other', $scope.othercontactlist);\n        } else if (type == 'save') {\n          if (callback) {\n            callback();\n          }\n        } else if (type == 'delete') {\n          for (var i in $scope.othercontactlist) {\n            if (select.createTime && $scope.othercontactlist[i].createTime == select.createTime) {\n              $scope.othercontactlist.splice(i, 1);\n              $scope.$apply();\n\n              if (callback) {\n                callback(true);\n              }\n\n              return; // growl.success(\"其他联系人已删除\", {});\n              // $scope.saveUser('saveClient'); 本地删除不需要调用保存信息\n            }\n          }\n\n          BootstrapDialog.show({\n            title: '提示',\n            closable: false,\n            message: '确定删除该联系人记录？',\n            buttons: [{\n              label: '确定',\n              cssClass: 'btn-success',\n              action: function action(dialogRef) {\n                for (var i in $scope.othercontactlist) {\n                  // if (select.createTime && ($scope.othercontactlist[i].createTime == select.createTime)) {\n                  //   $scope.othercontactlist.splice(i, 1);\n                  //   $scope.$apply();\n                  //   // growl.success(\"其他联系人已删除\", {});\n                  //   // $scope.saveUser('saveClient'); 本地删除不需要调用保存信息\n                  // } else \n                  if (!select.createTime && select.id && $scope.othercontactlist[i].id == select.id) {\n                    $scope.othercontactlist.splice(i, 1);\n                    $scope.saveUser('saveClientOther');\n                  }\n                }\n\n                if (callback) {\n                  callback(true);\n                }\n\n                dialogRef.close();\n              }\n            }, {\n              label: '取消',\n              action: function action(dialogRef) {\n                dialogRef.close();\n              }\n            }]\n          });\n        }\n      }\n    }; //添加\n\n    $scope.addUser = function (type) {\n      if (type == \"addDealer\") {\n        initData();\n        ngDialog.open({\n          template: '../partials/dialogue/dealer_info_dia.html',\n          className: 'ngdialog-theme-plain',\n          scope: $scope\n        });\n      } else {\n        location.href = \"#/userclient//0\";\n      }\n    }; //保存\n\n\n    $scope.saveUser = function (type, flg) {\n      var dealerInfo = $scope.inputItem.dealer;\n\n      if (type == 'saveDealer') {\n        if ($scope.mistakeMesg.phone) {\n          growl.warning(\"请正确输入座机或手机号\", {});\n          return;\n        }\n\n        if ($scope.mistakeMesg.email) {\n          growl.warning(\"请正确输入邮箱地址\", {});\n          return;\n        }\n\n        if (dealerInfo.id > 0) {\n          distributorUIService.updateDistributor(dealerInfo, function (returnObj) {\n            if (returnObj.code == 0) {\n              growl.success(\"经销商信息修改完成\", {});\n              var dealerLists = $scope.dealerGridData.data;\n\n              for (var i in dealerLists) {\n                if (dealerLists[i].id == dealerInfo.id) {\n                  $.extend(dealerLists[i], dealerInfo);\n                  break;\n                }\n              }\n\n              broadInfo('dealer');\n              ngDialog.close();\n              return;\n            }\n          });\n        } else {\n          distributorUIService.addDistributor($scope.inputItem.dealer, function (returnObj) {\n            if (returnObj.code == 0) {\n              growl.success(\"经销商信息添加成功\", {});\n              returnObj.data['isEdit'] = 0;\n              $scope.dealerGridData.data.push(returnObj.data);\n              broadInfo('dealer');\n              ngDialog.close();\n              return;\n            }\n          });\n        }\n      } else if (type == 'saveClientOther') {\n        ////编辑客户时，删除已存数据库其他联系人，需保存\n        var newObj = {};\n\n        if (selectedObj && $routeParams.id == 0) {\n          newObj.id = selectedObj.id;\n        } else {\n          newObj.id = $routeParams.type;\n        }\n\n        $.extend(newObj, $scope.inputItem.userMain); //同上\n\n        newObj.otherContacts = $scope.othercontactlist; //同上\n\n        getAddressPoint(newObj, function (newObj) {\n          customerUIService.updateCustomer(newObj, function (returnObj) {\n            if (returnObj.code == 0) {\n              growl.success(\"其他联系人已删除\", {});\n              $timeout(function () {\n                $scope.othercontactlist = returnObj.data.otherContacts;\n                $scope.$broadcast(Event.CLIENTMANAGEINIT + '_Other', $scope.othercontactlist);\n              });\n              return;\n            }\n          });\n        });\n      } else if (type = 'saveClient') {\n        var item = $scope.inputItem.userMain;\n        var mainlabel = $scope.menuitems['S12'] && $scope.menuitems['S12'].label ? $scope.menuitems['S12'].label : '客户';\n\n        if ($scope.inputItem.userMain.values == undefined || $scope.inputItem.userMain.values == null) {\n          $scope.inputItem.userMain.values = {};\n        }\n\n        $scope.inputItem.userMain.values.standardAddress = item.county ? item.county : item.city ? item.city : item.province;\n\n        if (!$scope.inputItem.userMain.domainPath) {\n          growl.warning(\"请选择\" + mainlabel + \"归属\", {});\n          return;\n        }\n\n        if (!$scope.inputItem.userMain.customerName) {\n          growl.warning(\"请输入\" + mainlabel + \"名称\", {});\n          return;\n        }\n\n        if (!$scope.inputItem.userMain.customerContact) {\n          growl.warning(\"请输入主要联系人\", {});\n          return;\n        }\n\n        if (!$scope.inputItem.userMain.duty) {\n          growl.warning(\"请选择联系人职务\", {});\n          return;\n        }\n\n        if (!$scope.inputItem.userMain.customerPhone) {\n          growl.warning(\"请输入联系人电话\", {});\n          return;\n        }\n\n        if ($scope.mistakeMesg.userphone) {\n          growl.warning(\"请正确填写联系人电话\", {});\n          return;\n        } // if (!$scope.inputItem.userMain.customerEmail) {\n        //   growl.warning(\"请输入联系人邮箱地址\", {});\n        //   return;\n        // }\n\n\n        if ($scope.inputItem.userMain.customerEmail && $scope.mistakeMesg.useremail) {\n          growl.warning(\"请输入正确的邮箱地址\", {});\n          return;\n        }\n\n        if (!$scope.inputItem.userMain.values.standardAddress) {\n          growl.warning(\"请选择所属区域\", {});\n          return;\n        }\n        /*if (!$scope.inputItem.userMain.customerAddress) {\n          growl.warning(\"请输入客户详细地址\", {});\n          return;\n        }*/\n\n\n        if ($routeParams.id == 0 && !selectedObj) {\n          var param = {};\n          $.extend(param, $scope.inputItem.userMain); // $scope.inputItem.userMain 包含原始$scope.othercontactlist信息，所以将修改的 $scope.othercontactlist置下赋值\n\n          param.otherContacts = $scope.othercontactlist; //与上代码不能调换位置\n\n          getAddressPoint(param, function (param) {\n            customerUIService.addCustomer(param, function (returnObj) {\n              if (returnObj.code == 0) {\n                growl.success(mainlabel + \"添加成功\", {});\n                selectedObj = returnObj.data; //客户新增保存再保存\n\n                $scope.userGridData.data.push(returnObj.data);\n                broadInfo('client', 'other');\n                $location.url(\"/userclient/\" + returnObj.data.id);\n                $location.replace();\n                return;\n              }\n            });\n          });\n        } else {\n          var obj = {};\n\n          if ($routeParams.id == 0 && selectedObj) {\n            obj.id = selectedObj.id;\n          } else {\n            obj.id = $routeParams.type;\n          }\n\n          $.extend(obj, $scope.inputItem.userMain); //同上\n\n          obj.otherContacts = $scope.othercontactlist; //同上\n\n          getAddressPoint(obj, function (obj) {\n            customerUIService.updateCustomer(obj, function (returnObj) {\n              if (returnObj.code == 0) {\n                growl.success(mainlabel + \"信息修改完成\", {});\n                var data = $scope.userGridData.data;\n\n                for (var i in data) {\n                  if (data[i].id == obj.id) {\n                    $.extend(data[i], returnObj.data);\n                  }\n                }\n\n                broadInfo('client', 'other');\n                $scope.othercontactlist = returnObj.data.otherContacts;\n                $timeout(function () {\n                  $scope.$broadcast(Event.CLIENTMANAGEINIT + '_Other', $scope.othercontactlist);\n                });\n                return;\n              }\n            });\n          });\n        }\n\n        if (flg == \"createUser\") {\n          var baseDomain = $scope.domainListDic[$scope.inputItem.userMain.domainPath];\n\n          if (!baseDomain) {\n            growl.warning(\"无法创建\" + mainlabel + \"用户\", {});\n            return;\n          }\n\n          userDomainService.addDomain(baseDomain.id, {\n            name: $scope.inputItem.userMain.customerName,\n            description: \"\",\n            values: {\n              standardAddress: $scope.inputItem.userMain.values.standardAddress\n            }\n          }, function (returnObj) {\n            if (returnObj.code == 0) {\n              var newUser = {};\n              newUser.userType = $scope.baseConfig.customerConfig.typeCode ? $scope.baseConfig.customerConfig.typeCode : 100;\n              newUser.status = 0;\n              newUser.userName = $scope.inputItem.userMain.customerContact;\n              newUser.loginName = $scope.inputItem.userMain.customerPhone;\n              newUser.mobilePhone = $scope.inputItem.userMain.customerPhone;\n              var domain = {\n                userID: \"\",\n                domainID: returnObj.data.id,\n                domainPath: returnObj.data.domainPath,\n                name: returnObj.data.name\n              };\n              var role = [{\n                \"roleID\": $scope.baseConfig.customerConfig.role ? $scope.baseConfig.customerConfig.role : 102\n              }];\n              userUIService.enterpriseUserRegister(newUser, domain, role, function (returnObj) {\n                growl.success(mainlabel + \"的用户添加成功\", {});\n              });\n            }\n          });\n        }\n      }\n    }; //客户操作\n\n\n    $scope.doAction = function (type, select, callback) {\n      if (type == \"delete\") {\n        BootstrapDialog.show({\n          title: '提示',\n          closable: false,\n          message: '确认删除该记录？',\n          buttons: [{\n            label: '确定',\n            cssClass: 'btn-success',\n            action: function action(dialogRef) {\n              customerUIService.deleteCustomerById(select.id, function (resultObj) {\n                callback(resultObj.code);\n\n                if (resultObj.code == 0) {\n                  growl.success(\"记录已删除\", {});\n                }\n              });\n              dialogRef.close();\n            }\n          }, {\n            label: '取消',\n            action: function action(dialogRef) {\n              dialogRef.close();\n            }\n          }]\n        });\n      } else if (type == \"editClient\") {\n        location.href = \"#/userclient/\" + $.trim(select.id) + \"/\";\n      }\n    }; //经销商操作\n\n\n    $scope.doDealerAction = function (type, select, callback) {\n      if (type == \"cancel\") {\n        for (var i = $scope.dealerGridData.data.length - 1; i > -1; i--) {\n          if ($scope.dealerGridData.data[i].id == 0) {\n            $scope.dealerGridData.data.splice(i, 1);\n          } else {// $scope.dealerGridData.data[i][\"isEdit\"] = 0;\n          }\n        }\n\n        broadInfo('dealer');\n      } else if (type == \"save\") {// distributorUIService.updateDistributor(select, function(returnObj) {\n        //   callback(returnObj.code);\n        //   if (returnObj.code == 0) {\n        //     growl.success(\"经销商信息修改完成\", {});\n        //     return;\n        //   } else {\n        //     var str = returnObj.message;\n        //     growl.error(str, {});\n        //   }\n        // })\n      } else if (type == \"delete\") {\n        BootstrapDialog.show({\n          title: '提示',\n          closable: false,\n          message: '确认删除该经销商记录？',\n          buttons: [{\n            label: '确定',\n            cssClass: 'btn-success',\n            action: function action(dialogRef) {\n              distributorUIService.deleteDistributorById(select.id, function (returnObj) {\n                callback(returnObj.code);\n\n                if (returnObj.code == 0) {\n                  var dealerLists = $scope.dealerGridData.data;\n\n                  for (var j in dealerLists) {\n                    if (dealerLists[j].id == select.id) {\n                      dealerLists.splice(j, 1);\n                    }\n                  }\n\n                  growl.success(\"经销商信息已删除\", {});\n                  return;\n                }\n              });\n              dialogRef.close();\n            }\n          }, {\n            label: '取消',\n            action: function action(dialogRef) {\n              dialogRef.close();\n            }\n          }]\n        });\n      }\n    };\n\n    function broadInfo(value, type) {\n      if (value == \"client\" && type == \"other\") {\n        $timeout(function () {\n          $scope.$broadcast(Event.CLIENTMANAGEINIT, $scope.userGridData);\n        });\n      } else if (value == \"dealer\") {\n        $timeout(function () {\n          $scope.$broadcast(Event.CLIENTMANAGEINIT + \"_dealer\", $scope.dealerGridData);\n        });\n      }\n    }\n\n    ; //查询\n\n    $scope.searchData = function (type) {\n      if (type == \"searchDealer\") {\n        var param = {\n          \"orCondition\": \"\" ? \"\" : $scope.selectedDealItem.orCondition,\n          \"distributorName\": \"\" ? \"\" : $scope.selectedDealItem.distributorName,\n          \"distributorAddress\": \"\" ? \"\" : $scope.selectedDealItem.distributorAddress,\n          \"domainPath\": \"\" ? \"\" : $scope.selectedDealItem.domainPath,\n          \"contactPhone\": \"\" ? \"\" : $scope.selectedDealItem.contactPhone\n        };\n        distributorUIService.findDistributorsByCondition(param, function (returnObj) {\n          if (returnObj.code == 0) {\n            $scope.dealerGridData.data = returnObj.data;\n            broadInfo('dealer');\n          }\n        });\n      } else {\n        var param = {\n          \"id\": \"\" ? \"\" : $routeParams.type,\n          \"orCondition\": \"\" ? \"\" : $scope.selectedItem.orCondition,\n          \"customerName\": \"\" ? \"\" : $scope.selectedItem.customerName,\n          \"customerAddress\": \"\" ? \"\" : $scope.selectedItem.customerAddress,\n          \"domainPath\": \"\" ? \"\" : $scope.selectedItem.domainPath,\n          \"customerPhone\": \"\" ? \"\" : $scope.selectedItem.customerPhone\n        };\n        customerUIService.findCustomersByCondition(param, function (returnObj) {\n          if (returnObj.code == 0) {\n            $scope.userGridData.data = returnObj.data;\n\n            if ($routeParams.type) {\n              $scope.inputItem.userMain = returnObj.data[0];\n\n              if ($scope.inputItem.userMain.values.standardAddress) {\n                var arr = $scope.inputItem.userMain.values.standardAddress.split(\",\");\n                $scope.inputItem.userMain.province = arr[0];\n\n                if (arr[1]) {\n                  $scope.inputItem.userMain.city = arr[0] + \",\" + arr[1];\n                }\n\n                if (arr[2]) {\n                  $scope.inputItem.userMain.county = $scope.inputItem.userMain.values.standardAddress;\n                }\n                /**\n                  取消地址的这种取法，直接从全局中获得，请熟悉这种使用方式。\n                if(arr[1]) {\n                  $scope.inputItem.userMain.city = $scope.cityDics[arr[0]].find(function(item) {\n                    return arr[1] == item.label;\n                  }).id;\n                }\n                if(arr[2]) {\n                  $scope.inputItem.userMain.county = $scope.districtDics[$scope.inputItem.userMain.city].find(function(item) {\n                    return arr[2] == item.label;\n                  }).id;\n                }\n                \n                $scope.cityList = $scope.cityDics[arr[0]];\n                $scope.districtList = $scope.districtDics[$scope.inputItem.userMain.city];\n                */\n\n              } else {\n                $scope.inputItem.userMain.province = \"\";\n                $scope.inputItem.userMain.city = \"\";\n                $scope.inputItem.userMain.county = \"\";\n              }\n\n              ;\n              $scope.othercontactlist = returnObj.data[0].otherContacts;\n              $timeout(function () {\n                $scope.$broadcast(Event.CLIENTMANAGEINIT + '_Other', $scope.othercontactlist);\n              });\n            }\n\n            broadInfo('client', 'other');\n          }\n        });\n      }\n    }; //验证信息\n\n\n    $scope.verifyFun = function (value, type, user) {\n      var reg, r;\n\n      if (type == \"phone\") {\n        var isMob = /^((1[34578]\\d{9})|(0\\d{2,4}\\-\\d{7,8})|\\d{8})$/;\n        r = isMob.test(value);\n\n        if (!r) {\n          if (user == 'user') {\n            $scope.mistakeMesg.userphone = true;\n          } else {\n            if (!value) {\n              $scope.mistakeMesg.phone = false;\n            } else {\n              $scope.mistakeMesg.phone = true;\n            }\n          }\n        } else {\n          if (user == 'user') {\n            $scope.mistakeMesg.userphone = false;\n          } else {\n            $scope.mistakeMesg.phone = false;\n          }\n        }\n      } else if (type == \"email\") {\n        reg = /^[a-zA-Z0-9_-].+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/;\n        r = reg.test(value);\n\n        if (!r) {\n          if (user == 'user') {\n            $scope.mistakeMesg.useremail = true;\n          } else {\n            if (!value) {\n              $scope.mistakeMesg.email = false;\n            } else {\n              $scope.mistakeMesg.email = true;\n            }\n          }\n        } else {\n          if (user == 'user') {\n            $scope.mistakeMesg.useremail = false;\n          } else {\n            $scope.mistakeMesg.email = false;\n          }\n        }\n      }\n    }; //特殊符号过滤\n\n\n    var stripscript = function stripscript(str) {\n      var pattern = new RegExp(\"[<>/]\");\n      var rs = \"\";\n\n      for (var i = 0; i < str.length; i++) {\n        rs = rs + str.substr(i, 1).replace(pattern, '');\n      }\n\n      return rs;\n    }; //弹出框的关闭事件\n\n\n    $scope.closeDialog = function () {\n      ngDialog.close();\n    }; //根据用户Id查用户域\n\n\n    var domainTreeQuery = function domainTreeQuery(callbackFun) {\n      userDomainService.queryDomainTree(userLoginUIService.user.userID, function (data) {\n        $scope.domainListTree = data.domainListTree;\n        $scope.domainListDic = data.domainListDic;\n        if (callbackFun) callbackFun();\n      });\n    }; //根据用户Id查经销商域\n\n\n    var queryEnterpriseDomainTree = function queryEnterpriseDomainTree(callbackFun) {\n      userDomainService.queryEnterpriseDomainTree(userLoginUIService.user.userID, function (data) {\n        $scope.domainDealerListTree = data.domainListTree;\n        $scope.domainDealerListDic = data.domainListDic;\n        if (callbackFun) callbackFun();\n      });\n    }; //初始数据\n\n\n    var init = function init() {\n      initData();\n\n      if (dealerType) {\n        queryEnterpriseDomainTree(function () {\n          $scope.searchData('searchDealer');\n        });\n      } else {\n        domainTreeQuery(function () {\n          $scope.searchData();\n        });\n      } //新加客户，其他联系人一栏默认数据为空\n\n\n      if ($routeParams.id == 0 && !$routeParams.type) {\n        $timeout(function () {\n          $scope.$broadcast(Event.CLIENTMANAGEINIT + '_Other', []);\n        });\n      }\n    };\n\n    var getAddressPoint = function getAddressPoint(inputObj, callbackFun) {\n      inputObj.values.latitude = \"\";\n      inputObj.values.longitude = \"\";\n      userLoginUIService.getAddressPoint(inputObj.values.standardAddress.split(\",\").join(\"\") + inputObj.customerAddress, function (address) {\n        inputObj.values.latitude = address.location.lat.toFixed(6);\n        inputObj.values.longitude = address.location.lng.toFixed(6);\n\n        if (callbackFun) {\n          callbackFun(inputObj);\n        }\n      });\n    }; //判断用户是否存在\n\n\n    if (!userLoginUIService.user.isAuthenticated) {\n      $scope.$on('loginStatusChanged', function (evt, d) {\n        if (userLoginUIService.user.isAuthenticated) {\n          init();\n        }\n      });\n    } else {\n      init();\n    }\n  }]);\n  controllers.initController('userSupplierCtrl', ['$scope', 'userLoginUIService', 'userEnterpriseService', 'userUIService', 'growl', 'userRoleUIService', 'userFunctionService', 'userDomainService', 'marketplaceUIService', function ($scope, userLoginUIService, userEnterpriseService, userUIService, growl, userRoleUIService, userFunctionService, userDomainService, marketplaceUIService) {\n    $scope.userSearch = {};\n    var button = \"\"; //用户管理\n\n    $scope.userGridData = {\n      columns: [{\n        title: \"供应商名称\",\n        data: \"supplierName\"\n      }, {\n        title: \"供应商联系人\",\n        data: \"supplierContact\"\n      }, {\n        title: \"联系方式（手机/邮箱）\",\n        data: \"supplierEmail\"\n      }, {\n        title: \"联系地址\",\n        data: \"supplierAddress\"\n      }, {\n        title: \"供应商状态\",\n        data: \"supplierStatus\"\n      }],\n      columnDefs: [] //用户管理数据初始化\n\n    };\n\n    $scope.getDBdata = function (userInfo) {\n      //客户管理\n      userEnterpriseService.querySupplier(function (resultObj) {\n        if (resultObj.code == 0) {\n          for (var i in resultObj.data) {\n            var obj = resultObj.data[i];\n            obj.isEdit = 0;\n\n            if (obj.supplierEmail == null || obj.supplierEmail == \"\") {\n              obj[\"supplierEmail\"] = obj.supplierPhone;\n            } else {\n              obj[\"supplierEmail\"] = obj.supplierEmail;\n            }\n          }\n\n          $scope.userGridData.data = resultObj.data;\n          $scope.$broadcast(Event.SUPPLIERMANAGEINIT, $scope.userGridData);\n        }\n      });\n    }; //判断用户是否存在\n\n\n    if (!userLoginUIService.user.isAuthenticated) {\n      $scope.$on('loginStatusChanged', function (evt, d) {\n        if (userLoginUIService.user.isAuthenticated) {\n          $scope.getDBdata({});\n        }\n      });\n    } else {\n      $scope.getDBdata({});\n    }\n  }]);\n});"],"sourceRoot":"/source/"}