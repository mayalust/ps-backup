{"version":3,"sources":["app-oc/js/controllers/maintenance-ctrl.js"],"names":["define","controllers","BootstrapDialog","bootstrapMultiselect","initController","$scope","q","ngDialog","$location","$routeParams","$timeout","maintenanceTaskUIService","customerUIService","projectUIService","kpiDataService","resourceUIService","growl","userLoginUIService","ticketCategoryService","userEnterpriseService","Info","$route","queryDitem","objMain","isLoading","mainId","id","promises","defers","i","push","defer","cycleChang","executionCycle","cycleNum","processTypeDic","selectTaskList","selectStatusList","startList","disableList","selectedHandler","activeAlert","taskList","forEach","obj","selected","taskStatus","$apply","customersList","customersDic","projectsList","projectsDic","devicesList","devicesListDic","enterpriseList","enterpriseListDic","addMain","v","str","operationStatus","jQuery","extend","name","customerId","projectId","deviceId","remindDays","firstExecutionTime","executioner","ticketCategoryId","open","template","scope","className","queryData","queryObj","getTaskByCondition","resultObj","code","data","$broadcast","doAction","type","select","callback","baseConfig","customerConfig","display","check","warning","projectConfig","menuitems","label","newData","Date","nextExecutionTime","Format","currentDate","startDate","endDate","parse","replace","updateMaintenanceTask","returnObj","j","success","closeDialog","checkDate","addMaintenanceTask","show","title","closable","message","buttons","cssClass","action","dialogRef","deleteTask","splice","close","deleteMaintenanceTask","successObj","length","failObj","modifyStatus","status","selTask","b","gate","goSearch","search","state","attributeName","loaderValue","undefined","statusSave","init","findCustomersByCondition","customerDic","item","text","customerName","resolve","getTicketCategorys","arr1","category","processType","findProjectsByCondition","projectName","queryEnterpriseUser","arr","userID","userName","getDevicesByCondition","promise","all","then","user","isAuthenticated","$on","evt","d","person","selectList","queryEnterprise","parseInt","nextExecutioner","serarchObj","update","changeUser","t","queryStatus","userUIService","ticketTaskService","conditionId","templateAddress","urlService","uploadFileUrl","detail","querySearch","modelId","deviceName","serverType","routePathNodes","modelListSelect","modelList","getModels","rootModelDic","tree","parentModelId","cmpObj","rootModel","saveCondition","saveMaintenanceRecord","recordList","res","getRecordByCondition","templateURL","sp","split","taskId","ticketTaskId","getTicketTaskById","sparePartsInitList","values","stockOrderItemList","Event","WORKORDERRECORDINIT","serarch","serviceType","goClear"],"mappings":"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","file":"app-oc/js/controllers/maintenance-ctrl.js","sourcesContent":["define(['controllers/controllers', 'bootstrap-dialog', 'bootstrap-multiselect'], function (controllers, BootstrapDialog, bootstrapMultiselect) {\n  'use strict';\n\n  controllers.initController('maintenanceCtrl', ['$scope', '$q', 'ngDialog', '$location', '$routeParams', '$timeout', 'maintenanceTaskUIService', 'customerUIService', 'projectUIService', 'kpiDataService', 'resourceUIService', 'growl', 'userLoginUIService', 'ticketCategoryService', 'userEnterpriseService', 'Info', '$route', function ($scope, q, ngDialog, $location, $routeParams, $timeout, maintenanceTaskUIService, customerUIService, projectUIService, kpiDataService, resourceUIService, growl, userLoginUIService, ticketCategoryService, userEnterpriseService, Info, $route) {\n    $scope.queryDitem = {};\n    $scope.objMain = {};\n    $scope.isLoading = false;\n    var mainId = $routeParams.id;\n    var promises = []; //已加载列表\n\n    var defers = []; //延期列表\n\n    for (var i = 0; i < 5; i++) {\n      defers.push(q.defer());\n    }\n\n    ;\n\n    $scope.cycleChang = function () {\n      if ($scope.objMain.executionCycle == 'disposable') {\n        $scope.objMain.cycleNum = 1;\n      } else {\n        $scope.objMain.cycleNum = '';\n      }\n    };\n\n    var initObj = function initObj() {\n      $scope.objMain = {\n        \"id\": 0,\n        \"name\": \"\",\n        \"customerId\": null,\n        \"projectId\": null,\n        \"deviceId\": null,\n        \"executionCycle\": \"\",\n        \"remindDays\": \"\",\n        \"firstExecutionTime\": \"\",\n        \"executioner\": \"\",\n        \"ticketCategoryId\": \"\"\n      };\n    }; //获取工单流程\n\n\n    $scope.processTypeDic = {};\n\n    var getProcedure = function getProcedure() {\n      ticketCategoryService.getTicketCategorys(function (returnObj) {\n        if (returnObj.code == 0) {\n          var arr1 = [];\n\n          for (var i in returnObj.data) {\n            if (returnObj.data[i].category == 40) {\n              //维保工单\n              arr1.push(returnObj.data[i]);\n            }\n          }\n\n          arr1.forEach(function (item) {\n            $scope.processTypeDic[item.id] = item;\n            item.text = item.name;\n          });\n          $scope.processType = arr1;\n          defers[0].resolve(\"success\");\n        }\n      });\n    };\n\n    $scope.selectTaskList = [];\n    $scope.selectStatusList = {\n      \"startList\": [],\n      \"disableList\": []\n    };\n\n    $scope.selectedHandler = function () {\n      var activeAlert = [];\n      $scope.selectStatusList.startList = [];\n      $scope.selectStatusList.disableList = []; //  \n\n      $scope.taskList.forEach(function (obj) {\n        if (obj.selected) {\n          activeAlert.push(obj);\n\n          if (obj.taskStatus == 0) {\n            $scope.selectStatusList.startList.push(obj);\n          } else if (obj.taskStatus == 1) {\n            $scope.selectStatusList.disableList.push(obj);\n          }\n        }\n      });\n      $scope.selectTaskList = activeAlert;\n      $scope.$apply();\n    };\n    /**\n     * 获得客户列表\n     */\n\n\n    $scope.customersList;\n    $scope.customersDic = {};\n\n    var queryCustomer = function queryCustomer() {\n      customerUIService.findCustomersByCondition({}, function (returnObj) {\n        $scope.customersDic = returnObj.customerDic;\n        returnObj.data.forEach(function (item) {\n          item.text = item.customerName;\n        });\n        $scope.customersList = returnObj.data;\n        defers[1].resolve(\"success\");\n      });\n    };\n    /**\n     * 查询项目\n     */\n\n\n    $scope.projectsList;\n    $scope.projectsDic = {};\n\n    var queryProject = function queryProject() {\n      projectUIService.findProjectsByCondition({}, function (returnObj) {\n        if (returnObj.code == 0) {\n          returnObj.data.forEach(function (item) {\n            $scope.projectsDic[item.id] = item;\n            item.text = item.projectName;\n          });\n          $scope.projectsList = returnObj.data;\n          defers[2].resolve(\"success\");\n        }\n      });\n    };\n    /**\n     * 查询设备\n     */\n\n\n    $scope.devicesList;\n    $scope.devicesListDic = {};\n\n    var queryDevices = function queryDevices() {\n      resourceUIService.getDevicesByCondition({}, function (returnObj) {\n        if (returnObj.code == 0) {\n          returnObj.data.forEach(function (item) {\n            $scope.devicesListDic[item.id] = item;\n            item.text = item.label;\n          });\n          $scope.devicesList = returnObj.data;\n          defers[3].resolve(\"success\");\n        }\n      });\n    };\n    /**\n     * 查询用户\n     */\n\n\n    $scope.enterpriseList;\n    $scope.enterpriseListDic = {};\n\n    var queryEnterprise = function queryEnterprise() {\n      userEnterpriseService.queryEnterpriseUser(function (returnObj) {\n        if (returnObj.code == 0) {\n          var arr = [];\n          returnObj.data.forEach(function (item) {\n            $scope.enterpriseListDic[item.userID] = item;\n            item.text = item.userName;\n\n            if (item.status == 0) {\n              arr.push(item);\n            }\n          });\n          $scope.enterpriseList = arr;\n          defers[4].resolve(\"success\");\n        }\n      });\n    };\n\n    $scope.addMain = function (v) {\n      if (v.id > 0) {\n        var str = '';\n\n        if (v.operationStatus == 0) {\n          str += '未到期';\n        } else if (v.operationStatus == 1) {\n          str += '待分配';\n        } else if (v.operationStatus == 2) {\n          str += '已分配';\n        } else if (v.operationStatus == 3) {\n          str += '待执行';\n        } else if (v.operationStatus == 4) {\n          str += '已完成';\n        }\n\n        v[\"operationName\"] = str;\n        $scope.objMain = jQuery.extend(true, {}, v);\n      } else {\n        initObj();\n      }\n\n      ngDialog.open({\n        template: '../partials/dialogue/add_maintenance.html',\n        scope: $scope,\n        className: 'ngdialog-theme-plain'\n      });\n    };\n    /**\n     *  查询列表\n     */\n\n\n    var queryData = function queryData(queryObj) {\n      // $scope.loaderValue = \"\";\n      maintenanceTaskUIService.getTaskByCondition(queryObj, function (resultObj) {\n        if (resultObj.code == 0) {\n          $scope.taskList = resultObj.data;\n          $scope.$broadcast(\"MAINTENANCE\", {\n            data: $scope.taskList\n          });\n        }\n      });\n    };\n\n    var dataCheck = function dataCheck(startDate, endDate) {\n      var date1 = new Date(Date.parse(endDate.replace(\"-\", \"/\")));\n      var date2 = new Date(Date.parse(startDate.replace(\"-\", \"/\")));\n      return date1 < date2;\n    };\n\n    $scope.doAction = function (type, select, callback) {\n      if (type == \"save\") {\n        if (!$scope.objMain.customerId && $scope.baseConfig.customerConfig.display && $scope.baseConfig.customerConfig.check) {\n          growl.warning(\"请选择客户\", {});\n          return;\n        }\n\n        if (!$scope.objMain.projectId && $scope.baseConfig.projectConfig.display && $scope.baseConfig.projectConfig.check) {\n          var str = $scope.menuitems['S13'].label ? $scope.menuitems['S13'].label : '项目';\n          growl.warning(\"请选择\" + str + \"\", {});\n          return;\n        }\n\n        if ($scope.objMain.id > 0) {\n          var newData = new Date($scope.objMain.nextExecutionTime).Format(\"yyyy-MM-dd hh:mm:ss\");\n          var currentDate = new Date().Format(\"yyyy-MM-dd hh:mm:ss\");\n          var ckTime = dataCheck(newData, currentDate);\n\n          if (ckTime == false) {\n            growl.warning(\"您选择的时间小于当前时间\", {});\n            return;\n          }\n\n          for (var i in $scope.taskList) {\n            if ($scope.taskList[i].id != 0 && $scope.objMain.id != $scope.taskList[i].id && $scope.objMain.name == $scope.taskList[i].name) {\n              growl.warning(\"计划名称不能重复\", {});\n              return;\n            }\n          }\n\n          $scope.isLoading = true;\n          maintenanceTaskUIService.updateMaintenanceTask($scope.objMain, function (returnObj) {\n            $scope.isLoading = false;\n\n            if (returnObj.code == 0) {\n              growl.success(\"保存成功\", {});\n\n              for (var j in $scope.taskList) {\n                if ($scope.taskList[j].id == $scope.objMain.id) {\n                  $scope.taskList[j] = returnObj.data;\n                  break;\n                }\n              }\n\n              $scope.$broadcast(\"MAINTENANCE\", {\n                data: $scope.taskList\n              });\n              $scope.closeDialog();\n            }\n          });\n        } else {\n          var newData = new Date($scope.objMain.firstExecutionTime).Format(\"yyyy-MM-dd\");\n          var ckTime = checkDate(newData);\n\n          if (ckTime == false) {\n            growl.warning(\"您选择的时间小于当前时间\", {});\n            return;\n          }\n\n          for (var i in $scope.taskList) {\n            if ($scope.taskList[i].id != 0 && $scope.objMain.name == $scope.taskList[i].name) {\n              growl.warning(\"计划名称不能重复\", {});\n              return;\n            }\n          }\n\n          $scope.isLoading = true;\n          maintenanceTaskUIService.addMaintenanceTask($scope.objMain, function (returnObj) {\n            $scope.isLoading = false;\n\n            if (returnObj.code == 0) {\n              growl.success(\"保存成功\", {});\n              $scope.taskList.push(returnObj.data);\n              $scope.$broadcast(\"MAINTENANCE\", {\n                data: $scope.taskList\n              });\n              $scope.closeDialog();\n            }\n          });\n        }\n      } else if (type == \"delete\") {\n        BootstrapDialog.show({\n          title: '提示',\n          closable: false,\n          //size:BootstrapDialog.SIZE_WIDE,\n          message: '确认要删除维保计划吗？',\n          buttons: [{\n            label: '确定',\n            cssClass: 'btn-success',\n            action: function action(dialogRef) {\n              maintenanceTaskUIService.deleteTask(select.id, function (resultObj) {\n                if (resultObj.code == 0) {\n                  growl.success(\"删除成功\", {});\n                  callback(true);\n                  /* if(resultObj.data.failObj.length > 0){\n                     growl.warning(\"该维保计划已产生工单，不可删除！\", {});\n                     callback(false);\n                   };\n                   if(resultObj.data.successObj.length > 0){\n                     growl.success(\"删除成功\", {});\n                     callback(true);\n                   }*/\n\n                  for (var j in $scope.taskList) {\n                    if ($scope.taskList[j].id == select.id) {\n                      $scope.taskList.splice(j, 1);\n                    }\n                  } // $scope.$broadcast(Event.CMDBINFOSINIT + \"_facility\", $scope.facilityList);\n\n                }\n              });\n              dialogRef.close();\n            }\n          }, {\n            label: '取消',\n            action: function action(dialogRef) {\n              dialogRef.close();\n            }\n          }]\n        });\n      } else if (type == \"delete2\") {\n        maintenanceTaskUIService.deleteMaintenanceTask([select], function (returnObj) {\n          if (returnObj.code == 0) {\n            var successObj = returnObj.data.successObj;\n\n            for (var i = 0; i < $scope.taskList.length; i++) {\n              for (var j = 0; j < successObj.length; j++) {\n                if ($scope.taskList[i].id == successObj[j]) {\n                  $scope.taskList.splice(i, 1);\n                  i--;\n                  break;\n                }\n              }\n            }\n\n            $scope.$broadcast(\"MAINTENANCE\", {\n              data: $scope.taskList\n            });\n            growl.success(\"成功确认\" + returnObj.data.successObj.length + \"个,失败\" + returnObj.data.failObj.length + \"个\", {});\n          } else {\n            growl.success(\"成功确认\" + returnObj.data.successObj.length + \"个,失败\" + returnObj.data.failObj.length + \"个\", {});\n          }\n        });\n      }\n    };\n\n    $scope.modifyStatus = function (status) {\n      var selTask = [];\n\n      for (var b in $scope.selectTaskList) {\n        if ($scope.selectTaskList[b].taskStatus != status) {\n          selTask.push($scope.selectTaskList[b].id);\n        }\n      }\n\n      var str = '';\n\n      if (status == 0) {\n        str += '启用';\n      } else if (status == 1) {\n        str += '停用';\n      }\n\n      if (selTask.length > 0) {\n        BootstrapDialog.show({\n          title: '提示',\n          closable: false,\n          message: '确认' + str + '这' + selTask.length + '个计划吗？',\n          buttons: [{\n            label: '确定',\n            cssClass: 'btn-success',\n            action: function action(dialogRef) {\n              maintenanceTaskUIService.modifyStatus([selTask, status], function (returnObj) {\n                if (returnObj.code == 0) {\n                  for (var i in $scope.taskList) {\n                    returnObj.data.successObj.forEach(function (gate) {\n                      if ($scope.taskList[i].id == gate) {\n                        $scope.taskList[i].taskStatus = status;\n                        ;\n                        return true;\n                      }\n                    });\n                    $scope.taskList[i].selected = false;\n                  }\n\n                  $scope.selectTaskList = [];\n                  $scope.selectStatusList.disableList = [];\n                  $scope.selectStatusList.startList = []; // $scope.selectedHandler();\n\n                  $scope.$broadcast(\"MAINTENANCE\", {\n                    data: $scope.taskList\n                  });\n                  growl.success(\"\" + str + \"成功\" + returnObj.data.successObj.length + \"个计划,失败\" + returnObj.data.failObj.length + \"个计划\", {});\n                }\n              });\n              dialogRef.close();\n            }\n          }, {\n            label: '取消',\n            action: function action(dialogRef) {\n              dialogRef.close();\n            }\n          }]\n        });\n      } else {\n        growl.warning(\"没有要\" + str + \"的维保计划\", {});\n      }\n    }; //查询条件事件\n\n\n    $scope.goSearch = function (search) {\n      var v = {};\n\n      if ($scope.queryDitem.state > 0) {\n        v[$scope.queryDitem.attributeName] = $scope.loaderValue;\n        queryData(v);\n      } else {\n        if (search == \"s\") {\n          v['name'] = $scope.loaderValue;\n        }\n\n        if (mainId && $scope.queryDitem.state == undefined) {\n          v[\"id\"] = mainId;\n        }\n\n        queryData(v);\n      }\n    };\n\n    $scope.statusSave = function (obj, status, callback) {\n      var str = '';\n\n      if (status == 0) {\n        str += '启用';\n      } else if (status == 1) {\n        str += '停用';\n      }\n\n      BootstrapDialog.show({\n        title: '提示',\n        closable: false,\n        message: '确认' + str + '这个计划吗？',\n        buttons: [{\n          label: '确定',\n          cssClass: 'btn-success',\n          action: function action(dialogRef) {\n            maintenanceTaskUIService.modifyStatus([obj, status], function (returnObj) {\n              if (returnObj.code == 0) {\n                for (var i in $scope.taskList) {\n                  returnObj.data.successObj.forEach(function (gate) {\n                    if ($scope.taskList[i].id == gate) {\n                      $scope.taskList[i].taskStatus = status;\n                      ;\n                      return true;\n                    }\n                  });\n                }\n\n                callback(true);\n                growl.success(\"操作成功\", {});\n              }\n            });\n            dialogRef.close();\n          }\n        }, {\n          label: '取消',\n          action: function action(dialogRef) {\n            dialogRef.close();\n          }\n        }]\n      });\n    };\n    /**\n     * 初始化\n     */\n\n\n    var init = function init() {\n      queryCustomer();\n      getProcedure();\n      queryProject();\n      queryEnterprise();\n      queryDevices();\n\n      for (var i in defers) {\n        promises.push(defers[i].promise);\n      } //所有延迟加载完成后操作\n\n\n      q.all(promises).then(function (data) {\n        $scope.goSearch();\n      });\n    };\n    /**\n       * 标准的登录状态判定\n       * 登陆后执行初始化init方法\n       */\n\n\n    if (!userLoginUIService.user.isAuthenticated) {\n      $scope.$on('loginStatusChanged', function (evt, d) {\n        if (userLoginUIService.user.isAuthenticated) {\n          init();\n        }\n      });\n    } else {\n      init();\n    }\n  }]);\n  controllers.initController('maintenanceCalendarCtrl', ['$scope', '$q', 'ngDialog', '$location', '$routeParams', '$timeout', 'maintenanceTaskUIService', 'customerUIService', 'projectUIService', 'kpiDataService', 'resourceUIService', 'growl', 'userLoginUIService', 'ticketCategoryService', 'userEnterpriseService', 'Info', '$route', function ($scope, q, ngDialog, $location, $routeParams, $timeout, maintenanceTaskUIService, customerUIService, projectUIService, kpiDataService, resourceUIService, growl, userLoginUIService, ticketCategoryService, userEnterpriseService, Info, $route) {\n    $scope.executioner = '';\n    var id = $routeParams.id;\n    var person = $routeParams.person;\n    $scope.taskList = [];\n    $scope.selectList = [];\n    /**\n     * 查询用户\n     */\n\n    $scope.enterpriseList;\n    $scope.enterpriseListDic = {};\n\n    var queryEnterprise = function queryEnterprise() {\n      userEnterpriseService.queryEnterpriseUser(function (returnObj) {\n        if (returnObj.code == 0) {\n          var arr = [];\n          returnObj.data.forEach(function (item) {\n            $scope.enterpriseListDic[item.userID] = item;\n            item.text = item.userName;\n\n            if (item.status == 0) {\n              arr.push(item);\n            }\n          });\n          $scope.enterpriseList = arr;\n\n          if (person > 0) {\n            $scope.executioner = parseInt(person);\n            queryData({\n              \"nextExecutioner\": $scope.executioner\n            }, \"execut\");\n          } else {\n            queryData({\n              \"id\": id\n            }, \"init\");\n          }\n        }\n      });\n    };\n\n    $scope.serarchObj = {\n      \"nextExecutioner\": \"\",\n      \"nextExecutionTime\": \"\"\n    };\n\n    $scope.update = function (data, callback) {\n      maintenanceTaskUIService.updateMaintenanceTask(data, function (returnObj) {\n        if (returnObj.code == 0) {\n          $scope.taskList = returnObj.data;\n          callback(true);\n        }\n      });\n    };\n\n    $scope.changeUser = function () {\n      var t = {\n        \"nextExecutioner\": $scope.executioner\n      };\n\n      if ($scope.executioner) {\n        maintenanceTaskUIService.getTaskByCondition(t, function (resultObj) {\n          if (resultObj.code == 0) {\n            $scope.taskList = resultObj.data;\n          }\n        });\n      } else {\n        $scope.taskList = [];\n      }\n    };\n\n    var queryData = function queryData(queryObj, queryStatus) {\n      maintenanceTaskUIService.getTaskByCondition(queryObj, function (resultObj) {\n        if (resultObj.code == 0) {\n          if (queryStatus == 'init') {\n            $scope.selectList = resultObj.data;\n            $scope.taskList = resultObj.data;\n          } else if (queryStatus == \"execut\") {\n            $scope.taskList = resultObj.data;\n            resultObj.data.forEach(function (item) {\n              if (item.nextExecutioner == $scope.executioner) {\n                $scope.selectList = [item];\n              }\n            });\n          } else {\n            $scope.taskList = resultObj.data;\n          }\n        }\n      });\n    };\n    /**\n     * 标准的登录状态判定\n     * 登陆后执行初始化init方法\n     */\n\n\n    if (!userLoginUIService.user.isAuthenticated) {\n      $scope.$on('loginStatusChanged', function (evt, d) {\n        if (userLoginUIService.user.isAuthenticated) {\n          queryEnterprise();\n        }\n      });\n    } else {\n      queryEnterprise();\n    }\n  }]);\n  controllers.initController('recordConditionCtrl', ['$scope', '$q', 'ngDialog', '$location', '$routeParams', '$timeout', 'maintenanceTaskUIService', 'customerUIService', 'projectUIService', 'kpiDataService', 'resourceUIService', 'growl', 'userUIService', 'userLoginUIService', 'ticketCategoryService', 'userEnterpriseService', 'ticketTaskService', '$route', function ($scope, q, ngDialog, $location, $routeParams, $timeout, maintenanceTaskUIService, customerUIService, projectUIService, kpiDataService, resourceUIService, growl, userUIService, userLoginUIService, ticketCategoryService, userEnterpriseService, ticketTaskService, $route) {\n    var promises = []; //已加载列表\n\n    var defers = []; //延期列表\n\n    var conditionId = $routeParams.id;\n    $scope.templateAddress = \"\";\n    $scope.urlService = userUIService.uploadFileUrl;\n    $scope.detail = {\n      \"taskStatus\": 0\n    };\n    $scope.querySearch = {\n      \"modelId\": \"\",\n      \"type\": \"\",\n      \"deviceName\": \"\",\n      \"serverType\": \"\"\n    };\n    $scope.routePathNodes = {}; //模型树形字典\n\n    for (var i = 0; i < 4; i++) {\n      defers.push(q.defer());\n    }\n\n    ;\n    $scope.modelListSelect; //模型的\n    //查询该用户的所有模型\n\n    $scope.modelList = function () {\n      resourceUIService.getModels(function (returnObj) {\n        if (returnObj.code == 0) {\n          $scope.modelListSelect = returnObj.data;\n          resourceUIService.rootModelDic = {};\n          var tree = returnObj.data;\n\n          for (var i in tree) {\n            var obj = tree[i];\n            obj.text = obj.label;\n            if (!$scope.routePathNodes[obj.parentModelId]) $scope.routePathNodes[obj.parentModelId] = [];\n            $scope.routePathNodes[obj.parentModelId].push(obj);\n            if (!$scope.routePathNodes[obj.id]) $scope.routePathNodes[obj.id] = [];\n            var cmpObj = jQuery.extend(true, {}, obj);\n            resourceUIService.rootModelDic[cmpObj.id] = cmpObj;\n          }\n\n          var initRoutePath = function initRoutePath(node, arr) {\n            for (var i in node.nodes) {\n              if ($routeParams.modelId == node.nodes[i].id) {\n                arr.push(node);\n                break;\n              } else {\n                initRoutePath(node.nodes[i], arr);\n              }\n            }\n          };\n\n          $scope.rootModel = resourceUIService.rootModel;\n          $scope.rootModelDic = resourceUIService.rootModelDic;\n          defers[0].resolve(\"success\");\n        }\n      });\n    };\n    /**\n     * 查询设备\n     */\n\n\n    $scope.devicesList;\n    $scope.devicesListDic = {};\n\n    var queryDevices = function queryDevices() {\n      resourceUIService.getDevicesByCondition({}, function (returnObj) {\n        if (returnObj.code == 0) {\n          returnObj.data.forEach(function (item) {\n            $scope.devicesListDic[item.id] = item;\n            item.text = item.label;\n          });\n          $scope.devicesList = returnObj.data;\n          defers[2].resolve(\"success\");\n        }\n      });\n    };\n\n    $scope.saveCondition = function () {\n      maintenanceTaskUIService.saveMaintenanceRecord($scope.recordList, function (res) {\n        if (res.code == 0) {\n          growl.success(\"保存成功\", {});\n        }\n      });\n    };\n\n    var ticketTask = function ticketTask(taskId) {\n      if (taskId && taskId != undefined) {\n        ticketTaskService.getTicketTaskById(taskId, function (resultObj) {\n          if (resultObj.code == 0) {\n            $scope.detail.taskStatus = resultObj.data.taskStatus;\n            $scope.sparePartsInitList = resultObj.data.values.stockOrderItemList; // $scope.$broadcast(Event.WORKORDERRECORDINIT+\"_deviceTask\", $scope.sparePartsInitList);\n\n            $scope.$broadcast(Event.WORKORDERRECORDINIT + \"_deviceTask\", {\n              \"data\": $scope.sparePartsInitList\n            });\n          }\n        });\n      }\n    };\n    /**\n     *  查询列表\n     */\n\n\n    var queryData = function queryData(queryObj) {\n      // $scope.loaderValue = \"\";\n      maintenanceTaskUIService.getRecordByCondition(queryObj, function (resultObj) {\n        if (resultObj.code == 0) {\n          if (conditionId) {\n            $scope.recordList = resultObj.data[0];\n\n            if ($scope.recordList.templateURL) {\n              var sp = $scope.recordList.templateURL.split('/');\n              $scope.templateAddress = sp[sp.length - 1];\n            }\n\n            if ($scope.templateAddress == 'spare') {\n              ticketTask(resultObj.data[0].ticketTaskId);\n            }\n          } else {\n            $scope.recordList = resultObj.data;\n            $scope.$broadcast(\"RECORD\", {\n              data: $scope.recordList\n            });\n          }\n        }\n      });\n    };\n    /**\n     * 查询用户\n     */\n\n\n    $scope.enterpriseList;\n    $scope.enterpriseListDic = {};\n\n    var queryEnterprise = function queryEnterprise() {\n      userEnterpriseService.queryEnterpriseUser(function (returnObj) {\n        if (returnObj.code == 0) {\n          var arr = [];\n          returnObj.data.forEach(function (item) {\n            $scope.enterpriseListDic[item.userID] = item;\n            item.text = item.userName;\n\n            if (arr.status == 0) {\n              arr.push(item);\n            }\n          });\n          $scope.enterpriseList = arr;\n          defers[3].resolve(\"success\");\n        }\n      });\n    }; //获取工单流程\n\n\n    $scope.processTypeDic = {};\n\n    var getProcedure = function getProcedure() {\n      ticketCategoryService.getTicketCategorys(function (returnObj) {\n        if (returnObj.code == 0) {\n          var arr1 = [];\n\n          for (var i in returnObj.data) {\n            if (returnObj.data[i].category == 40) {\n              //维保工单\n              arr1.push(returnObj.data[i]);\n            }\n          }\n\n          arr1.forEach(function (item) {\n            $scope.processTypeDic[item.id] = item;\n            item.text = item.name;\n          });\n          $scope.processType = arr1;\n          defers[1].resolve(\"success\");\n        }\n      });\n    };\n\n    $scope.goSearch = function () {\n      var serarch = {};\n\n      if ($scope.querySearch.modelId) {\n        serarch[\"modelId\"] = $scope.querySearch.modelId;\n      }\n\n      ;\n\n      if ($scope.querySearch.type) {\n        serarch[\"type\"] = $scope.querySearch.type;\n      }\n\n      ;\n\n      if ($scope.querySearch.deviceName) {\n        serarch[\"deviceName\"] = $scope.querySearch.deviceName;\n      }\n\n      ;\n\n      if ($scope.querySearch.serviceType) {\n        serarch[\"serverType\"] = $scope.querySearch.serviceType;\n      }\n\n      queryData(serarch);\n    };\n\n    $scope.goClear = function () {\n      $scope.querySearch = {\n        \"modelId\": \"\",\n        \"type\": \"\",\n        \"deviceName\": \"\",\n        \"serviceType\": \"\"\n      };\n    };\n\n    var init = function init() {\n      $scope.modelList();\n      getProcedure();\n      queryDevices();\n      queryEnterprise();\n\n      for (var i in defers) {\n        promises.push(defers[i].promise);\n      } //所有延迟加载完成后操作\n\n\n      q.all(promises).then(function (data) {\n        if (conditionId) {\n          queryData({\n            \"id\": conditionId\n          });\n        } else {\n          queryData({});\n        }\n      });\n    };\n    /**\n     * 标准的登录状态判定\n     * 登陆后执行初始化init方法\n     */\n\n\n    if (!userLoginUIService.user.isAuthenticated) {\n      $scope.$on('loginStatusChanged', function (evt, d) {\n        if (userLoginUIService.user.isAuthenticated) {\n          init();\n        }\n      });\n    } else {\n      init();\n    }\n  }]);\n});"],"sourceRoot":"/source/"}