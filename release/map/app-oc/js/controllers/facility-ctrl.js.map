{"version":3,"sources":["app-oc/js/controllers/facility-ctrl.js"],"names":["define","controllers","BootstrapDialog","initController","$scope","q","FileUploader","$controller","$routeParams","growl","userUIService","userEnterpriseService","kpiDataService","resourceUIService","Info","viewFlexService","userDomainService","userLoginUIService","customerUIService","projectUIService","ngDialog","deviceAccessUIService","SwSocket","serviceOrigin","uploadFileUrl","fileFormat","fileMaxSize","uploadExcel","config","uploader","formData","push","resourceId","selectDevice","id","uploadAll","$on","event","args","response","code","success","onAfterAddingFile","fileItem","queue","length","queueLimit","removeFromQueue","routePathNodes","type","gatewayId","gatewayid","uuid","selLength","queryDitem","domainPath","sn","customerId","projectId","modelId","docError","name","conter","gatewayPhysical","queryAttrList","queryAttrObj","queryKeyValue","selQueryAttr","attr","seniorQuery","userGridData","list","arrData","enterpriseDomain","downClick","qualifiedName","url","window","open","facilityList","modelListSelect","access","status","allGateways","accessMode","accessGwId","accessProtocol","allDevices","accessConfig","info","get","iconList","qualityIcon","kpiIconList","kpiIcon","$watch","newValue","oldValue","protocol","UploadFile","docList","deviceDocData","i","uploadParam","formObj","deviceId","encodeURIComponent","description","$broadcast","successDoc","obj","escape","decodeURIComponent","undefined","arr","domainTreeQuery","handler","data","domainList","domainListTree","domainListDic","defers","resolve","baseConfig","extendDomain","getExtendDomainsByFilter","queryDomainTree","user","userID","modelList","reflash","getModels","returnObj","rootModelDic","tree","text","label","parentModelId","cmpObj","jQuery","extend","addNodes","parentNode","modeid","nodes","key","rootModel","saveCheck","select","projectConfig","check","devCheck","trim","warning","menuitems","physicalConfig","analysisConfigs","connectPointId","stationNo","analysisProtocol","externalDevId","byteOrder16","byteOrder32","floatbyteOrder","values","attrType","forEach","attrgroup","sourceValue","dataType","Number","saveResource","callback","isLoading","devEnabled","domains","gateInfo","search","extendDomains","getAddressPoint","addResource","managedStatus","updateDevice","attrDist","dictInit","str","str1","eval","e","doAction","isEdit","j","Event","CMDBINFOSINIT","show","title","closable","message","buttons","cssClass","action","dialogRef","deleteResource","resultObj","splice","close","location","href","goBack","queryModelChange","allAttrs","getAllAttrs","res","new_arr","items","sensitive","tmp","uid","rootModelsDic","attrs","attrChang","attrSearchCount","b","removeAttr","endTime","value","startdate","endNumberic","startNumberic","devicesChange","configId","devices","item","changeFlg","dev","getKpisByModelId","kpisfinish","sourceModelId","kpis","device","getPhysicalDeviceById","getDevices","gateway","getPhysicalDevicesByGatewayId","physical","physicalDeviceId","sourceId","optionStatus","deploy","attrTypeList","modelIdAttrs","getAttrsByModelId","resObj","defaultArr","newObj","attrTypeSort","splitStr","split","concat","sort","doubleCompare","modelType","modelTypeObj","getAllModelType","valueCode","modelKpi","getDataItemsByModelId","kpi","modelConfig","getModelConfigByModelId","taskInit","findCollectionTaskDefinitionByModelId","taskData","taskConfigs","mytask","task","taskCode","cycleUnit","taskCycle","docInit","getUploadModelFileList","docData","addDoc","docUrl","postfix","size","template","scope","controller","className","deviceDocInit","getUploadDeviceFileList","docList1","getExtendDomains","params","subDomainListTree","subDomainListDic","getAllCollectionPlugins","protocols","protocolDic","protocolVersions","getAllResolutionProtocols","getAllResolutionProtocol","resolutionProtocolDic","resolutionProtocols","connectPointsInit","reload","connectPointsDic","loadConnectionPoint","externalGwId","connectPoint","connectPoints","error","getConnectionPoint","showProtocol","deviceHandler","domain","default","infoPageManage","getFlexemCloudConfAddr","activateDevice","deactivateDevice","activeListTab","showData","sel","addDataObj","deviceMode","displayMode","storageConfigs","compress","compressTime","deadZone","deadZoneRange","interval","intervalTime","saveKpi","closeDialog","showCollection","taskObj","kpiDir","selectValueLeft","selectValueRight","dirKpiList","kpiDefinitionIds","index","saveCollection","newTask","reg","protocolObj","resolutionProtocol","regs","regSelect","registers","kpiRegisters","attributes","regsKpiList","dataByte","resolution","connLabel","resolutionProtocolName","protocolList","$","inArray","extAttributes","ioWidth","kpiId","allDataTypes","dataObj","dataTypeId","byteSize","saveProtocol","accessConfigs","protocolInfoData","showMeasurePoint","measurePointDatas","MeasurePointLocate","filter","ele","propsList","myDicts","specialtyProps","pointTypes","pointTypeDataFunc","pointType","measurePointDataFunc","measurePoint","domainFunc","pointParamItemList","elem","pointName","find","pointId","paramName","paramKey","checkoutSelectVerify","addConfiguration","protocolInfoModel","pointTypeAlias","paramValue","deleteMeasurePointLocateChange","$index","saveMeasurePoint","checked","importPhysicalConfig","click","exportPhysicalConfig","cleanDomainPath","parseInt","indicatorDatas","specialtyProp","dataItemId","indicatorFunc","indicator","specialtyPropName","instanceName","kpiName","instance","anOtherName","writeExpression","readExpression","isShowExpand","phyArr","MAX_VALUE","measurePointArr","k","measurePointData","measurePointLocateChange","newKpi","$$hashKey","searchList","points","t","expandObj","optionExpand","option","analysisChange","modelKpis","gatList","modelkpi","devkpi","oldKpi","configkpi","getWayKpiInit","deleteDeviceDoc","deviceDoc","deleteDeviceFile","getSearchResourceState","ids","selectedInstances","getRealTimeKpiData","nodeId","kpiCode","onlineStatus","severity","pipeline","opts","conf","pages","method","cacheLower","cacheUpper","cacheLastRequest","cacheLastJson","request","drawCallback","settings","ajax","requestStart","start","drawStart","requestLength","requestEnd","columns","order","column","sortType","dir","clearCache","JSON","stringify","isFunction","d","isPlainObject","pageRequest","statCount","draw","getDevicesByPage","queryDitemList","total","json","recordsTotal","recordsFiltered","socketList","stateCallback","evendata","facilityResourceState","facility","fnData","queryItem","getDevicesByConditionWithPage","param","ciid","toString","operation","register","send","goSearch","chooseType","autoActive","cId","cList","customersList","pId","pList","projectsList","selectUnComfirmedDevice","objQuery","o","startTime","getDevicesByCondition","from","goClear","addDirectives","domainSelect","physicalDeviceDomain","unshift","connectChange","temp","protocolName","connectGateways","kpiArr","gatewayDate","base","deviceAddress","registerType","startPoint","byteOrder","gatewayHandler","phyDev","accessList","pointKpiInit","pointHandler","findResourceAccesses","pointData","gatList2","kpisList","AdminLTE","boxWidget","collapse","accessModeChange","closeTable","listSaveValue","expression","updateData","deviceInfo","saveTable","listAry","table","ary","savePhysicalDevice","resData","gatewayList","addResourceAccesses","addData","currentTab","isAttr","attrClick","tab","customersDic","queryCustomer","findCustomersByCondition","customerDic","customerName","modelIdChange","projectsDic","queryProject","findProjectsByCondition","projectName","getAllgateWays","getAllGateways","promises","defer","initList","Math","promise","all","then","menuitemsWatch","n","getRootModel","look","getAllDataItems","inputObj","callbackFun","standardAddressdetail","standardAddress","latitude","longitude","join","address","lat","lng","isAuthenticated","evt"],"mappings":"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","file":"app-oc/js/controllers/facility-ctrl.js","sourcesContent":["define(['controllers/controllers', 'bootstrap-dialog'], function (controllers, BootstrapDialog) {\n  'use strict';\n\n  controllers.initController('FacilityCtrl', ['$scope', '$q', 'FileUploader', '$controller', '$routeParams', 'growl', 'userUIService', 'userEnterpriseService', 'kpiDataService', 'resourceUIService', 'Info', 'viewFlexService', 'userDomainService', 'userLoginUIService', 'customerUIService', 'projectUIService', 'ngDialog', 'deviceAccessUIService', 'SwSocket', function ($scope, q, FileUploader, $controller, $routeParams, growl, userUIService, userEnterpriseService, kpiDataService, resourceUIService, Info, viewFlexService, userDomainService, userLoginUIService, customerUIService, projectUIService, ngDialog, deviceAccessUIService, SwSocket) {\n    /**上传图片开始*/\n    $scope.serviceOrigin = userUIService.uploadFileUrl + '/api/rest/import/resourceUIService/importPhysicalConfig';\n    $scope.fileFormat = 'xls、xlsx';\n    $scope.fileMaxSize = 10;\n    $controller('AppUploadCtrl', {\n      $scope: $scope,\n      growl: growl,\n      FileUploader: FileUploader\n    });\n\n    $scope.uploadExcel = function (config) {\n      $scope.uploader.formData.push({\n        resourceId: $scope.selectDevice.id,\n        config: 'physicalConfig'\n      });\n      $scope.uploader.uploadAll();\n    };\n\n    $scope.$on(\"uploadTemplate\", function (event, args) {\n      if (args.response.code == 0) {\n        growl.success(\"解析协议导入成功\", {});\n      }\n    });\n\n    $scope.uploader.onAfterAddingFile = function (fileItem) {\n      if ($scope.uploader.queue.length > $scope.queueLimit) {\n        $scope.uploader.removeFromQueue(0);\n      }\n\n      $scope.uploadExcel();\n    };\n    /**上传图片结束*/\n\n\n    $scope.routePathNodes = {}; //模型树形字典\n\n    var type = $routeParams.type;\n    var gatewayId = $routeParams.gatewayid;\n    $scope.selLength = 10;\n    var uuid; //查询设备的条件\n\n    $scope.queryDitem = {\n      domainPath: \"\",\n      sn: \"\",\n      customerId: \"\",\n      projectId: \"\",\n      modelId: \"\"\n    };\n    $scope.docError = {\n      \"name\": \"\",\n      \"conter\": \"\"\n    };\n    $scope.selectDevice; //被选中的设备\n\n    $scope.gatewayPhysical = {}; //物理网关字典\n\n    $scope.queryAttrList = []; //属性查询\n\n    $scope.queryAttrObj = {}; //属性查询obj\n\n    $scope.queryKeyValue = []; //属性key value\n\n    $scope.selQueryAttr = {\n      \"attr\": \"\"\n    };\n    $scope.seniorQuery = false;\n    $scope.userGridData = {\n      //不知道是否可删，在facility-dom中使用\n      \"list\": \"\",\n      \"arrData\": {},\n      \"enterpriseDomain\": {}\n    };\n\n    $scope.downClick = function (qualifiedName) {\n      var url = userUIService.uploadFileUrl + qualifiedName;\n      window.open(url);\n    };\n    /**\n     * A02_S02是设备查看、A03_S02是测点查看、A04_S02是告警查看 所以下面的可能是没有用的 zhangafa 2017-6-1\n     $scope.menu = $scope.menuitems['A02_S02']; //控制列表上的客户一栏显示还是不显示\n     $scope.menuContract = $scope.menuitems['A03_S02']; //相关合同条款\n     $scope.menuProject = $scope.menuitems['A04_S02']; //相关项目\n     */\n\n\n    $scope.facilityList = {}; //设备的列表\n\n    $scope.modelListSelect; //模型的列表\n    //接入配置操作\n\n    $scope.access = {\n      \"status\": \"0\",\n      \"allGateways\": \"\",\n      \"accessMode\": \"\",\n      \"accessGwId\": \"\",\n      \"accessProtocol\": \"\",\n      \"allDevices\": \"\",\n      \"accessConfig\": \"\"\n    }; // 初始化图片\n\n    var info = Info.get(\"../localdb/icon.json\", function (info) {\n      $scope.iconList = info.qualityIcon;\n      $scope.kpiIconList = info.kpiIcon;\n    }); // 监听接入网关的变化\n\n    $scope.$watch(\"access.accessGwId\", function (newValue, oldValue) {\n      if (newValue != \"\") {\n        $scope.access.accessProtocol = newValue.protocol;\n      } else {\n        $scope.access.accessProtocol = \"\";\n      }\n    });\n\n    $scope.UploadFile = function () {\n      var docList = $scope.selectDevice.deviceDocData;\n\n      for (var i in docList) {\n        if (docList[i].name == $scope.uploadParam.name) {\n          $scope.docError.name = 'name';\n          $scope.docError.conter = \"文档名称已存在\";\n          return;\n        }\n      }\n\n      $scope.formObj = {\n        \"deviceId\": $scope.selectDevice.id,\n        \"name\": encodeURIComponent($scope.uploadParam.name),\n        \"description\": encodeURIComponent($scope.uploadParam.description)\n      };\n      $scope.$broadcast(\"UploadFile1\");\n    };\n\n    $scope.successDoc = function (obj) {\n      var name = escape(decodeURIComponent(obj.name));\n      obj.name = name;\n      obj.description = escape(decodeURIComponent(obj.description));\n\n      if ($scope.selectDevice.deviceDocData && $scope.selectDevice.deviceDocData != undefined) {\n        $scope.selectDevice.deviceDocData.push(obj);\n      } else {\n        var arr = [];\n        arr.push(obj);\n        $scope.selectDevice.deviceDocData = arr;\n      }\n    }; //根据用户Id查用户域\n\n\n    var domainTreeQuery = function domainTreeQuery() {\n      var handler = function handler(data) {\n        if (data.code == 0) {\n          var domainList = data.data;\n          $scope.domainListTree = domainList;\n          $scope.domainListDic = data.domainListDic;\n          defers[1].resolve(\"success\");\n        }\n\n        ;\n      };\n\n      if ($scope.baseConfig && $scope.baseConfig.extendDomain) {\n        resourceUIService.getExtendDomainsByFilter({}, handler);\n      } else {\n        userDomainService.queryDomainTree(userLoginUIService.user.userID, handler);\n      }\n    }; //查询该用户的所有模型\n\n\n    $scope.modelList = function (reflash) {\n      resourceUIService.getModels(function (returnObj) {\n        if (returnObj.code == 0) {\n          $scope.modelListSelect = returnObj.data;\n          resourceUIService.rootModelDic = {};\n          var tree = returnObj.data;\n\n          for (var i in tree) {\n            var obj = tree[i];\n            obj.text = obj.label;\n            if (!$scope.routePathNodes[obj.parentModelId]) $scope.routePathNodes[obj.parentModelId] = [];\n            $scope.routePathNodes[obj.parentModelId].push(obj);\n            if (!$scope.routePathNodes[obj.id]) $scope.routePathNodes[obj.id] = [];\n            var cmpObj = jQuery.extend(true, {}, obj);\n            resourceUIService.rootModelDic[cmpObj.id] = cmpObj;\n          }\n\n          var addNodes = function addNodes(parentNode) {\n            for (var modeid in $scope.routePathNodes) {\n              if (modeid == parentNode.id) {\n                parentNode.nodes = $scope.routePathNodes[modeid];\n\n                for (var i in parentNode.nodes) {\n                  addNodes(parentNode.nodes[i]);\n                }\n\n                if (parentNode.nodes.length == 0) {\n                  parentNode.nodes = null;\n                }\n              }\n            }\n          };\n\n          var initRoutePath = function initRoutePath(node, arr) {\n            for (var i in node.nodes) {\n              if ($routeParams.modelId == node.nodes[i].id) {\n                arr.push(node);\n                break;\n              } else {\n                initRoutePath(node.nodes[i], arr);\n              }\n            }\n          };\n\n          addNodes(resourceUIService.rootModel);\n\n          for (var key in $scope.routePathNodes) {\n            if (key != resourceUIService.rootModel.id && !resourceUIService.rootModelDic[key]) {\n              for (var i in $scope.routePathNodes[key]) {\n                addNodes($scope.routePathNodes[key][i]);\n                if (!resourceUIService.rootModel.nodes) resourceUIService.rootModel.nodes = [];\n                resourceUIService.rootModel.nodes.push($scope.routePathNodes[key][i]);\n              }\n            }\n          }\n\n          resourceUIService.rootModelDic[resourceUIService.rootModel.id] = resourceUIService.rootModel;\n          $scope.rootModel = resourceUIService.rootModel;\n          $scope.rootModelDic = resourceUIService.rootModelDic;\n          if (reflash) growl.success(\"操作成功！\");else defers[2].resolve(\"success\");\n        }\n      });\n    };\n\n    var saveCheck = function saveCheck(select) {\n      if ($scope.baseConfig && $scope.baseConfig.projectConfig && ($scope.baseConfig.projectConfig.check || $scope.baseConfig.projectConfig.devCheck) && (!jQuery.trim(select.projectId) || select.projectId == 0)) {\n        growl.warning($scope.menuitems['S13'] && $scope.menuitems['S13'].label ? $scope.menuitems['S13'].label : '项目' + \"名称不能为空\", {});\n        return false;\n      }\n\n      if (!jQuery.trim(select.gatewayId)) {\n        growl.warning(\"所属网关不能为空\", {});\n        return false;\n      }\n\n      if (!jQuery.trim(select.modelId)) {\n        growl.warning(\"设备模板不能为空\", {});\n        return false;\n      }\n\n      if (!jQuery.trim(select.sn)) {\n        growl.warning(\"序列号不能为空\", {});\n        return false;\n      }\n\n      if (!jQuery.trim(select.label)) {\n        growl.warning(\"设备名称不能为空\", {});\n        return false;\n      }\n\n      var protocol = $scope.gatewayPhysical[select.gatewayId].protocol;\n\n      if ($scope.selectDevice.accessMode == 'single' && protocol == 'flexem') {\n        if (!jQuery.trim(select.physicalConfig.analysisConfigs.connectPointId)) {\n          growl.warning(\"网关连接点不能为空\", {});\n          return false;\n        }\n\n        if (!jQuery.trim(select.physicalConfig.stationNo)) {\n          growl.warning(\"站号不能为空\", {});\n          return false;\n        }\n      } else if (protocol == \"modbus\") {\n        if (!jQuery.trim(select.physicalConfig.analysisProtocol)) {\n          growl.warning(\"解析协议不能为空\", {});\n          return false;\n        }\n\n        if (!jQuery.trim(select.externalDevId)) {\n          growl.warning(\"设备地址不能为空\", {});\n          return false;\n        }\n\n        if (!jQuery.trim(select.physicalConfig.stationNo)) {\n          growl.warning(\"站号不能为空\", {});\n          return false;\n        }\n\n        if (!jQuery.trim(select.physicalConfig.analysisConfigs.byteOrder16)) {\n          growl.warning(\"16字节序不能为空\", {});\n          return false;\n        }\n\n        if (!jQuery.trim(select.physicalConfig.analysisConfigs.byteOrder32)) {\n          growl.warning(\"32字节序不能为空\", {});\n          return false;\n        }\n\n        if (!jQuery.trim(select.physicalConfig.analysisConfigs.floatbyteOrder)) {\n          growl.warning(\"浮点字节序不能为空\", {});\n          return false;\n        }\n      } else if (protocol == \"baogang\") {\n        if (!jQuery.trim(select.physicalConfig.analysisProtocol)) {\n          growl.warning(\"解析协议不能为空\", {});\n          return false;\n        }\n      } else if ($scope.selectDevice.accessMode != 'multiple') {\n        if (!jQuery.trim(select.externalDevId)) {\n          growl.warning(\"设备地址不能为空\", {});\n          return false;\n        }\n      }\n      /* 把模版默认值放到设备属性上 */\n\n\n      if (!select.values) select.values = {};\n      $scope.attrType.forEach(function (attrgroup) {\n        attrgroup.arr.forEach(function (attr) {\n          if (!select.values[attr.name] && attr.sourceValue) {\n            if (attr.dataType == \"numberic\") {\n              select.values[attr.name] = Number(attr.sourceValue);\n            } else if (attr.dataType == \"string\") {\n              select.values[attr.name] = attr.sourceValue;\n            }\n          }\n        });\n      });\n      return true;\n    };\n\n    $scope.saveResource = function (callback) {\n      if (!saveCheck($scope.selectDevice)) return;\n      $scope.selectDevice.isLoading = true;\n\n      if ($scope.selectDevice.accessMode == 'multiple') {\n        $scope.selectDevice.physicalConfig.analysisConfigs.connectPointId = '';\n        $scope.selectDevice.physicalConfig.stationNo = 0;\n        $scope.selectDevice.physicalConfig.analysisProtocol = '';\n        $scope.selectDevice.externalDevId = 0;\n      }\n\n      if ($scope.baseConfig && $scope.baseConfig.projectConfig && $scope.baseConfig.projectConfig.devEnabled) {\n        $scope.selectDevice.domains = $scope.selectDevice.gateInfo.domains.search($scope.selectDevice.projectId) > -1 ? $scope.selectDevice.gateInfo.domains : $scope.selectDevice.gateInfo.domains + $scope.selectDevice.projectId + \"/\";\n      }\n\n      $scope.selectDevice.domains = $scope.selectDevice.extendDomains ? $scope.selectDevice.extendDomains : $scope.selectDevice.domains;\n      getAddressPoint($scope.selectDevice, function () {\n        if ($scope.selectDevice.id == 0) {\n          resourceUIService.addResource($scope.selectDevice, function (returnObj) {\n            $scope.selectDevice.isLoading = false;\n\n            if (returnObj.code == 0) {\n              $scope.selectDevice.id = returnObj.data.id;\n              $scope.selectDevice.domains = returnObj.data.domains;\n              $scope.selectDevice.managedStatus = returnObj.data.managedStatus;\n              $scope.selectDevice.values = returnObj.data.values;\n\n              if (callback) {\n                callback();\n              } else {\n                growl.success(\"保存成功\", {});\n              }\n            }\n          });\n        } else {\n          resourceUIService.updateDevice($scope.selectDevice, function (returnObj) {\n            $scope.selectDevice.isLoading = false;\n\n            if (returnObj.code == 0) {\n              $scope.selectDevice.managedStatus = returnObj.data.managedStatus;\n              $scope.selectDevice.values = returnObj.data.values;\n\n              if (callback) {\n                callback();\n              } else {\n                growl.success(\"保存成功\", {});\n              }\n            }\n          });\n        }\n      });\n    };\n\n    $scope.attrDist = {};\n\n    $scope.dictInit = function (attr) {\n      if ($scope.attrDist[attr.name]) {\n        return;\n      } else {\n        try {\n          var str = attr.sourceValue;\n          var str1 = eval(\"(\" + str + \")\");\n          $scope.attrDist[attr.name] = str1;\n        } catch (e) {\n          $scope.attrDist[attr.name] = str1;\n        }\n      }\n    };\n    /**\n     * datatables内部操作处理\n     * @param {Object} type\n     * @param {Object} select\n     */\n\n\n    $scope.doAction = function (type, select, callback) {\n      if (type == \"save\") {\n        select.isEdit = 0;\n\n        if (select.id == 0) {\n          resourceUIService.addResource(select, function (returnObj) {\n            if (returnObj.code == 0) {\n              growl.success(\"保存成功\", {});\n\n              for (var j in $scope.facilityList.data) {\n                if ($scope.facilityList.data[j].id == 0) {\n                  $scope.facilityList.data[j] = returnObj.data;\n                }\n              }\n\n              $scope.$broadcast(Event.CMDBINFOSINIT + \"_facility\", $scope.facilityList);\n            }\n          });\n        } else if (select.id > 0) {\n          resourceUIService.updateDevice(select, function (returnObj) {\n            if (returnObj.code == 0) {\n              growl.success(\"保存成功\", {});\n\n              for (var j in $scope.facilityList.data) {\n                if ($scope.facilityList.data[j].id == returnObj.data.id) {\n                  $scope.facilityList.data[j] = returnObj.data;\n                }\n              }\n\n              $scope.$broadcast(Event.CMDBINFOSINIT + \"_facility\", $scope.facilityList);\n            }\n          });\n        }\n      } else if (type == \"delete\") {\n        BootstrapDialog.show({\n          title: '提示',\n          closable: false,\n          //size:BootstrapDialog.SIZE_WIDE,\n          message: '是否要删除设备:' + escape(select.label) + '',\n          buttons: [{\n            label: '确定',\n            cssClass: 'btn-success',\n            action: function action(dialogRef) {\n              resourceUIService.deleteResource(select.id, function (resultObj) {\n                if (resultObj.code == 0) {\n                  growl.success(\"删除设备成功\", {});\n\n                  for (var j in $scope.facilityList.data) {\n                    if ($scope.facilityList.data[j].id == select.id) {\n                      $scope.facilityList.data.splice(j, 1);\n                    }\n                  }\n\n                  $scope.$broadcast(Event.CMDBINFOSINIT + \"_facility\", $scope.facilityList);\n                }\n              });\n              dialogRef.close();\n            }\n          }, {\n            label: '取消',\n            action: function action(dialogRef) {\n              dialogRef.close();\n            }\n          }]\n        });\n      } else if (type == \"cancelFacility\") {\n        for (var i in $scope.facilityList.data) {\n          if ($scope.facilityList.data[i].isEdit == 3) {\n            $scope.facilityList.data.splice(i, 1);\n          } else if ($scope.facilityList.data[i].isEdit == 2 && $scope.facilityList.data[i].id == select.id) {\n            select.isEdit = 0;\n            $scope.facilityList.data[i] = select;\n          }\n        }\n\n        $scope.$broadcast(Event.CMDBINFOSINIT + \"_facility\", $scope.facilityList);\n      } else if (type == \"export\") {\n        location.href = '' + userUIService.uploadFileUrl + '/api/rest/download/resourceUIService/exportKpiDataTemplate/data.txt/' + select.id + '/';\n      }\n    };\n\n    $scope.goBack = function () {\n      if ($scope.seniorQuery == true) {\n        $scope.seniorQuery = false;\n        $scope.queryKeyValue = [];\n        $scope.queryModelChange();\n      } else {\n        $scope.seniorQuery = true;\n      }\n    };\n    /**\n     * 获取所有属性\n     */\n\n\n    var allAttrs = function allAttrs() {\n      resourceUIService.getAllAttrs(function (res) {\n        if (res.code == 0) {\n          var arr = res.data;\n          var new_arr = [];\n\n          for (var i = 0; i < arr.length; i++) {\n            var items = arr[i];\n            if (items.values.sensitive == '1' && !$scope.menuitems['A08_S02']) continue; //敏感且没有权限则退出\n\n            var tmp = -1;\n\n            if (items.label) {\n              for (var j in new_arr) {\n                if (items.label == new_arr[j].label) {\n                  tmp = j;\n                }\n              }\n\n              if (tmp == -1 && $scope.queryAttrObj[items.uid] == undefined) {\n                items[\"value\"] = '';\n                items[\"endTime\"] = '';\n                items[\"startdate\"] = '';\n                items[\"endNumberic\"] = '';\n                items[\"startNumberic\"] = '';\n                new_arr.push(items);\n                $scope.queryAttrObj[items.uid] = items;\n              }\n            }\n          }\n\n          $scope.queryAttrList = new_arr;\n        }\n      });\n    };\n    /**\n     * 模板变化时，高级查询的属性变化为该模型的。\n     * 数据来源于初始化时的模型属性取得\n     * 如果模板ID不存在，则恢复为默认的全量属性\n     * create by afa\n     */\n\n\n    $scope.queryModelChange = function () {\n      if (resourceUIService.rootModelsDic[$scope.queryDitem.modelId]) {\n        var queryAttrList = [];\n        resourceUIService.rootModelsDic[$scope.queryDitem.modelId].attrs.forEach(function (attr) {\n          if (attr.values.sensitive != '1' || $scope.menuitems['A08_S02']) {\n            queryAttrList.push(jQuery.extend(false, {}, attr));\n          }\n        });\n        $scope.queryAttrList = queryAttrList;\n      } else {\n        var attrs = [];\n\n        for (var key in $scope.queryAttrObj) {\n          attrs.push($scope.queryAttrObj[key]);\n        }\n\n        $scope.queryAttrList = attrs;\n      }\n\n      $scope.queryKeyValue = [];\n    };\n    /**\n     * 属性下拉选择\n     */\n\n\n    $scope.attrChang = function () {\n      var attrSearchCount = $scope.baseConfig.attrSearchCount ? $scope.baseConfig.attrSearchCount : 6;\n\n      if ($scope.queryKeyValue.length < attrSearchCount) {\n        for (var b in $scope.queryAttrList) {\n          if ($scope.queryAttrList[b].uid == $scope.selQueryAttr.attr) {\n            $scope.queryKeyValue.push($scope.queryAttrList[b]);\n            $scope.queryAttrList.splice(b, 1);\n            break;\n          }\n        }\n      } else if ($scope.queryKeyValue.length >= attrSearchCount) {\n        growl.warning(\"最多只能选择\" + attrSearchCount + \"个属性\", {});\n        $scope.selQueryAttr.attr = \"\";\n      }\n    };\n\n    $scope.removeAttr = function (id) {\n      for (var b in $scope.queryKeyValue) {\n        if ($scope.queryKeyValue[b].id == id) {\n          $scope.queryAttrList.push($scope.queryKeyValue[b]);\n          $scope.queryKeyValue[b].endTime = '';\n          $scope.queryKeyValue[b].value = '';\n          $scope.queryKeyValue[b].startdate = '';\n          $scope.queryKeyValue[b].endNumberic = '';\n          $scope.queryKeyValue[b].startNumberic = '';\n          $scope.queryKeyValue.splice(b, 1);\n          break;\n        }\n      }\n    };\n\n    $scope.devicesChange = function (configId, devices, item, changeFlg) {\n      var dev;\n\n      var getKpisByModelId = function getKpisByModelId() {\n        if (!$scope.rootModelDic[dev.modelId].kpisfinish) {\n          resourceUIService.getKpisByModelId(dev.modelId, function (res) {\n            if (res.code == 0) {\n              $scope.rootModelDic[dev.modelId].kpisfinish = true;\n              $scope.rootModelDic[dev.modelId].kpis = res.data;\n              item.sourceModelId = dev.modelId;\n            }\n          });\n        } else {\n          item.sourceModelId = dev.modelId;\n        }\n      };\n\n      if (configId && devices) {\n        devices.forEach(function (device) {\n          if (configId == device.id) {\n            dev = device;\n            return false;\n          }\n        });\n      }\n\n      if (dev) {\n        getKpisByModelId();\n      } else {\n        if (!configId) return;\n        resourceUIService.getPhysicalDeviceById(configId, function (returnObj) {\n          if (returnObj.code == 0) {\n            dev = returnObj.data;\n            getKpisByModelId();\n          }\n        });\n      }\n    };\n\n    var getDevices = function getDevices(gateway) {\n      resourceUIService.getPhysicalDevicesByGatewayId(gateway.id, function (returnObj) {\n        if (returnObj.code == 0) {\n          returnObj.data.forEach(function (item) {\n            item.text = item.label;\n          });\n          gateway.devices = returnObj.data;\n        }\n\n        ;\n      });\n    };\n\n    $scope.physical = function (gatewayId, item, changeFlg) {\n      // 网关数据没有加载成功时处理\n      if (!$scope.gatewayPhysical[gatewayId]) {\n        if (gatewayId) {\n          resourceUIService.getPhysicalDevicesByGatewayId(gatewayId, function (res) {\n            if (res.code == 0) {\n              $scope.gatewayPhysical[gatewayId] = res.data;\n              getDevices($scope.gatewayPhysical[gatewayId]);\n            }\n          });\n        }\n      } else if (!$scope.gatewayPhysical[gatewayId].devices) {\n        getDevices($scope.gatewayPhysical[gatewayId]);\n      }\n\n      if (changeFlg) {\n        item.physicalDeviceId = \"\";\n        item.sourceId = \"\";\n      }\n    };\n\n    $scope.optionStatus = {\n      \"search\": \"\",\n      \"deploy\": \"\",\n      \"selectDevice\": \"\"\n    };\n    $scope.attrTypeList = [];\n\n    $scope.modelIdAttrs = function () {\n      if (!$scope.selectDevice.modelId) return;\n      resourceUIService.getAttrsByModelId($scope.selectDevice.modelId, function (resObj) {\n        if (resObj.code == 0) {\n          $scope.attrTypeList = resObj.data;\n          var attrTypeList = resObj.data;\n          var arr = [];\n          var defaultArr = [];\n          if (!$scope.selectDevice.values) $scope.selectDevice.values = {}; //如果没有values属性，那么就初始化\n\n          for (var i in attrTypeList) {\n            var obj = attrTypeList[i];\n            var attr = {\n              \"name\": \"\",\n              \"id\": \"\",\n              \"arr\": []\n            };\n            var newObj = -1;\n\n            if (obj.attrType == \"default\" && defaultArr.length > 0) {\n              newObj = i;\n              defaultArr[0].arr.push(obj);\n            } else {\n              for (var j in arr) {\n                if (arr[j].name == obj.attrType) {\n                  newObj = j;\n                  arr[j].arr.push(obj);\n                  break;\n                }\n              }\n            }\n\n            if (newObj == -1) {\n              attr.name = obj.attrType;\n              attr.id = obj.id;\n              attr.arr.push(obj);\n\n              if (obj.attrType == \"default\") {\n                attr.attrTypeSort = 0;\n                defaultArr.push(attr);\n              } else {\n                attr.attrTypeSort = obj.attrTypeSort;\n                arr.push(attr);\n              }\n            } //有设备有设置数据时或者没有模板默认值时，继续循环\n\n\n            if ($scope.selectDevice.values[attrTypeList[i].name] || !attrTypeList[i].sourceValue) continue; //标准地址有默认数据\n\n            if (attrTypeList[i].dataType == 'standardAddress') {\n              var splitStr = attrTypeList[i].sourceValue.split(',');\n              $scope.selectDevice.values[attrTypeList[i].name] = attrTypeList[i].sourceValue;\n\n              if (splitStr[0] && splitStr[0] != undefined) {\n                $scope.selectDevice.values[attrTypeList[i].name + 'province'] = splitStr[0];\n              }\n\n              if (splitStr[1] && splitStr[1] != undefined) {\n                $scope.selectDevice.values[attrTypeList[i].name + 'city'] = splitStr[0] + \",\" + splitStr[1];\n              }\n\n              if (splitStr[2] && splitStr[2] != undefined) {\n                $scope.selectDevice.values[attrTypeList[i].name + 'district'] = splitStr[0] + \",\" + splitStr[1] + \",\" + splitStr[2];\n              }\n            } else if (attrTypeList[i].dataType != 'dict') {\n              //不是自动类型的时候\n              $scope.selectDevice.values[attrTypeList[i].name] = attrTypeList[i].sourceValue;\n            }\n          }\n\n          $scope.selectDevice.attrType = defaultArr.concat(arr);\n          $scope.selectDevice.attrType.sort(doubleCompare([\"attrTypeSort\", \"\"], \"\"));\n          $scope.attrType = $scope.selectDevice.attrType;\n        }\n      });\n    };\n\n    $scope.modelType = [];\n    $scope.modelTypeObj = {};\n    /**\n     * 获取设备种类\n     */\n\n    $scope.getAllModelType = function () {\n      resourceUIService.getAllModelType(function (res) {\n        if (res.code == 0) {\n          $scope.modelType = res.data;\n\n          for (var i in res.data) {\n            $scope.modelTypeObj[\"\" + res.data[i].valueCode + \"\"] = res.data[i];\n          }\n        }\n      });\n    };\n    /**\n     * 模型上的数据项\n     */\n\n\n    var modelKpi = function modelKpi() {\n      if (!$scope.selectDevice.modelId) return;\n      resourceUIService.getDataItemsByModelId($scope.selectDevice.modelId, function (returnObj) {\n        if (returnObj.code == 0) {\n          $scope.selectDevice.kpi = returnObj.data;\n        }\n      });\n    };\n    /**\n     * 模型上的协议\n     */\n\n\n    var modelConfig = function modelConfig() {\n      if (!$scope.selectDevice.modelId) return;\n      resourceUIService.getModelConfigByModelId($scope.selectDevice.modelId, function (returnObj) {\n        if (returnObj.code == 0) {\n          $scope.selectDevice.config = returnObj.data;\n        }\n      });\n    };\n    /**\n     * 获得模型下的任务\n     * @param {Object} model\n     */\n\n\n    var taskInit = function taskInit() {\n      if (!$scope.selectDevice.modelId) return;\n      resourceUIService.findCollectionTaskDefinitionByModelId($scope.selectDevice.modelId, function (returnObj) {\n        if (returnObj.code == 0) {\n          $scope.selectDevice.taskData = returnObj.data;\n\n          if ($scope.selectDevice.physicalConfig.taskConfigs) {\n            $scope.selectDevice.physicalConfig.taskConfigs.forEach(function (mytask) {\n              $scope.selectDevice.taskData.forEach(function (task) {\n                if (task.taskCode == mytask.taskCode) {\n                  task.cycleUnit = mytask.cycleUnit;\n                  task.taskCycle = mytask.taskCycle;\n                }\n              });\n            });\n          }\n        }\n      });\n    };\n    /**\n     * 获得模型下的文档\n     * @param {Object} model\n     */\n\n\n    var docInit = function docInit() {\n      if (!$scope.selectDevice.modelId) return;\n      resourceUIService.getUploadModelFileList($scope.selectDevice.modelId, function (returnObj) {\n        if (returnObj.code == 0) {\n          var docList = [];\n\n          if (returnObj.data.length > 0) {\n            for (var i in returnObj.data) {\n              var name = escape(decodeURIComponent(returnObj.data[i].name));\n              var description = escape(decodeURIComponent(returnObj.data[i].description));\n              returnObj.data[i].name = name;\n              returnObj.data[i].description = description;\n              docList.push(returnObj.data[i]);\n            }\n          }\n\n          $scope.selectDevice.docData = docList;\n        }\n      });\n    };\n    /**\n     * 创建文档\n     */\n\n\n    $scope.addDoc = function () {\n      $scope.docUrl = 'api/rest/upload/resourceUIService/uploadDeviceFile';\n      $scope.uploadParam = {\n        \"modelId\": \"\",\n        \"name\": \"\",\n        \"type\": \"\",\n        \"url\": \"\",\n        \"description\": \"\",\n        \"postfix\": \"\",\n        \"size\": \"\"\n      };\n      ngDialog.open({\n        template: '../partials/dialogue/add_doc.html',\n        scope: $scope,\n        controller: \"addDocCtrl\",\n        className: 'ngdialog-theme-plain'\n      });\n    };\n    /**\n     * 获得设备下的文档\n     * @param {Object} deviceId\n     */\n\n\n    var deviceDocInit = function deviceDocInit() {\n      if (!$scope.selectDevice.id) return;\n      resourceUIService.getUploadDeviceFileList($scope.selectDevice.id, function (returnObj) {\n        if (returnObj.code == 0) {\n          var docList1 = [];\n\n          if (returnObj.data.length > 0) {\n            for (var i in returnObj.data) {\n              var name = escape(decodeURIComponent(returnObj.data[i].name));\n              var description = escape(decodeURIComponent(returnObj.data[i].description));\n              returnObj.data[i].name = name;\n              returnObj.data[i].description = description;\n              docList1.push(returnObj.data[i]);\n            }\n          }\n\n          $scope.selectDevice.deviceDocData = docList1;\n        }\n      });\n    };\n    /**\n     * 获得客户的扩展域\n     */\n\n\n    var getExtendDomains = function getExtendDomains(domains) {\n      //全局配置中有扩展域则加载\n      if ($scope.baseConfig && $scope.baseConfig.extendDomain && ($scope.baseConfig.extendDomain == true || $scope.baseConfig.extendDomain == \"true\")) {\n        var params = {\n          domains: domains\n        };\n        resourceUIService.getExtendDomainsByFilter(params, function (returnObj) {\n          if (returnObj.code != 0) return;\n          $scope.subDomainListTree = returnObj.domainListTree;\n          $scope.subDomainListDic = returnObj.domainListDic;\n        });\n      }\n    };\n    /**\n     * 获得所有的协议\n     */\n\n\n    var getAllCollectionPlugins = function getAllCollectionPlugins() {\n      $scope.protocols = [];\n      resourceUIService.getAllCollectionPlugins(function (returnObj) {\n        var protocolDic = {};\n\n        if (returnObj.code == 0) {\n          returnObj.data.forEach(function (item) {\n            if (!protocolDic[item.protocol]) {\n              protocolDic[item.protocol] = item;\n              $scope.protocols.push(item);\n            }\n          });\n          $scope.protocolVersions = returnObj.data;\n        }\n      });\n    };\n    /**\n     * 查询解析协议\n     */\n\n\n    var getAllResolutionProtocols = function getAllResolutionProtocols() {\n      resourceUIService.getAllResolutionProtocol(\"\", function (resultObj) {\n        if (resultObj.code == 0) {\n          $scope.resolutionProtocolDic = {};\n          resultObj.data.forEach(function (item) {\n            $scope.resolutionProtocolDic[item.label] = item;\n          });\n          $scope.resolutionProtocols = resultObj.data;\n        }\n      });\n    };\n\n    $scope.connectPointsInit = function (reload) {\n      var gateInfo = $scope.gatewayPhysical[$scope.selectDevice.gatewayId];\n\n      if (gateInfo.protocol == \"flexem\") {\n        $scope.connectPointsDic = {};\n\n        if (reload) {\n          growl.info(\"网关连接点刷新请求中，请稍后...\", {});\n          $scope.selectDevice.isLoading = true;\n          resourceUIService.loadConnectionPoint(gateInfo.externalGwId, function (returnObj) {\n            $scope.selectDevice.isLoading = false;\n\n            if (returnObj.code == 0) {\n              returnObj.data.forEach(function (connectPoint) {\n                $scope.connectPointsDic[connectPoint.id] = connectPoint;\n              });\n              $scope.connectPoints = returnObj.data;\n              growl.success(\"刷新成功\", {});\n            } else {\n              growl.error(\"刷新失败，请再试！\", {});\n            }\n          });\n        } else {\n          resourceUIService.getConnectionPoint(gateInfo.externalGwId, function (returnObj) {\n            if (returnObj.code == 0) {\n              returnObj.data.forEach(function (connectPoint) {\n                $scope.connectPointsDic[connectPoint.id] = connectPoint;\n              });\n              $scope.connectPoints = returnObj.data;\n            }\n          });\n        }\n      }\n    };\n\n    $scope.accessMode = function () {\n      if ($scope.selectDevice.accessMode == 'multiple') {\n        $scope.showProtocol();\n      }\n    };\n\n    var deviceHandler = function deviceHandler(device, gatewayId) {\n      var gateInfo = $scope.gatewayPhysical[gatewayId];\n\n      if (gateInfo) {\n        device.gatewayId = gateInfo.id;\n        device.projectId = device.projectId ? device.projectId : gateInfo.projectId;\n        device.domainPath = gateInfo.domain;\n        device.customerId = gateInfo.customerId;\n        device.gateInfo = gateInfo;\n        device.physicalConfig.accessProtocol = gateInfo.protocol;\n        device.physicalConfig.analysisProtocol = device.physicalConfig.analysisProtocol ? device.physicalConfig.analysisProtocol : null;\n        device[\"accessMode\"] = \"single\";\n        $scope.selectDevice = device;\n        $scope.selectDevice.attrType = $scope.selectDevice.attrType ? $scope.selectDevice.attrType : {\n          \"default\": []\n        };\n\n        if (device.id > 0 && gateInfo.protocol == 'flexem' && (device.physicalConfig.analysisConfigs.connectPointId == undefined || device.physicalConfig.analysisConfigs.connectPointId == '')) {\n          device[\"accessMode\"] = \"multiple\";\n        }\n\n        $scope.connectPointsInit();\n        $scope.modelIdAttrs();\n        modelKpi();\n        modelConfig();\n        taskInit();\n        docInit();\n        deviceDocInit();\n        getExtendDomains(gateInfo.domains);\n      } else {\n        growl.warning(\"网关不存在，联系管理员!\", {});\n        window.location.href = \"#/facility\";\n      }\n    };\n\n    $scope.infoPageManage = function (type) {\n      if (type == 'FBOX') {\n        var gateInfo = $scope.gatewayPhysical[$scope.selectDevice.gatewayId];\n        deviceAccessUIService.getFlexemCloudConfAddr(gateInfo.externalGwId, location.href, function (returnObj) {\n          if (returnObj.code == 0) {\n            window.open(returnObj.data);\n          }\n        });\n      } else if (type == '设备启用') {\n        if ($scope.selectDevice.gateInfo.managedStatus != 'active') {\n          growl.warning(\"网关不是启用状态，无法启用设备!\", {});\n          return;\n        }\n\n        BootstrapDialog.show({\n          title: '提示',\n          closable: false,\n          message: '确认启用 ' + escape($scope.selectDevice.label) + ' 设备吗？',\n          buttons: [{\n            label: '确定',\n            cssClass: 'btn-success',\n            action: function action(dialogRef) {\n              $scope.selectDevice.isLoading = true;\n              $scope.saveResource(function () {\n                resourceUIService.activateDevice($scope.selectDevice.id, function (returnObj) {\n                  $scope.selectDevice.isLoading = false;\n\n                  if (returnObj.code == 0) {\n                    $scope.selectDevice.managedStatus = returnObj.data.managedStatus;\n                    growl.success(\"启用成功\", {});\n                  }\n                });\n              });\n              dialogRef.close();\n            }\n          }, {\n            label: '取消',\n            action: function action(dialogRef) {\n              dialogRef.close();\n            }\n          }]\n        });\n      } else if (type == '设备停用') {\n        BootstrapDialog.show({\n          title: '提示',\n          closable: false,\n          message: '确认停用 ' + escape($scope.selectDevice.label) + ' 设备吗？',\n          buttons: [{\n            label: '确定',\n            cssClass: 'btn-success',\n            action: function action(dialogRef) {\n              $scope.selectDevice.isLoading = true;\n              resourceUIService.deactivateDevice($scope.selectDevice.id, function (returnObj) {\n                $scope.selectDevice.isLoading = false;\n\n                if (returnObj.code == 0) {\n                  $scope.selectDevice.managedStatus = returnObj.data.managedStatus;\n                  growl.success(\"停用成功\", {});\n                }\n              });\n              dialogRef.close();\n            }\n          }, {\n            label: '取消',\n            action: function action(dialogRef) {\n              dialogRef.close();\n            }\n          }]\n        });\n      } else if (type == \"管理当前网关\") {\n        location.href = \"#/gatewayInfo/\" + $scope.selectDevice.gatewayId;\n        resourceUIService.activeListTab = \"\";\n      } else if (type == \"管理当前模板\") {\n        if (!$scope.selectDevice.modelId || $scope.selectDevice.modelId == 0) {\n          growl.warning(\"请选择一个模板\");\n          return;\n        }\n\n        location.href = \"#/editModel/\" + $scope.selectDevice.modelId;\n      }\n    };\n    /**\n     * 添加数据项\n     */\n\n\n    $scope.showData = function (sel) {\n      $scope.addDataObj = jQuery.extend(true, {}, sel);\n      $scope.addDataObj.deviceMode = true;\n\n      if ($scope.selectDevice.managedStatus == 'active') {\n        $scope.addDataObj.displayMode = true;\n      } else {\n        $scope.addDataObj.displayMode = false;\n      }\n\n      if ($scope.selectDevice.physicalConfig.storageConfigs && $scope.selectDevice.physicalConfig.storageConfigs.length > 0) {\n        $scope.selectDevice.physicalConfig.storageConfigs.forEach(function (kpi) {\n          if (kpi.uid == $scope.addDataObj.uid) {\n            $scope.addDataObj.compress = kpi.compress;\n            $scope.addDataObj.compressTime = kpi.compressTime;\n            $scope.addDataObj.deadZone = kpi.deadZone;\n            $scope.addDataObj.deadZoneRange = kpi.deadZoneRange;\n            $scope.addDataObj.interval = kpi.interval;\n            $scope.addDataObj.intervalTime = kpi.intervalTime;\n          }\n        });\n      }\n\n      ngDialog.open({\n        template: '../partials/dialogue/add_data.html',\n        scope: $scope,\n        className: 'ngdialog-theme-plain'\n      });\n    };\n\n    $scope.saveKpi = function () {\n      if (!$scope.selectDevice.physicalConfig.storageConfigs) $scope.selectDevice.physicalConfig.storageConfigs = [];\n      var kpi = {};\n      kpi.uid = $scope.addDataObj.uid;\n      kpi.compress = $scope.addDataObj.compress;\n      kpi.compressTime = $scope.addDataObj.compressTime;\n      kpi.deadZone = $scope.addDataObj.deadZone;\n      kpi.deadZoneRange = $scope.addDataObj.deadZoneRange;\n      kpi.interval = $scope.addDataObj.interval;\n      kpi.intervalTime = $scope.addDataObj.intervalTime;\n\n      for (var i in $scope.selectDevice.physicalConfig.storageConfigs) {\n        var oldkpi = $scope.selectDevice.physicalConfig.storageConfigs[i];\n\n        if (oldkpi.uid == kpi.uid) {\n          $scope.selectDevice.physicalConfig.storageConfigs.splice(i, 1);\n          break;\n        }\n      }\n\n      ;\n      $scope.selectDevice.physicalConfig.storageConfigs.push(kpi);\n      growl.info(\"请点击保存按钮，并重新启用设备\", {});\n      $scope.closeDialog();\n    };\n    /**\n     * 展示采集组\n     */\n\n\n    $scope.showCollection = function (sel) {\n      $scope.taskObj = jQuery.extend(true, {}, sel);\n      $scope.taskObj.deviceMode = true;\n\n      if ($scope.selectDevice.managedStatus == 'active') {\n        $scope.taskObj.displayMode = true;\n      } else {\n        $scope.taskObj.displayMode = false;\n      }\n\n      var kpiDir = jQuery.extend(true, [], $scope.selectDevice.kpi);\n      $scope.selectValueLeft = [];\n      $scope.selectValueRight = [];\n      var dirKpiList = $scope.taskObj.kpiDefinitionIds;\n\n      if (dirKpiList.length > 0) {\n        for (var j = 0; j < dirKpiList.length; j++) {\n          var index = -1;\n\n          for (var i = 0; i < kpiDir.length; i++) {\n            if (kpiDir[i].uid == dirKpiList[j]) {\n              index = i;\n              break;\n            }\n          }\n\n          if (index > -1) {\n            $scope.selectValueRight.push(kpiDir.splice(index, 1)[0]);\n          }\n        }\n\n        $scope.selectValueLeft = kpiDir;\n      } else {\n        $scope.selectValueLeft = kpiDir;\n      }\n\n      if ($scope.selectDevice.physicalConfig.taskConfigs.length > 0) {\n        //有设备上的设置\n        $scope.selectDevice.physicalConfig.taskConfigs.forEach(function (task) {\n          if (task.id == $scope.taskObj.id) {\n            $scope.taskObj.cycleUnit = task.cycleUnit;\n            $scope.taskObj.taskCycle = task.taskCycle;\n          }\n\n          ;\n        });\n      }\n\n      ngDialog.open({\n        template: '../partials/dialogue/add_collection.html',\n        scope: $scope,\n        className: 'ngdialog-theme-plain'\n      });\n    };\n\n    $scope.saveCollection = function () {\n      if (!$scope.selectDevice.physicalConfig.taskConfigs) $scope.selectDevice.physicalConfig.taskConfigs = [];\n\n      if ($scope.selectDevice.physicalConfig.taskConfigs.length > 0) {\n        //有设备上的设置\n        $scope.selectDevice.physicalConfig.taskConfigs.forEach(function (task) {\n          if (task.taskCode == $scope.taskObj.taskCode) {\n            task.cycleUnit = $scope.taskObj.cycleUnit;\n            task.taskCycle = $scope.taskObj.taskCycle;\n          }\n\n          ;\n        });\n      } else {\n        var newTask = {\n          taskCode: $scope.taskObj.id,\n          cycleUnit: $scope.taskObj.cycleUnit,\n          taskCycle: $scope.taskObj.taskCycle\n        };\n        $scope.selectDevice.physicalConfig.taskConfigs.push(newTask);\n      }\n\n      for (var i in $scope.selectDevice.taskData) {\n        if ($scope.selectDevice.taskData[i].taskCode == $scope.taskObj.taskCode) {\n          $scope.selectDevice.taskData[i].cycleUnit = $scope.taskObj.cycleUnit;\n          $scope.selectDevice.taskData[i].taskCycle = $scope.taskObj.taskCycle;\n        }\n      }\n\n      growl.info(\"请点击保存按钮，并重新启用设备\", {});\n      $scope.closeDialog();\n    };\n\n    $scope.reg = function (kpi, config) {\n      if ($scope.protocolObj.resolutionProtocol) {\n        $scope.protocolObj.resolutionProtocol.regs.forEach(function (regSelect) {\n          if (kpi.registers == regSelect.label) {\n            kpi.kpiRegisters = regSelect.attributes;\n            return true;\n          }\n        });\n      }\n    };\n\n    $scope.regsKpiList = {};\n    /**\n     * 根据数据类型过滤寄存器\n     * @param size 字节长度\n     * @param kpiId  数据项id\n     */\n\n    $scope.dataByte = function (kpi) {\n      var resolution = function resolution(arr, kpi) {\n        var resolutionProtocol = \"\";\n\n        if ($scope.protocolObj.accessProtocol != 'flexem') {\n          return;\n        }\n\n        if ($scope.protocolObj.accessProtocol == 'flexem' && $scope.selectDevice.accessMode == 'multiple' && kpi.analysisConfigs && kpi.analysisConfigs.connectPointId) {\n          var connLabel = $scope.connectPointsDic[kpi.analysisConfigs.connectPointId].resolutionProtocolName;\n\n          if ($scope.resolutionProtocolDic[connLabel] != undefined) {\n            resolutionProtocol = $scope.resolutionProtocolDic[connLabel].regs;\n          }\n        } else if ($scope.protocolObj.resolutionProtocol) {\n          resolutionProtocol = $scope.protocolObj.resolutionProtocol.regs;\n        }\n\n        if (resolutionProtocol) {\n          var protocolList = [];\n\n          for (var j in resolutionProtocol) {\n            if ($.inArray(resolutionProtocol[j].extAttributes.ioWidth, arr) >= 0) {\n              protocolList.push(resolutionProtocol[j]);\n            }\n          }\n\n          $scope.regsKpiList[kpi.kpiId] = protocolList;\n        }\n      };\n\n      var dataType = $scope.allDataTypes;\n      var dataObj = {};\n\n      for (var i in dataType) {\n        if (dataType[i].id == kpi.dataTypeId) {\n          dataObj = dataType[i];\n          break;\n        }\n      }\n\n      kpi.kpiRegisters = [];\n\n      switch (dataObj.byteSize) {\n        case 1:\n          resolution([0], kpi);\n          break;\n\n        case 2:\n          resolution([2], kpi);\n          break;\n\n        case 4:\n          resolution([2, 4], kpi);\n          break;\n\n        case 8:\n          resolution([2, 4, 8], kpi);\n          break;\n\n        default:\n          $scope.regsKpiList[kpi.kpiId] = [];\n      }\n\n      ;\n    };\n\n    $scope.saveProtocol = function () {\n      $scope.selectDevice.physicalConfig.accessConfigs = $scope.protocolInfoData;\n      $scope.closeDialog();\n      growl.info(\"请点击保存按钮，并重新启用设备\", {});\n    };\n    /**\n     * 2018-07-16 宝钢项目\n     * 增加一个测点参数\n     * 保存设备的测点参数\n     */\n\n\n    $scope.showMeasurePoint = function () {\n      // 只要振动的测点\n      var measurePointDatas;\n      var sourceValue = eval($scope.selectDevice.values.MeasurePointLocate);\n\n      if (sourceValue.length > 0) {\n        for (var i = 0; i < sourceValue.length; i++) {\n          if (sourceValue[i]['Z']) {\n            measurePointDatas = sourceValue[i]['Z'];\n          }\n        }\n      }\n\n      $scope.measurePointDatas = measurePointDatas.filter(function (ele) {\n        return ele.name < 1000;\n      });\n      var propsList = $scope.myDicts['pointParamType'];\n      $scope.specialtyProps = [];\n\n      for (var i in propsList) {\n        $scope.specialtyProps.push({\n          value: propsList[i].valueCode,\n          label: propsList[i].label\n        });\n      } // 测点类型\n\n\n      $scope.pointTypes = $scope.myDicts['pointType'];\n\n      $scope.pointTypeDataFunc = function (e) {\n        $scope.pointType = e;\n      }; // 测点\n\n\n      $scope.measurePointDataFunc = function (e) {\n        $scope.measurePoint = e;\n      }; // 参数\n\n\n      $scope.domainFunc = function (e) {\n        $scope.domain = e;\n      }; // 表格整理的数据\n\n\n      $scope.protocolInfoData = $scope.selectDevice.pointParamItemList ? $scope.selectDevice.pointParamItemList : [];\n      $scope.protocolInfoData.forEach(function (elem) {\n        elem.pointName = $scope.measurePointDatas.find(function (ele) {\n          return elem.pointId == ele.name;\n        }).label;\n        elem.paramName = $scope.specialtyProps.find(function (ele) {\n          return elem.paramKey == ele.value;\n        }).label;\n      });\n\n      var checkoutSelectVerify = function checkoutSelectVerify() {\n        if (!$scope.pointType) {\n          growl.warning(\"请选择测点类型\", {});\n          return false;\n        }\n\n        if (!$scope.measurePoint) {\n          growl.warning(\"请选择测点\", {});\n          return false;\n        }\n\n        if (!$scope.domain) {\n          growl.warning(\"请选择数据项\", {});\n          return false;\n        } // 判断是否重复添加\n        // if ($scope.protocolInfoData.length > 0) {\n        //     for (var i = 0; i < $scope.protocolInfoData.length; i++) {\n        //         if ($scope.protocolInfoData[i].pointType == $scope.pointType.label &&\n        //             $scope.protocolInfoData[i].paramName == $scope.domain.label &&\n        //             $scope.protocolInfoData[i].pointName == $scope.measurePoint.label) {\n        //             growl.warning(\"这个测点参数已存在\", {});\n        //             return false\n        //         }\n        //     }\n        // }\n\n\n        return true;\n      };\n\n      $scope.addConfiguration = function () {\n        if (checkoutSelectVerify()) {\n          var protocolInfoModel = {\n            \"pointType\": $scope.pointType.label,\n            \"pointTypeAlias\": \"\",\n            \"pointId\": $scope.measurePoint.name,\n            \"pointName\": $scope.measurePoint.label,\n            \"paramKey\": $scope.domain.value,\n            \"paramName\": $scope.domain.label,\n            \"paramValue\": \"\"\n          };\n          $scope.protocolInfoData.push(protocolInfoModel);\n        }\n      }; // 删除一行\n\n\n      $scope.deleteMeasurePointLocateChange = function (kpi, $index) {\n        $scope.protocolInfoData.splice($index, 1);\n      };\n\n      ngDialog.open({\n        template: '../partials/dialogue/measure_point.html',\n        scope: $scope,\n        className: 'ngdialog-theme-plain'\n      });\n    };\n\n    $scope.saveMeasurePoint = function () {\n      $scope.selectDevice.pointParamItemList = $scope.protocolInfoData;\n\n      function checked() {\n        for (var i = 0; i < $scope.protocolInfoData.length; i++) {\n          if ($scope.protocolInfoData[i].pointTypeAlias == \"\") {\n            growl.warning(\"测点别名不能为空\", {});\n            return false;\n          }\n\n          if ($scope.protocolInfoData[i].paramValue == \"\") {\n            growl.warning(\"参数不能为空\", {});\n            return false;\n          }\n        }\n\n        return true;\n      }\n\n      if (checked()) {\n        $scope.closeDialog();\n        growl.info(\"请点击保存按钮，并重新启用设备\", {});\n      }\n    };\n    /**\n     * 2017-11-27 宝钢项目\n     * 导入和导出协议的Excel\n     * 韩星\n     */\n\n\n    $scope.importPhysicalConfig = function () {\n      $('#fileName').click();\n    };\n\n    $scope.exportPhysicalConfig = function () {\n      location.href = '' + userUIService.uploadFileUrl + '/api/rest/export/resourceUIService/exportPhysicalConfig/' + $scope.selectDevice.id + '.xlsx/' + $scope.selectDevice.id + '/physicalConfig/';\n    }; // 清除扩展域\n\n\n    $scope.cleanDomainPath = function () {\n      $scope.selectDevice.extendDomains = null;\n    };\n\n    $scope.showProtocol = function () {\n      if (!$scope.selectDevice.physicalConfig.analysisProtocol && $scope.selectDevice.accessMode == 'single') {\n        growl.warning(\"请选择一个解析协议\", {});\n        return;\n      }\n\n      $scope.protocolObj = null;\n\n      if ($scope.selectDevice.physicalConfig.accessConfigs.length == 0) {\n        //没有设备上的设置，查找模板的\n        if ($scope.selectDevice.config) {\n          //模板上有设置\n          $scope.selectDevice.config.forEach(function (config) {\n            if (config.accessProtocol == $scope.selectDevice.physicalConfig.accessProtocol && config.analysisProtocol == $scope.selectDevice.physicalConfig.analysisProtocol) {\n              for (var j in config.accessConfigs) {\n                if (config.accessProtocol == 'modbus' && config.accessConfigs[j].registers) {\n                  config.accessConfigs[j].registers = parseInt(config.accessConfigs[j].registers);\n                }\n\n                if (config.analysisConfigs == undefined && config.accessProtocol == 'flexem') {\n                  config.accessConfigs[j][\"analysisConfigs\"] = {};\n                  config.accessConfigs[j][\"analysisConfigs\"][\"connectPointId\"] = '';\n                  config.accessConfigs[j][\"analysisConfigs\"][\"stationNo\"] = 1;\n                  config.accessConfigs[j][\"analysisConfigs\"][\"externalDevId\"] = '';\n                }\n              }\n\n              $scope.protocolObj = jQuery.extend(true, {}, config);\n\n              if ($scope.protocolObj.accessProtocol == \"baogang\") {\n                /**\n                 * 宝钢项目 2017.11.11 韩星\n                 * 协议信息重构\n                 */\n                // 从字典表获取专业\n                var propsList = $scope.myDicts['specialtyProps'];\n                $scope.specialtyProps = [];\n\n                for (var i in propsList) {\n                  $scope.specialtyProps.push({\n                    value: propsList[i].valueCode,\n                    label: propsList[i].label\n                  });\n                }\n\n                $scope.domainFunc = function (e) {\n                  // 专业\n                  $scope.domain = e; // 来自设备模版的测点属性\n\n                  /**\n                   * 黄威需求变更，之前的测点是从模版上取的，现在改成直接从设备上获取\n                   */\n                  // 选中数据项\n\n                  $scope.indicatorDatas = [];\n                  $scope.selectDevice.kpi.forEach(function (elem) {\n                    if (e.value == elem.values.specialtyProp) {\n                      var item = {\n                        label: elem.label,\n                        uid: elem.uid,\n                        dataItemId: elem.id\n                      };\n                      $scope.indicatorDatas.push(item);\n                    }\n                  });\n                  var sourceValue = eval($scope.selectDevice.values.MeasurePointLocate);\n\n                  if (sourceValue.length > 0) {\n                    for (var i = 0; i < sourceValue.length; i++) {\n                      if (sourceValue[i][e.value]) {\n                        $scope.measurePointDatas = sourceValue[i][e.value];\n                        return;\n                      } else {\n                        $scope.measurePointDatas = null;\n                      }\n                    }\n                  }\n                };\n\n                $scope.measurePointDataFunc = function (e) {\n                  $scope.measurePoint = e;\n                };\n\n                $scope.indicatorFunc = function (e) {\n                  $scope.indicator = e;\n                };\n\n                var checkoutSelectVerify = function checkoutSelectVerify() {\n                  if (!$scope.domain) {\n                    growl.error(\"请选择专业\", {});\n                    return false;\n                  }\n\n                  if (!$scope.measurePoint) {\n                    growl.error(\"请选择测点\", {});\n                    return false;\n                  }\n\n                  if (!$scope.indicator) {\n                    growl.error(\"请选择数据项\", {});\n                    return false;\n                  } // 判断是否重复添加\n\n\n                  if ($scope.protocolInfoData.length > 0) {\n                    for (var i = 0; i < $scope.protocolInfoData.length; i++) {\n                      if ($scope.protocolInfoData[i].specialtyPropName == $scope.domain.label && $scope.protocolInfoData[i].instanceName == $scope.measurePoint.label && $scope.protocolInfoData[i].kpiName == $scope.indicator.label) {\n                        growl.warning(\"这个数据项检测点位已存在\", {});\n                        return false;\n                      }\n                    }\n                  }\n\n                  return true;\n                }; // 创建表格的数据\n\n\n                $scope.protocolInfoData = [];\n\n                $scope.addConfiguration = function (data) {\n                  if (checkoutSelectVerify()) {\n                    if (checkoutSelectVerify()) {\n                      var protocolInfoModel = {\n                        specialtyPropName: $scope.domain.label,\n                        specialtyProp: $scope.domain.value,\n                        instance: $scope.measurePoint.name,\n                        instanceName: $scope.measurePoint.label,\n                        dataItemId: $scope.indicator.dataItemId,\n                        anOtherName: \"\",\n                        kpiName: $scope.indicator.label,\n                        kpiId: $scope.indicator.uid,\n                        writeExpression: \"\",\n                        readExpression: \"\",\n                        isShowExpand: false\n                      };\n                      $scope.protocolInfoData.push(protocolInfoModel);\n                    }\n                  }\n\n                  ; // 删除一行\n\n                  $scope.deleteMeasurePointLocateChange = function (kpi, $index) {\n                    $scope.protocolInfoData.splice($index, 1);\n                  };\n                };\n              }\n            }\n          });\n        }\n      } else {\n        if ($scope.selectDevice.physicalConfig.accessProtocol == 'modbus') {\n          var phyArr = $scope.selectDevice.physicalConfig.accessConfigs;\n\n          for (var j in phyArr) {\n            if (phyArr[j].registers) {\n              phyArr[j].registers = parseInt(phyArr[j].registers);\n            }\n          }\n        }\n\n        $scope.protocolObj = jQuery.extend(true, {}, $scope.selectDevice.physicalConfig);\n        $scope.protocolObj.id = Number.MAX_VALUE;\n\n        if ($scope.protocolObj.accessProtocol == \"baogang\") {\n          /**\n           * 宝钢项目 2017.11.11 韩星\n           * 协议信息重构\n           */\n          // 从字典表获取专业\n          var propsList = $scope.myDicts['specialtyProps'];\n          $scope.specialtyProps = [];\n          $scope.indicatorDatas = [];\n\n          for (var i in propsList) {\n            $scope.specialtyProps.push({\n              value: propsList[i].valueCode,\n              label: propsList[i].label\n            });\n          }\n\n          $scope.domainFunc = function (e) {\n            // 专业\n            $scope.domain = e; // 获取数据项\n\n            $scope.indicatorDatas = [];\n            $scope.selectDevice.kpi.forEach(function (elem) {\n              if (e.value == elem.values.specialtyProp) {\n                var item = {\n                  label: elem.label,\n                  uid: elem.uid,\n                  dataItemId: elem.id\n                };\n                $scope.indicatorDatas.push(item);\n              }\n            }); // 来自设备模版的测点属性\n\n            var sourceValue = eval($scope.selectDevice.values.MeasurePointLocate);\n\n            if (sourceValue.length > 0) {\n              for (var i = 0; i < sourceValue.length; i++) {\n                if (sourceValue[i][e.value]) {\n                  $scope.measurePointDatas = sourceValue[i][e.value];\n                  return;\n                } else {\n                  $scope.measurePointDatas = null;\n                }\n              }\n            }\n            /*  $scope.selectDevice.attrType.forEach(function (attrgroup) {\n             attrgroup.arr.forEach(function (attr) {\n             if (attr.name == \"MeasurePointLocate\" && attr.sourceValue) {\n             var sourceValue = eval(attr.sourceValue);\n             for (var i = 0; i < sourceValue.length; i++) {\n             if (sourceValue[i][e.value]) {\n             $scope.measurePointDatas = sourceValue[i][e.value];\n             return;\n             } else {\n             $scope.measurePointDatas = null;\n             }\n             }\n             }\n             })\n             });*/\n\n          };\n\n          $scope.measurePointDataFunc = function (e) {\n            $scope.measurePoint = e;\n          };\n\n          $scope.indicatorFunc = function (e) {\n            $scope.indicator = e;\n          };\n\n          var checkoutSelectVerify = function checkoutSelectVerify() {\n            if (!$scope.domain) {\n              growl.warning(\"请选择专业\", {});\n              return false;\n            }\n\n            if (!$scope.measurePoint) {\n              growl.warning(\"请选择测点\", {});\n              return false;\n            }\n\n            if (!$scope.indicator) {\n              growl.warning(\"请选择数据项\", {});\n              return false;\n            } // 判断是否重复添加\n\n\n            if ($scope.protocolInfoData.length > 0) {\n              for (var i = 0; i < $scope.protocolInfoData.length; i++) {\n                if ($scope.protocolInfoData[i].specialtyPropName == $scope.domain.label && $scope.protocolInfoData[i].instanceName == $scope.measurePoint.label && $scope.protocolInfoData[i].kpiName == $scope.indicator.label) {\n                  growl.warning(\"这个数据项检测点位已存在\", {});\n                  return false;\n                }\n              }\n            }\n\n            return true;\n          }; // 创建表格的数据\n\n\n          $scope.protocolInfoData = $scope.selectDevice.physicalConfig.accessConfigs;\n          $scope.protocolInfoData.forEach(function (protocolInfoData) {\n            var specialtyPropName = propsList.find(function (ele) {\n              return ele.valueCode == protocolInfoData.specialtyProp;\n            }); // 取出测点名字\n\n            var sourceValue = eval($scope.selectDevice.values.MeasurePointLocate);\n\n            if (sourceValue.length > 0) {\n              var measurePointArr = [];\n\n              for (var i = 0; i < sourceValue.length; i++) {\n                for (var k in sourceValue[i]) {\n                  for (var j = 0; j < sourceValue[i][k].length; j++) {\n                    measurePointArr.push(sourceValue[i][k][j]);\n                  }\n                }\n              }\n            }\n\n            $scope.measurePointDatas = measurePointArr || [];\n            var measurePointData = $scope.measurePointDatas.find(function (measurePointData) {\n              return measurePointData.name == protocolInfoData.instance;\n            });\n            protocolInfoData.specialtyPropName = specialtyPropName.label;\n\n            if (measurePointData) {\n              protocolInfoData.instanceName = measurePointData.label;\n            }\n          });\n\n          $scope.addConfiguration = function (data) {\n            if (checkoutSelectVerify()) {\n              var protocolInfoModel = {\n                specialtyPropName: $scope.domain.label,\n                specialtyProp: $scope.domain.value,\n                instance: $scope.measurePoint.name,\n                instanceName: $scope.measurePoint.label,\n                dataItemId: $scope.indicator.dataItemId,\n                anOtherName: \"\",\n                kpiName: $scope.indicator.label,\n                kpiId: $scope.indicator.uid,\n                writeExpression: \"\",\n                readExpression: \"\",\n                isShowExpand: false\n              };\n              $scope.protocolInfoData.push(protocolInfoModel);\n            }\n          }; // 删除一行\n\n\n          $scope.deleteMeasurePointLocateChange = function (kpi, $index) {\n            $scope.protocolInfoData.splice($index, 1);\n          };\n        }\n      }\n\n      if (!$scope.protocolObj) {\n        $scope.protocolObj = {\n          id: Number.MAX_VALUE,\n          accessProtocol: $scope.gatewayPhysical[parseInt(gatewayId)].protocol,\n          analysisProtocol: $scope.selectDevice.physicalConfig.analysisProtocol\n        };\n      } // $scope.analysisChange();\n\n\n      ngDialog.open({\n        template: '../partials/dialogue/gateways_protocol.html',\n        scope: $scope,\n        className: 'ngdialog-theme-plain'\n      });\n    };\n\n    $scope.measurePointLocateChange = function (kpi, type) {\n      if (kpi.instance) {\n        var instance = kpi.instance;\n        kpi.instance = \"\";\n        var newKpi = $.extend(true, {}, kpi);\n        delete newKpi.$$hashKey;\n        var tmp = -1;\n        var index = 0;\n        var searchList = [];\n        var points = $scope.connectPoints;\n        var list = [];\n\n        for (var i = $scope.protocolObj.accessConfigs.length - 1; i > -1; i--) {\n          if (type != \"delete\" && $scope.protocolObj.accessConfigs[i].kpiId == newKpi.kpiId && $scope.protocolObj.accessConfigs[i].instance == instance) {\n            tmp = i;\n            growl.warning(\"这个数据项检测点位已存在\", {});\n            break;\n          }\n\n          if ($scope.protocolObj.accessConfigs[i].kpiId == newKpi.kpiId) {\n            searchList.push($scope.protocolObj.accessConfigs[i]);\n            index = i;\n          }\n        }\n\n        if (tmp < 0) {\n          kpi.instance = instance; // $scope.protocolObj.accessConfigs.splice(tmp+1,0,newKpi);index\n\n          for (var i in points) {\n            var t = -1;\n\n            for (var b in searchList) {\n              if (points[i].id == searchList[b].instance) {\n                t = i;\n                break;\n              }\n            }\n\n            if (t < 0) {\n              list.push(points[i]);\n            }\n          } // $scope.connectObj[kpi.kpiId]=list;\n\n\n          if (type == \"delete\") {\n            if (searchList.length > 1) {\n              $scope.protocolObj.accessConfigs.splice(index, 1);\n            } else {\n              kpi.instance = \"\";\n              growl.warning(\"最后一个不让删除\", {});\n            }\n          } else {\n            if (list.length > 0 && searchList.length < points.length) {\n              $scope.protocolObj.accessConfigs.splice(index, 0, newKpi); // $scope.protocolObj.accessConfigs.push(newKpi);\n            }\n          }\n        }\n      }\n    }; //     高级选项切换\n\n\n    $scope.expandObj = {};\n\n    $scope.optionExpand = function (kpi) {\n      if ($scope.expandObj[kpi.kpiId]) {\n        if ($scope.expandObj[kpi.kpiId].option == true) {\n          $scope.expandObj[kpi.kpiId].option = false;\n        } else {\n          $scope.expandObj[kpi.kpiId].option = true;\n        }\n\n        return;\n      } else {\n        kpi.option = true;\n        $scope.expandObj[kpi.kpiId] = kpi;\n      }\n    };\n\n    $scope.analysisChange = function () {\n      $scope.protocolObj.resolutionProtocol = $scope.resolutionProtocolDic[$scope.protocolObj.analysisProtocol];\n      var modelKpis = $scope.selectDevice.kpi;\n      var gatList = [];\n      modelKpis.forEach(function (modelkpi) {\n        var devkpi = jQuery.extend(true, {}, modelkpi);\n\n        if ($scope.protocolObj.accessConfigs) {\n          var oldKpi = false; //初始化过的数据\n\n          $scope.protocolObj.accessConfigs.forEach(function (configkpi) {\n            if (devkpi.uid == configkpi.kpiId) {\n              oldKpi = true;\n\n              if (configkpi.analysisConfigs == null) {\n                configkpi.analysisConfigs = {};\n\n                if ($scope.protocolObj.accessProtocol == 'flexem') {\n                  configkpi[\"analysisConfigs\"][\"connectPointId\"] = $scope.selectDevice.physicalConfig.analysisConfigs.connectPointId;\n                  configkpi[\"analysisConfigs\"][\"stationNo\"] = parseInt($scope.selectDevice.physicalConfig.stationNo);\n                  configkpi[\"analysisConfigs\"][\"externalDevId\"] = $scope.selectDevice.externalDevId;\n                }\n              }\n\n              configkpi.dataItemId = devkpi.id;\n              gatList.push(configkpi);\n              return true;\n            }\n          });\n\n          if (!oldKpi) {\n            getWayKpiInit(devkpi, {\n              config: {}\n            });\n            gatList.push(devkpi);\n          }\n        } else {\n          getWayKpiInit(devkpi, {\n            config: {}\n          });\n          gatList.push(devkpi);\n        }\n      });\n      $scope.protocolObj.accessConfigs = gatList;\n    };\n\n    $scope.downClick = function (qualifiedName) {\n      var url = userUIService.uploadFileUrl + qualifiedName;\n      window.open(url);\n    };\n\n    $scope.deleteDeviceDoc = function (deviceDoc) {\n      BootstrapDialog.show({\n        title: '提示',\n        closable: false,\n        message: '确认删除文档吗？',\n        buttons: [{\n          label: '确定',\n          cssClass: 'btn-success',\n          action: function action(dialogRef) {\n            resourceUIService.deleteDeviceFile(deviceDoc, function (resultObj) {\n              if (resultObj.code == 0) {\n                for (var i in $scope.selectDevice.deviceDocData) {\n                  if (deviceDoc.id == $scope.selectDevice.deviceDocData[i].id) {\n                    $scope.selectDevice.deviceDocData.splice(i, 1);\n                    break;\n                  }\n                }\n\n                growl.success(\"删除成功\", {});\n              }\n            });\n            dialogRef.close();\n          }\n        }, {\n          label: '取消',\n          action: function action(dialogRef) {\n            dialogRef.close();\n          }\n        }]\n      });\n    };\n    /**\n     * 查询设备上kpi 在线状态、故障状态\n     * @param ids 设备id\n     * @param selectedInstances  设备数组\n     */\n\n\n    var getSearchResourceState = function getSearchResourceState(ids, selectedInstances, callback) {\n      kpiDataService.getRealTimeKpiData(ids, [999999, 999998], function (returnObj) {\n        if (returnObj.code == 0) {\n          for (var j in selectedInstances) {\n            for (var i in returnObj.data) {\n              if (returnObj.data[i].nodeId == selectedInstances[j].id) {\n                if (returnObj.data[i].kpiCode == '999998') {\n                  selectedInstances[j].onlineStatus = returnObj.data[i].value;\n                }\n\n                if (returnObj.data[i].kpiCode == '999999') {\n                  selectedInstances[j].severity = returnObj.data[i].value;\n                }\n              }\n            }\n          }\n        }\n\n        if (callback) {\n          callback(selectedInstances);\n        } // $scope.$broadcast(Event.CMDBINFOSINIT + \"_facility\", $scope.facilityList);\n\n      });\n    };\n\n    $scope.pipeline = function (opts) {\n      // Configuration options\n      var conf = $.extend({\n        pages: 1,\n        // number of pages to cache\n        url: '',\n        // script url\n        data: null,\n        // function or object with parameters to send to the server\n        // matching how `ajax.data` works in DataTables\n        method: 'POST' // Ajax HTTP method\n\n      }, opts); // Private variables for storing the cache\n\n      var cacheLower = -1;\n      var cacheUpper = null;\n      var cacheLastRequest = null;\n      var cacheLastJson = null;\n      return function (request, drawCallback, settings) {\n        var ajax = false;\n        var requestStart = request.start;\n        var drawStart = request.start;\n        var requestLength = request.length;\n        var requestEnd = requestStart + requestLength;\n        var sort = request.columns[request.order[0].column].data; //排序列的字段\n\n        var sortType = request.order[0].dir; //排序的方式\n\n        if (settings.clearCache) {\n          // API requested that the cache be cleared\n          ajax = true;\n          settings.clearCache = false;\n        } else if (cacheLower < 0 || requestStart < cacheLower || requestEnd > cacheUpper) {\n          // outside cached data - need to make a request\n          ajax = true;\n        } else if (JSON.stringify(request.order) !== JSON.stringify(cacheLastRequest.order) || JSON.stringify(request.columns) !== JSON.stringify(cacheLastRequest.columns) || JSON.stringify(request.search) !== JSON.stringify(cacheLastRequest.search)) {\n          // properties changed (ordering, columns, searching)\n          ajax = true;\n        } // Store the request for checking next time around\n\n\n        cacheLastRequest = $.extend(true, {}, request);\n\n        if (ajax) {\n          // Need data from the server\n          if (requestStart < cacheLower) {\n            requestStart = requestStart - requestLength * (conf.pages - 1);\n\n            if (requestStart < 0) {\n              requestStart = 0;\n            }\n          }\n\n          cacheLower = requestStart;\n          cacheUpper = requestStart + requestLength * conf.pages;\n          request.start = requestStart;\n          request.length = requestLength * conf.pages; // Provide the same `data` options as DataTables.\n\n          if ($.isFunction(conf.data)) {\n            // As a function it is executed with the data object as an arg\n            // for manipulation. If an object is returned, it is used as the\n            // data object to submit\n            var d = conf.data(request);\n\n            if (d) {\n              $.extend(request, d);\n            }\n          } else if ($.isPlainObject(conf.data)) {\n            // As an object, the data given extends the default\n            $.extend(request, conf.data);\n          }\n\n          var pageRequest = {\n            start: request.start,\n            length: request.length,\n            sort: sort,\n            sortType: sortType,\n            statCount: request.draw == 1\n          };\n          $scope.getDevicesByPage($scope.queryDitemList, pageRequest, function (returnObj, total) {\n            var json = {};\n            json.data = returnObj;\n            json.draw = request.draw; // Update the echo for each response\n\n            json.recordsTotal = total != undefined ? total == -1 ? cacheLastJson.recordsTotal : total : returnObj.length;\n            json.recordsFiltered = json.recordsTotal;\n            cacheLastJson = $.extend(true, {}, json);\n\n            if (cacheLower != drawStart) {\n              json.data.splice(0, drawStart - cacheLower);\n            }\n\n            if (requestLength >= -1) {\n              json.data.splice(requestLength, json.data.length);\n            }\n\n            drawCallback(json);\n          });\n        } else {\n          if ($scope.socketList.length > 0) {\n            cacheLastJson.data = $scope.socketList;\n          }\n\n          var json = $.extend(true, {}, cacheLastJson);\n          json.draw = request.draw; // Update the echo for each response\n\n          json.data.splice(0, requestStart - cacheLower);\n          json.data.splice(requestLength, json.data.length);\n          drawCallback(json);\n        }\n      };\n    };\n\n    $scope.socketList = [];\n\n    var stateCallback = function stateCallback(evendata) {\n      var list = $scope.facilityResourceState;\n      list.forEach(function (facility) {\n        if (facility.id == evendata.data.nodeId) {\n          // facility.onlineStatus = evendata.data.value == 0 ? \"离线\" : \"在线\";\n          facility.onlineStatus = evendata.data.value;\n          return false;\n        }\n      });\n      $scope.socketList = list;\n      $scope.fnData(evendata.data);\n    };\n\n    $scope.getDevicesByPage = function (queryItem, pageRequest, callback) {\n      resourceUIService.getDevicesByConditionWithPage(queryItem, pageRequest, function (returnObj) {\n        if (returnObj.code == 0) {\n          var ids = [];\n\n          for (var i in returnObj.data.data) {\n            ids.push(returnObj.data.data[i].id);\n          }\n\n          $scope.facilityList = returnObj.data.data;\n          getSearchResourceState(ids, returnObj.data.data, function (data) {\n            if (callback) {\n              $scope.facilityResourceState = data;\n              callback(data, returnObj.data.total); //监听websocket\n\n              if (\"WebSocket\" in window) {\n                var param = {\n                  ciid: ids.toString(),\n                  kpi: '999998'\n                };\n                var operation = \"register\"; //注册WebSocket\n\n                SwSocket.register(uuid, operation, stateCallback); //webSocket发送请求\n\n                SwSocket.send(uuid, operation, 'kpi', param);\n              }\n            }\n          });\n        }\n      });\n    }; //搜索条件\n\n\n    $scope.goSearch = function () {\n      $scope.queryDitemList = {}; // 根据客户查设备，通过路由进来的时候进行校验\n\n      var id = $routeParams.id;\n      $scope.chooseType = type;\n      var physicalConfig = {\n        //是否自动激活\n        autoActive: null,\n        modelConfig: {},\n        //站号\n        stationNo: 1,\n        //解析配置\n        analysisConfigs: {},\n        //采集组频率\n        taskConfigs: [],\n        //解析协议\n        analysisProtocol: null,\n        accessConfigs: [],\n        storageConfigs: []\n      };\n\n      if (type == \"customer\" && id) {\n        type = '';\n        var cId = parseInt(id);\n        var cList = $scope.customersList;\n\n        for (var i in cList) {\n          if (cList[i].id == cId) {\n            $scope.queryDitem[\"domainPath\"] = cList[i].domainPath;\n            $scope.queryDitemList[\"customerId\"] = cId;\n            $scope.queryDitem[\"customerId\"] = cId;\n            break;\n          }\n        }\n      } else if (type == \"domain\" && id) {\n        type = '';\n        $scope.queryDitemList[\"domainPath\"] = id;\n        $scope.queryDitem[\"domainPath\"] = id;\n      } else if (type == \"sn\" && id) {\n        type = '';\n        $scope.queryDitemList[\"sn\"] = id;\n        $scope.queryDitem[\"sn\"] = id;\n      } else if (type == \"model\" && id) {\n        type = '';\n        $scope.queryDitemList[\"modelId\"] = id;\n        $scope.queryDitem[\"modelId\"] = id;\n      } else if (type == \"project\" && id) {\n        type = '';\n        var pId = parseInt(id);\n        var pList = $scope.projectsList;\n\n        for (var i in pList) {\n          if (pList[i].id == pId) {\n            $scope.queryDitem[\"domainPath\"] = pList[i].domainPath;\n            $scope.queryDitemList[\"projectId\"] = pId;\n            $scope.queryDitem[\"customerId\"] = pList[i].customerId;\n            $scope.queryDitem[\"projectId\"] = pId;\n            break;\n          }\n        }\n      } else if (type == \"DEVICE\") {\n        $scope.queryDitemList[\"gatewayId\"] = gatewayId;\n        $scope.queryDitemList[\"resourceId\"] = id;\n      } else if (type == \"DETAIL\" || type == \"DEPLOY\" || type == \"DEVICESEARCH\") {\n        $scope.queryDitemList[\"resourceId\"] = id;\n      } else if (type == \"UNDEVICE\") {\n        //未识别设备，特殊除处理\n        if (resourceUIService.selectUnComfirmedDevice && resourceUIService.selectUnComfirmedDevice.id == id) {\n          if (!resourceUIService.selectUnComfirmedDevice.physicalConfig) {\n            resourceUIService.selectUnComfirmedDevice.physicalConfig = jQuery.extend(true, {}, physicalConfig);\n          }\n\n          deviceHandler(resourceUIService.selectUnComfirmedDevice, gatewayId);\n        } else {\n          deviceHandler({\n            id: 0,\n            physicalConfig: jQuery.extend(true, {}, physicalConfig)\n          }, gatewayId);\n        }\n\n        return;\n      }\n\n      $scope.access.status = '';\n\n      if ($scope.queryDitem.modelId) {\n        $scope.queryDitemList[\"modelId\"] = $scope.queryDitem.modelId;\n      }\n\n      if ($scope.queryDitem.domainPath) {\n        $scope.queryDitemList[\"domains\"] = $scope.queryDitem.domainPath;\n      }\n\n      if ($scope.queryDitem.customerId) {\n        $scope.queryDitemList[\"customerId\"] = $scope.queryDitem.customerId;\n      }\n\n      if ($scope.queryDitem.projectId) {\n        $scope.queryDitemList[\"projectId\"] = $scope.queryDitem.projectId;\n      }\n\n      if ($scope.queryDitem.sn) {\n        $scope.queryDitemList[\"orCondition\"] = $scope.queryDitem.sn;\n        $scope.queryDitemList[\"conditionField\"] = [\"sn\", \"label\"];\n      }\n\n      if ($scope.seniorQuery) {\n        var objQuery = {};\n\n        for (var o in $scope.queryKeyValue) {\n          if ($scope.queryKeyValue[o].dataType == 'datetime' || $scope.queryKeyValue[o].dataType == 'date') {\n            objQuery[$scope.queryKeyValue[o].name] = [$scope.queryKeyValue[o].startTime, $scope.queryKeyValue[o].endTime];\n          } else if ($scope.queryKeyValue[o].dataType == 'numberic') {\n            objQuery[$scope.queryKeyValue[o].name] = [$scope.queryKeyValue[o].startNumberic, $scope.queryKeyValue[o].endNumberic];\n          } else {\n            objQuery[$scope.queryKeyValue[o].name] = $scope.queryKeyValue[o].value;\n          }\n        }\n\n        $scope.queryDitemList[\"values\"] = objQuery;\n      }\n\n      if (type == \"DEVICE\" || type == \"DETAIL\" || type == \"DEPLOY\") {\n        resourceUIService.getDevicesByCondition($scope.queryDitemList, function (res) {\n          if (res.code == 0) {\n            deviceHandler(res.data.length > 0 ? res.data[0] : {\n              id: 0,\n              from: 'gateway',\n              physicalConfig: jQuery.extend(true, {}, physicalConfig)\n            }, gatewayId);\n          }\n        });\n      } else {\n        $scope.$broadcast(Event.CMDBINFOSINIT + \"_facility\", {\n          \"option\": []\n        });\n      }\n    }; //清空搜索条件\n\n\n    $scope.goClear = function () {\n      $scope.queryDitem = {\n        domainPath: \"\",\n        sn: \"\",\n        customerId: \"\",\n        projectId: \"\",\n        modelId: \"\"\n      }; // $scope.queryKeyValue = [];\n\n      for (var o in $scope.queryKeyValue) {\n        if ($scope.queryKeyValue[o].dataType == 'datetime' || $scope.queryKeyValue[o].dataType == 'date') {\n          $scope.queryKeyValue[o].startTime = '';\n          $scope.queryKeyValue[o].endTime = '';\n        } else if ($scope.queryKeyValue[o].dataType == 'numberic') {\n          $scope.queryKeyValue[o].startNumberic = '';\n          $scope.queryKeyValue[o].endNumberic = '';\n        } else {\n          $scope.queryKeyValue[o].value = '';\n        }\n      }\n\n      $scope.queryModelChange();\n    };\n\n    $scope.addDirectives = function () {\n      var newObj = {\n        customerId: '',\n        projectId: '',\n        sn: '',\n        label: '',\n        domainSelect: '',\n        domainPath: '',\n        physicalDeviceDomain: '',\n        id: 0,\n        isEdit: 3\n      };\n\n      if ($scope.facilityList.data == undefined) {\n        $scope.facilityList[\"data\"] = [newObj];\n      } else {\n        $scope.facilityList.data.unshift(newObj);\n      }\n\n      $scope.$broadcast(Event.CMDBINFOSINIT + \"_facility\", $scope.facilityList);\n    };\n\n    $scope.connectChange = function () {\n      if ($scope.selectDevice.config) {\n        //模板上有设置\n        var temp = -1;\n        var protocolName = $scope.connectPointsDic[$scope.protocolObj.connectGateways].resolutionProtocolName;\n        $scope.selectDevice.config.forEach(function (config) {\n          if (config.accessProtocol == $scope.protocolObj.accessProtocol && config.analysisProtocol == protocolName) {\n            temp = 1;\n\n            for (var j in config.accessConfigs) {\n              config.accessConfigs[j][\"analysisConfigs\"] = {};\n              config.accessConfigs[j][\"analysisConfigs\"][\"connectPointId\"] = $scope.protocolObj.connectGateways;\n              config.accessConfigs[j][\"analysisConfigs\"][\"stationNo\"] = 1;\n              config.accessConfigs[j][\"analysisConfigs\"][\"externalDevId\"] = '';\n            }\n\n            $scope.protocolObj.accessConfigs = config.accessConfigs;\n          }\n        });\n\n        if (temp == -1) {\n          var kpiArr = $scope.protocolObj.accessConfigs;\n\n          for (var i in kpiArr) {\n            kpiArr[i].analysisConfigs.connectPointId = $scope.protocolObj.connectGateways;\n            kpiArr[i].analysisConfigs.stationNo = 1;\n            kpiArr[i].analysisConfigs.externalDevId = '';\n            kpiArr[i].readExpression = '';\n            kpiArr[i].registers = '';\n            kpiArr[i].writeExpression = '';\n            kpiArr[i].dataTypeId = '';\n            kpiArr[i].config = {};\n          }\n        }\n      } else {\n        var kpiArr = $scope.protocolObj.accessConfigs;\n\n        if ($scope.protocolObj.connectGateways) {\n          $scope.protocolObj.analysisProtocol = $scope.connectPointsDic[$scope.protocolObj.connectGateways].resolutionProtocolName;\n\n          for (var i in kpiArr) {\n            kpiArr[i].analysisConfigs.connectPointId = $scope.protocolObj.connectGateways;\n          }\n        }\n      }\n    }; //通过模型查测点\n\n\n    $scope.gatewayDate = {};\n\n    var getWayKpiInit = function getWayKpiInit(devkpi, base) {\n      devkpi[\"kpiId\"] = devkpi.uid;\n      devkpi[\"kpiName\"] = devkpi.label;\n      devkpi[\"deviceAddress\"] = base.config.deviceAddress;\n      devkpi[\"registerType\"] = base.config.registerType;\n      devkpi[\"startPoint\"] = base.config.startPoint;\n      devkpi[\"length\"] = base.config.length;\n      devkpi[\"byteOrder\"] = base.config.byteOrder;\n      devkpi[\"readExpression\"] = base.readExpression;\n      devkpi[\"writeExpression\"] = base.writeExpression;\n      devkpi[\"dataItemId\"] = devkpi.id;\n\n      if (devkpi.analysisConfigs == undefined && $scope.protocolObj.accessProtocol == 'flexem') {\n        devkpi[\"analysisConfigs\"] = {};\n        devkpi[\"analysisConfigs\"][\"connectPointId\"] = '';\n        devkpi[\"analysisConfigs\"][\"stationNo\"] = 1;\n        devkpi[\"analysisConfigs\"][\"externalDevId\"] = '';\n      }\n    };\n\n    var gatewayHandler = function gatewayHandler(dev, modelKpis) {\n      resourceUIService.getPhysicalDeviceById(dev.physicalDeviceId, function (phyDev) {\n        if (phyDev.code == 0) {\n          if (phyDev.data) {\n            $scope.access.accessGwId = $scope.gatewayPhysical[phyDev.data.gatewayId];\n          }\n\n          var gatList = [];\n          var accessList = phyDev.data ? phyDev.data.accessConfigs : null;\n          modelKpis.forEach(function (modelkpi) {\n            var devkpi = jQuery.extend(true, {}, modelkpi);\n\n            if (accessList) {\n              accessList.forEach(function (configkpi) {\n                if (devkpi.id == configkpi.kpiId) {\n                  getWayKpiInit(devkpi, configkpi);\n                  return true;\n                }\n              });\n              gatList.push(devkpi);\n            } else {\n              getWayKpiInit(devkpi, {\n                config: {}\n              });\n              gatList.push(devkpi);\n            }\n          });\n          $scope.gatewayDate.data = gatList;\n        }\n      });\n    };\n\n    var pointKpiInit = function pointKpiInit(devkpi, base) {\n      devkpi[\"gatewayId\"] = base.gatewayId;\n      devkpi[\"resourceId\"] = base.resourceId;\n      devkpi[\"sourceId\"] = base.sourceId;\n      devkpi[\"physicalDeviceId\"] = base.physicalDeviceId;\n    };\n\n    var pointHandler = function pointHandler(dev, modelKpis) {\n      resourceUIService.findResourceAccesses(dev.id, function (phyDev) {\n        if (phyDev.code == 0) {\n          var pointData = phyDev.data;\n          var gatList2 = [];\n          modelKpis.forEach(function (modelkpi) {\n            var devkpi = jQuery.extend(true, {}, modelkpi);\n\n            if (pointData) {\n              pointData.forEach(function (configkpi) {\n                if (devkpi.uid == configkpi.kpiId) {\n                  pointKpiInit(devkpi, configkpi);\n                  return true;\n                }\n              });\n              gatList2.push(devkpi);\n            } else {\n              pointKpiInit(devkpi, {\n                config: {}\n              });\n              gatList2.push(devkpi);\n            }\n          });\n          $scope.kpisList.data = gatList2;\n        }\n      });\n    };\n\n    $scope.kpisList = function (dev) {\n      if (jQuery(\"#devicecollapse\").find(\".fa.fa-plus\").length == 0) {\n        jQuery.AdminLTE.boxWidget.collapse(jQuery(\"#devicecollapse\"));\n      }\n\n      $scope.access.accessGwId = \"\";\n      $scope.access.accessProtocol = \"\";\n      dev.accessMode = dev.accessMode ? dev.accessMode : \"gateway\";\n      $scope.access.accessMode = dev.accessMode;\n\n      if (!$scope.rootModelDic[dev.modelId].kpisfinish) {\n        resourceUIService.getKpisByModelId(dev.modelId, function (res) {\n          if (res.code == 0) {\n            $scope.rootModelDic[dev.modelId].kpisfinish = true;\n            $scope.rootModelDic[dev.modelId].kpis = res.data;\n\n            if (dev.accessMode == \"gateway\") {\n              gatewayHandler(dev, $scope.rootModelDic[dev.modelId].kpis);\n            } else if (dev.accessMode == \"point\") {\n              pointHandler(dev, $scope.rootModelDic[dev.modelId].kpis);\n            }\n          }\n        });\n      } else {\n        if (dev.accessMode == \"gateway\") {\n          gatewayHandler(dev, $scope.rootModelDic[dev.modelId].kpis);\n        } else if (dev.accessMode == \"point\") {\n          pointHandler(dev, $scope.rootModelDic[dev.modelId].kpis);\n        }\n      }\n\n      $scope.access.status = \"access\";\n      $scope.optionStatus.selectDevice = dev; //      setTimeout(function() {\n      //        $('.content-wrapper').scrollTop(1000000)\n      //      }, 200);\n    };\n\n    $scope.accessModeChange = function () {\n      var dev = $scope.optionStatus.selectDevice;\n      dev.accessMode = $scope.access.accessMode;\n\n      if (dev.accessMode == \"gateway\") {\n        gatewayHandler(dev, $scope.rootModelDic[dev.modelId].kpis);\n      } else if (dev.accessMode == \"point\") {\n        pointHandler(dev, $scope.rootModelDic[dev.modelId].kpis);\n      }\n    };\n\n    $scope.closeTable = function () {\n      if (jQuery(\"#devicecollapse\").find(\".fa.fa-plus\").length > 0) {\n        jQuery.AdminLTE.boxWidget.collapse(jQuery(\"#devicecollapse\"));\n      }\n\n      $scope.access.status = \"\";\n    };\n\n    $scope.listSaveValue = {\n      \"deviceAddress\": \"\",\n      \"registerType\": \"\",\n      \"startPoint\": \"\",\n      \"length\": \"\",\n      \"byteOrder\": \"\",\n      \"expression\": \"\"\n    }; //更新列表中修改的数据\n\n    var updateData = function updateData(deviceInfo) {\n      for (var j in $scope.facilityList.data) {\n        if ($scope.facilityList.data[j].id == deviceInfo.id) {\n          $scope.facilityList.data[j] = deviceInfo;\n        }\n      }\n\n      $scope.$broadcast(Event.CMDBINFOSINIT + \"_facility\", $scope.facilityList);\n    };\n\n    $scope.saveTable = function () {\n      if ($scope.selectDevice) {\n        if (jQuery(\"#devicecollapse\").find(\".fa.fa-plus\").length > 0) {\n          jQuery.AdminLTE.boxWidget.collapse(jQuery(\"#devicecollapse\"));\n        }\n\n        if ($scope.access.accessMode == 'gateway') {\n          $scope.selectDevice.gatewayId = $scope.access.accessGwId.id;\n          $scope.selectDevice.accessMode = $scope.access.accessMode;\n\n          if ($scope.gatewayDate.data == \"\" || $scope.gatewayDate.data == null || $scope.gatewayDate.data == undefined) {\n            growl.warning(\"当前设备下的模型没测点，请先配置测点……\", {});\n            return;\n          }\n\n          var listAry = []; //获取所有测点配置的网关数据\n\n          var table = $scope.gatewayDate.data;\n\n          for (var i in table) {\n            //初始化kpi的初始数据\n            var ary = {\n              \"kpiId\": \"\",\n              \"kpiName\": \"\",\n              \"readExpression\": \"\",\n              \"writeExpression\": \"\",\n              \"config\": {}\n            };\n            ary.kpiId = table[i].id;\n            ary.kpiName = table[i].label;\n            ary.readExpression = table[i].readExpression;\n            ary.writeExpression = table[i].writeExpression; //配置kpi的配置项\n\n            ary.config[\"byteOrder\"] = table[i].byteOrder;\n            ary.config[\"registerType\"] = table[i].registerType;\n            ary.config[\"startPoint\"] = table[i].startPoint;\n            ary.config[\"length\"] = table[i].length;\n            ary.config[\"deviceAddress\"] = table[i].deviceAddress;\n            listAry.push(ary);\n          }\n\n          if ($scope.selectDevice.gatewayId == undefined) {\n            $scope.selectDevice.gatewayId = 0;\n          } //先把对应的网关跟接入方式保存到设备上\n\n\n          resourceUIService.updateDevice($scope.selectDevice, function (returnObj) {\n            if (returnObj.code == 0) {\n              //根据设备上的物理id物理设备详情\n              resourceUIService.getPhysicalDeviceById(returnObj.data.physicalDeviceId, function (res) {\n                if (res.code == 0 && res.data) {\n                  res.data.gatewayId = $scope.access.accessGwId.id;\n                  res.data.accessConfigs = listAry; //保存物理设备属性\n\n                  resourceUIService.savePhysicalDevice(res.data, function (resData) {\n                    if (resData.code == 0) {\n                      growl.success(\"接入配置保存成功\", {});\n                      $scope.access.status = \"\";\n                      updateData(returnObj.data);\n                    }\n                  });\n                } else {\n                  growl.warning(\"您的物理设备数据有问题，请联系技术人员\", {});\n                }\n              });\n            }\n          });\n        } else if ($scope.access.accessMode == 'point') {\n          if ($scope.kpisList.data == \"\" || $scope.kpisList.data == null || $scope.kpisList.data == undefined) {\n            growl.warning(\"当前设备下的模型没测点，请先配置测点……\", {});\n            return;\n          }\n\n          var table = $scope.kpisList.data;\n          var gatewayList = [];\n\n          for (var j in table) {\n            var list = {\n              \"gatewayId\": \"\",\n              \"resourceId\": \"\",\n              \"physicalDeviceId\": \"\",\n              \"sourceId\": \"\",\n              \"kpiId\": \"\"\n            };\n            list.gatewayId = table[j].gatewayId;\n            list.resourceId = $scope.selectDevice.id;\n            list.physicalDeviceId = table[j].physicalDeviceId;\n            list.sourceId = table[j].sourceId;\n            list.kpiId = table[j].uid;\n            gatewayList.push(list);\n          }\n\n          $scope.selectDevice.accessMode = \"point\"; //先修改设备\n\n          resourceUIService.updateDevice($scope.selectDevice, function (returnObj) {\n            if (returnObj.code == 0) {\n              resourceUIService.addResourceAccesses([gatewayList], function (addData) {\n                if (addData.code == 0) {\n                  growl.success(\"接入配置成功\", {});\n                  $scope.access.status = \"\";\n                  updateData(returnObj.data);\n                }\n              });\n            }\n          });\n        }\n      } else {\n        growl.warning(\"您现在没有设备\", {});\n      }\n    };\n    /**\n     *\n     */\n    //模型Id查属性列表\n\n\n    $scope.currentTab = 'default';\n    $scope.isAttr = true;\n\n    $scope.attrClick = function (tab, isAttr) {\n      $scope.currentTab = tab;\n      $scope.isAttr = isAttr;\n    };\n    /**\n     * 获得客户列表\n     */\n\n\n    $scope.customersList;\n    $scope.customersDic = {};\n\n    var queryCustomer = function queryCustomer() {\n      customerUIService.findCustomersByCondition({}, function (returnObj) {\n        $scope.customersDic = returnObj.customerDic;\n        returnObj.data.forEach(function (item) {\n          item.text = item.customerName;\n        });\n        $scope.customersList = returnObj.data;\n        defers[0].resolve(\"success\");\n      });\n    };\n\n    $scope.modelIdChange = function () {\n      $scope.modelIdAttrs();\n      modelKpi();\n      modelConfig();\n      taskInit();\n      docInit();\n    };\n    /**\n     * 查询项目\n     */\n\n\n    $scope.projectsList;\n    $scope.projectsDic = {};\n\n    $scope.queryProject = function (reflash) {\n      projectUIService.findProjectsByCondition({}, function (returnObj) {\n        if (returnObj.code == 0) {\n          returnObj.data.forEach(function (item) {\n            $scope.projectsDic[item.id] = item;\n            item.text = item.projectName;\n          });\n          $scope.projectsList = returnObj.data;\n          if (reflash) growl.success(\"操作成功！\");else defers[4].resolve(\"success\");\n        }\n      });\n    };\n\n    $scope.getAllgateWays = function (reflash) {\n      //获取所有网关\n      resourceUIService.getAllGateways(function (resultObj) {\n        if (resultObj.code == 0) {\n          var gatewayList = [];\n\n          for (var i in resultObj.data) {\n            gatewayList.push(resultObj.data[i]);\n          }\n\n          $scope.access.allGateways = gatewayList;\n          $scope.access.allGateways.forEach(function (gateway) {\n            $scope.gatewayPhysical[gateway.id] = gateway;\n          });\n          if (reflash) growl.success(\"操作成功！\");else defers[3].resolve(\"success\");\n        }\n      });\n    };\n    /**\n     * 初始化设备管理\n     */\n\n\n    var promises = []; //已加载列表\n\n    var defers = []; //延期列表\n    //等待加载队列：域、网关、项目、客户和模型\n\n    for (var i = 0; i < 5; i++) {\n      defers.push(q.defer());\n    }\n\n    var initList = function initList() {\n      uuid = Math.uuid(); // $scope.getAllModelType(); 没有需求要求从后台取得模版类型\n\n      for (var i in defers) {\n        promises.push(defers[i].promise);\n      } //所有延迟加载完成后操作\n\n\n      q.all(promises).then(function (data) {\n        $scope.goSearch();\n      }); // 查询客户\n\n      queryCustomer(); //初始化项目\n\n      $scope.queryProject(); //初始化所有属性\n\n      if ($scope.menuitems[\"isloaded\"]) {\n        if ($scope.menuitems['A07_S02']) allAttrs(); // 初始化域目录树\n\n        domainTreeQuery();\n      } else {\n        var menuitemsWatch = $scope.$watch(\"menuitems\", function (n) {\n          if ($scope.menuitems[\"isloaded\"]) {\n            if ($scope.menuitems['A07_S02']) allAttrs(); // 初始化域目录树\n\n            domainTreeQuery();\n            menuitemsWatch();\n          }\n        }, true);\n      } // 初始化模型\n\n\n      resourceUIService.getRootModel(function (returnObj) {\n        if (returnObj.code == 0) {\n          resourceUIService.rootModel = returnObj.data;\n          $scope.modelList();\n        }\n      }); //查看设备详情\n\n      $scope.look = function (select) {\n        window.location.href = '#/facility_detail/DETAIL/' + select.gatewayId + '/' + select.id + '';\n      };\n\n      $scope.getAllgateWays();\n      resourceUIService.getAllDataItems(function (returnObj) {\n        if (returnObj.code == 0) {\n          $scope.access[\"allDataItems\"] = returnObj.data;\n        }\n      });\n      getAllCollectionPlugins();\n      getAllResolutionProtocols();\n    };\n\n    var getAddressPoint = function getAddressPoint(inputObj, callbackFun) {\n      inputObj.values.standardAddressdetail = inputObj.values.standardAddressdetail ? inputObj.values.standardAddressdetail : '';\n\n      if (inputObj.values.standardAddress && (!inputObj.values.latitude || !inputObj.values.longitude || inputObj.values.latitude == \"null\" || inputObj.values.longitude == \"null\")) {\n        userLoginUIService.getAddressPoint(inputObj.values.standardAddress.split(\",\").join(\"\") + inputObj.values.standardAddressdetail, function (address) {\n          if (address) {\n            inputObj.values.latitude = address.location.lat;\n            inputObj.values.longitude = address.location.lng;\n          }\n\n          if (callbackFun) {\n            callbackFun(inputObj);\n          }\n        });\n      } else {\n        if (callbackFun) {\n          callbackFun(inputObj);\n        }\n      }\n    };\n    /**\n     * 监听登录状态\n     */\n\n\n    if (!userLoginUIService.user.isAuthenticated) {\n      $scope.$on('loginStatusChanged', function (evt, d) {\n        if (userLoginUIService.user.isAuthenticated) {\n          initList();\n        }\n      });\n    } else {\n      initList();\n    }\n  }]);\n});"],"sourceRoot":"/source/"}