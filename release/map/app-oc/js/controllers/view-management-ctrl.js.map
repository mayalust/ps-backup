{"version":3,"sources":["app-oc/js/controllers/view-management-ctrl.js"],"names":["define","controllers","initController","scope","rootScope","location","routeParams","timeout","userLoginUIService","Info","growl","userEnterpriseService","viewFlexService","window","freeboardservice","freeboardBaseService","dialogue","viewId","decodeURIComponent","isObject","test","designView","data","this","$clone","instance","prototype","click","runAsDefault","addDesignView","href","renderGraphWhile","callback","getManagedViewsByTypeAndRole","event","code","designViews","map","element","currentSelect","find","length","vid","getViewById","clone","input","renderEmpty","editData","layout","setMode","renderLayout","content","$attr","JSON","parse","setting","replaceCiKpi","view","param","mainlabel","label","hideNaviBar","viewTitle","value","runWhenParamFound"],"mappings":"AAAAA,OAAO,CAAC,0BAA2B,SAAU,SAAUC,GACrD,aAEAA,EAAYC,eAAe,iBAAkB,CAAC,SAAU,aAAc,YAAa,eAAgB,WAAY,qBAAsB,OAAQ,QAAS,wBAAyB,kBAAmB,UAAW,mBAAoB,uBAAwB,WAAY,SAAUC,EAAOC,EAAWC,EAAUC,EAAaC,EAASC,EAAoBC,EAAMC,EAAOC,EAAuBC,EAAiBC,EAAQC,EAAkBC,EAAsBC,GACxb,IACIC,EAASC,mBAAmBZ,EAAYW,QAExCE,EAHa,WAGSC,KAAKH,GAG/B,SAASI,EAAWC,GAClBC,KAAKC,OAAOF,GAHdnB,EAAMsB,SAAW,GAQjBJ,EAAWK,UAAUC,MAAQ,WAE3BV,EAASM,KAAKN,OACdW,KAGFzB,EAAM0B,cAAgB,WACpBhB,EAAOR,SAASyB,KAAO,mDAGzB,IAAIC,EAAmB,SAA0BC,GAC/CpB,EAAgBqB,6BAA6B,aAAc,SAAUC,GACnE,GAAIA,EAAMC,OACR/B,EAAUgC,YAAcF,EAAMZ,KAAKe,IAAI,SAAUC,GAE/C,OAAO,IAAIjB,EADCiB,EAAQd,YAGtBrB,EAAMoC,cAAgBnC,EAAUgC,YAAYI,KAAKR,GAE5C7B,EAAMoC,eAC0B,EAA/BnC,EAAUgC,YAAYK,SACxBtC,EAAMoC,cAAgBnC,EAAUgC,YAAY,IAQ5CjC,EAAMoC,eAAe,CACvB,IAAIG,EAAMvC,EAAMoC,cAActB,OAC9BL,EAAgB+B,YAAYD,EAAK,SAAUR,GACzC,IAA6BU,EACvBC,EAaFC,EAAc,WAChBvC,EAAQ,WACNJ,EAAM4C,SAAW,CACfC,OAAQ,IAEV7C,EAAMsB,SAASwB,SAAQ,GACvB9C,EAAMsB,SAASyB,aAAa/C,EAAM4C,SAAU,KAAM5C,MAItD,GAAkB,GAAd+B,EAAMC,KAAW,CACnB,IAAIgB,EAAUjB,EAAMkB,MAAM,gBAE1B,GAAID,EAAS,CACX,IAAIP,EAAQS,KAAKC,MAAMH,GA3BrBN,EAAQ,CACVG,QAFyBJ,EA6BlBA,GA3BOtB,KAAOsB,EAAMtB,KAAOsB,EAAMI,OACxCO,QAASX,EAAMW,gBAEVX,EAAMtB,KACbnB,EAAM4C,SAAW,IAAIjC,EAAiB0C,aAAaX,EAAO,WACxDtC,EAAQ,WACNJ,EAAMsB,SAASwB,SAAQ,GACvB9C,EAAMsB,SAASyB,aAAa/C,EAAM4C,SAAU,KAAM5C,YAsBpD2C,SAGFA,UAQRlB,EAAe,WACjBG,EAAiB,SAAU0B,GACzB,OAAOA,EAAKxC,QAAUA,KActBE,EAVoB,WACtB,IAAIuC,EAAQL,KAAKC,MAAMrC,GACvBd,EAAMwD,UAAYD,EAAME,MACxBzD,EAAM0D,aAAc,EACpB,IAAIC,EAAYJ,EAAMK,MACtBhC,EAAiB,SAAU0B,GACzB,OAAOA,EAAKK,WAAaA,IAK3BE,GAEApC","file":"app-oc/js/controllers/view-management-ctrl.js","sourcesContent":["define(['controllers/controllers', 'Array'], function (controllers) {\n  'use strict';\n\n  controllers.initController('viewmanageCtrl', ['$scope', '$rootScope', '$location', '$routeParams', '$timeout', 'userLoginUIService', 'Info', 'growl', 'userEnterpriseService', 'viewFlexService', \"$window\", \"freeboardservice\", \"freeboardBaseService\", \"dialogue\", function (scope, rootScope, location, routeParams, timeout, userLoginUIService, Info, growl, userEnterpriseService, viewFlexService, window, freeboardservice, freeboardBaseService, dialogue) {\n    var objectLike = /^\\{.*\\}$/;\n    var viewId = decodeURIComponent(routeParams.viewId),\n        allMyViews;\n    var isObject = objectLike.test(viewId);\n    scope.instance = {};\n\n    function designView(data) {\n      this.$clone(data);\n    }\n\n    ;\n\n    designView.prototype.click = function () {\n      // location.path(\"designView/\" + this.viewId)\n      viewId = this.viewId;\n      runAsDefault();\n    };\n\n    scope.addDesignView = function () {\n      window.location.href = \"../app-freeboard/index.html#/editor/view/editor\";\n    };\n\n    var renderGraphWhile = function renderGraphWhile(callback) {\n      viewFlexService.getManagedViewsByTypeAndRole(\"designView\", function (event) {\n        if (event.code) {\n          rootScope.designViews = event.data.map(function (element) {\n            var clone = element.$clone();\n            return new designView(clone);\n          });\n          scope.currentSelect = rootScope.designViews.find(callback);\n\n          if (!scope.currentSelect) {\n            if (rootScope.designViews.length > 0) {\n              scope.currentSelect = rootScope.designViews[0];\n            }\n\n            ;\n          }\n\n          ;\n\n          if (scope.currentSelect) {\n            var vid = scope.currentSelect.viewId;\n            viewFlexService.getViewById(vid, function (event) {\n              var render = function render(clone) {\n                var input = {\n                  layout: clone.data ? clone.data : clone.layout,\n                  setting: clone.setting\n                };\n                delete clone.data;\n                scope.editData = new freeboardservice.replaceCiKpi(input, function () {\n                  timeout(function () {\n                    scope.instance.setMode(true);\n                    scope.instance.renderLayout(scope.editData, null, scope);\n                  });\n                });\n              };\n\n              var renderEmpty = function renderEmpty() {\n                timeout(function () {\n                  scope.editData = {\n                    layout: {}\n                  };\n                  scope.instance.setMode(true);\n                  scope.instance.renderLayout(scope.editData, null, scope);\n                });\n              };\n\n              if (event.code == 0) {\n                var content = event.$attr(\"data/content\");\n\n                if (content) {\n                  var clone = JSON.parse(content);\n                  render(clone);\n                } else {\n                  renderEmpty();\n                }\n              } else {\n                renderEmpty();\n              }\n            });\n          }\n        }\n      });\n    };\n\n    var runAsDefault = function runAsDefault() {\n      renderGraphWhile(function (view) {\n        return view.viewId == viewId;\n      });\n    };\n\n    var runWhenParamFound = function runWhenParamFound() {\n      var param = JSON.parse(viewId);\n      scope.mainlabel = param.label;\n      scope.hideNaviBar = true;\n      var viewTitle = param.value;\n      renderGraphWhile(function (view) {\n        return view.viewTitle == viewTitle;\n      });\n    };\n\n    if (isObject) {\n      runWhenParamFound();\n    } else {\n      runAsDefault();\n    }\n  }]);\n});"],"sourceRoot":"/source/"}