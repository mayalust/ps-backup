{"version":3,"sources":["app-oc/js/controllers/view-cmdb-gateway-ctrl.js"],"names":["define","controllers","BootstrapDialog","initController","$scope","$controller","FileUploader","ngDialog","$q","$location","$routeParams","$timeout","kpiDataService","userLoginUIService","resourceUIService","alertService","SwSocket","Info","viewFlexService","unitService","growl","userDomainService","userEnterpriseService","customerUIService","projectUIService","deviceAccessUIService","configUIService","console","info","activeMainTab","activeListTab","routePathNodes","selectedGateitem","gatewaysAry","domainListTree","domainListDic","querySuppliers","selLength","gatewayactiveDevices","selectUnComfirmedDevice","serviceOrigin","origin","fileFormat","fileMaxSize","toggle","$","click","uploadExcel","config","uploader","formData","push","uploadAll","$on","event","args","response","code","success","exportModel","selList","selectedDevices","devIdStr","i","id","location","href","gatewayId","initstate","onAfterAddingFile","fileItem","queue","length","queueLimit","removeFromQueue","broadcastDevices","get","iconList","qualityIcon","kpiIconList","kpiIcon","$broadcast","Event","CMDBINFOSINIT","data","getDevices","gateway","devices","getDevicesByCondition","returnObj","initGatewayAtts","obj","idx","selected","customerId","projectId","name","externalGwId","accessName","accessPassword","protocolType","protocol","count","icon","Math","random","alertlv","operationStatus","isLoaded","label","onlineStatus","managedStatus","activeTime","newDateJson","Format","GetDateCategoryStrByLabel","expireTime","validTime","choseGateWayTab","values","enterpriseId","productId","updateGateway","item","findUnComfirmedDevice","protocolVersionChange","delGateWay","select","callbackFun","warning","show","title","closable","message","buttons","cssClass","action","dialogRef","deleteGateway","arr","selectedHandler","broadcastGatewayAry","close","gatewayHandler","gateWayId","addModel","ProudSmart","saveVerify","concat","attrLabel","iconClick","type","indexId","thisId","val","attr","selectedDitem","attrs","saveModelSubItem","protocolVersion","accessAddress","domain","baseConfig","customerConfig","check","display","menuitems","projectConfig","domains","enterpriseConfig","test","addGateway","url","replace","addIns","isEdit","newObj","domainPath","domainId","modelId","externalDevId","sn","gatewayDomainPath","createTime","Date","unshift","doActionUn","callback","$apply","from","infoPageManage","escape","deleteUnRecognizedDevice","unComfirmedDevice","splice","doAction","jQuery","trim","savePhysicalDevice","registerDevice","activateDevice","handler","unregisterDevice","deactivateDevice","doActiveHanddler","node","providerDomainPath","flg","historychange","changeManagedStatus","activeDevices","activeDeviceIds","forEach","activeDevice","deactivateDevices","successObj","device","failObj","deactiveDevices","deactiveDeviceIds","deactiveDevice","activateDevices","unregisterDevices","deviceid","getFlexemCloudConfAddr","window","open","isChangeManagedStatus","deactivateGateway","simulated","activateGateway","domainTreeQuery","reflash","extendDomain","queryDomainTree","user","userID","getResourceBaseState","queryDitem","statelabel","state","goSearch","activeGateways","deactiveGateways","gateWayTree","defaultGatewayType","tabHandler","queryenterprise","getGatewayById","domianPath","gatewayEchars","getAllGatewaysByCondition","gatewaysIdAry","gatewaysObj","customersList","customersDic","queryCustomer","defer","findCustomersByCondition","customerDic","text","customerName","resolve","deferList","promise","projectsList","projectsDic","queryProject","findProjectsByCondition","projectName","enterpriseList","enterpriseDic","path","param","layer","getDomainsByFilter","protocols","protocolVersions","collectionTemplateDic","findUnRecognizedDevice","res","noapply","customerDomain","selCustomer","changeDomain","gatesActive","deactiveGateIds","deactiveGate","activateGateways","gate","gatesSimulate","activeGateIds","activeGate","activateSimulatedGateways","gatesDeactive","deactivateGateways","gatesDelete","deactiveGateway","deleteGateways","devicesActive","devicesDeactive","devicesDelete","gatewaryIds","gatewaryDic","gatewary","getRealTimeKpiData","nodeId","value","ciid","toString","kpi","operation","register","uuid","evendata","send","unregister","j","gatewayIds","ECHARTINFOSINIT","optionData","optionObj","resize","init","on","e","target","closest","removeClass","children","addClass","aname","querySupplier","getRootModel","rootModel","getModels","rootModelDic","tree","parentModelId","cmpObj","extend","addNodes","parentNode","modeid","nodes","key","gatewayConfig","getConfigsByGroupName","JSON","parse","gatewayEnterpriseDic","gatewayManufacturer","enterpriseIds","search","selectCount","gatewayModel","productIds","manufacturerId","gatewayModal","getAllCollectionPlugins","protocolDic","collectionTemplates","all","then","gateWayProtocolFilter","gateWayEnterPriseFilter","gateWayProductFilter","productChange","choseGateWayTabHandler","selectedEnterPrise","gatewayEnterpriseChose","enterPrise","index","showProduct","gatewayProductChose","product","closeGateWayModal","applyGateWayConfig","undefined","updateConfig","stringify","saveConfig","isAuthenticated","evt","d"],"mappings":"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","file":"app-oc/js/controllers/view-cmdb-gateway-ctrl.js","sourcesContent":["define(['controllers/controllers', 'bootstrap-dialog'], function (controllers, BootstrapDialog) {\n  'use strict';\n\n  controllers.initController('ViewCmdbGatewayCtrl', ['$scope', '$controller', 'FileUploader', 'ngDialog', '$q', '$location', '$routeParams', '$timeout', 'kpiDataService', 'userLoginUIService', 'resourceUIService', 'alertService', 'SwSocket', 'Info', 'viewFlexService', 'unitService', 'growl', 'userDomainService', 'userEnterpriseService', 'customerUIService', 'projectUIService', 'deviceAccessUIService', 'configUIService', function ($scope, $controller, FileUploader, ngDialog, $q, $location, $routeParams, $timeout, kpiDataService, userLoginUIService, resourceUIService, alertService, SwSocket, Info, viewFlexService, unitService, growl, userDomainService, userEnterpriseService, customerUIService, projectUIService, deviceAccessUIService, configUIService) {\n    console.info(\"切换到网关管理\");\n    $scope.activeMainTab = \"网关视图\";\n    $scope.activeListTab = resourceUIService.activeListTab ? resourceUIService.activeListTab : \"tab1\";\n    $scope.routePathNodes = {};\n    $scope.selectedGateitem = null;\n    $scope.gatewaysAry = [];\n    $scope.domainListTree = [];\n    $scope.domainListDic = {};\n    $scope.querySuppliers = [];\n    $scope.selLength = 10;\n    $scope.gatewayactiveDevices = []; //启用设备\n\n    $scope.selectUnComfirmedDevice;\n    /* 以下是设备模板上传文档的设置 */\n\n    $scope.serviceOrigin = configUIService.origin + '/api/rest/import/resourceUIService/importDevice';\n    $scope.fileFormat = 'xls、xlsx';\n    $scope.fileMaxSize = 10;\n    $controller('AppUploadCtrl', {\n      $scope: $scope,\n      growl: growl,\n      FileUploader: FileUploader\n    });\n\n    $scope.toggle = function toggle() {\n      $('#fileName').click();\n    };\n\n    $scope.uploadExcel = function (config) {\n      $scope.uploader.formData.push({\n        config: 'deviceInfo'\n      });\n      $scope.uploader.uploadAll();\n    };\n\n    $scope.$on(\"uploadTemplate\", function (event, args) {\n      if (args.response.code == 0) {\n        growl.success(\"设备导入成功\", {});\n      }\n    });\n    /**\n     * excel 导出\n     */\n\n    $scope.exportModel = function () {\n      var selList = $scope.selectedDevices;\n      var devIdStr = \"\";\n\n      for (var i in selList) {\n        devIdStr += selList[i].id + \",\";\n      }\n\n      location.href = '' + configUIService.origin + '/api/rest/export/resourceUIService/exportDevice/' + $routeParams.gatewayId + '.xlsx/' + devIdStr + '/deviceInfo/';\n    };\n\n    $scope.uploader.onAfterAddingFile = function (fileItem) {\n      if ($scope.uploader.queue.length > $scope.queueLimit) {\n        $scope.uploader.removeFromQueue(0);\n      }\n\n      $scope.uploadExcel();\n    };\n\n    var initstate = false;\n    var info = Info.get(\"../localdb/icon.json\", function (info) {\n      $scope.iconList = info.qualityIcon;\n      $scope.kpiIconList = info.kpiIcon;\n    });\n\n    var getIcon = function getIcon(random) {\n      var icon;\n\n      switch (true) {\n        default:\n          icon = \"glyphicon glyphicon-hdd\";\n      }\n\n      return icon;\n    };\n\n    var broadcastDevices = function broadcastDevices() {\n      $scope.$broadcast(Event.CMDBINFOSINIT + \"GATEACTIVE\", {\n        data: $scope.gatewayactiveDevices\n      });\n    };\n    /**\n     * 启用设备跟未启用设备合在一起\n     */\n\n\n    var getDevices = function getDevices(gateway) {\n      $scope.gatewayactiveDevices = [];\n\n      if (gateway.devices) {\n        $scope.gatewayactiveDevices = gateway.devices;\n        broadcastDevices();\n      } else {\n        resourceUIService.getDevicesByCondition({\n          gatewayId: gateway.id\n        }, function (returnObj) {\n          if (returnObj.code == 0) {\n            $scope.gatewayactiveDevices = returnObj.data;\n            broadcastDevices();\n          }\n\n          ;\n        });\n      }\n    };\n    /**\n     * 初始化网管上样式数据\n     * obj 网关对象\n     * idx 网关下标\n     */\n\n\n    var initGatewayAtts = function initGatewayAtts(obj, idx) {\n      obj.selected = false; //datatable上使用\n\n      obj.id = obj.id ? obj.id : 0;\n      obj.customerId = obj.customerId ? obj.customerId : null;\n      obj.projectId = obj.projectId ? obj.projectId : null;\n      obj.name = obj.name ? obj.name : \"\";\n      obj.externalGwId = obj.externalGwId ? obj.externalGwId : \"\";\n      obj.accessName = obj.accessName ? obj.accessName : \"\";\n      obj.accessPassword = obj.accessPassword ? obj.accessPassword : \"\";\n      obj.protocolType = obj.protocolType ? obj.protocolType : \"\";\n      obj.protocol = obj.protocol ? obj.protocol : \"\";\n      obj.count = obj.count;\n      obj.icon = getIcon(Math.random());\n      obj.alertlv = obj.operationStatus == 4 ? \"bg-red\" : obj.operationStatus == 3 ? \"bg-orange\" : obj.operationStatus == 2 ? \"bg-yellow\" : \"bg-green\";\n      obj.isLoaded = 0;\n      obj.label = obj.name;\n      obj.onlineStatus = obj.onlineStatus ? obj.onlineStatus : '无数据';\n      obj.managedStatus = obj.managedStatus ? obj.managedStatus : 'deactive';\n      obj.activeTime = obj.activeTime ? newDateJson(obj.activeTime).Format(GetDateCategoryStrByLabel('')) : \"\";\n      obj.expireTime = obj.expireTime ? newDateJson(obj.expireTime).Format(GetDateCategoryStrByLabel('')) : \"\";\n      obj.validTime = \"\";\n\n      if (obj.activeTime && obj.expireTime) {\n        obj.validTime = \"从\" + obj.activeTime + \"到\" + obj.expireTime;\n      }\n\n      if ($scope.choseGateWayTab == 2 && obj.values) {\n        obj.enterpriseId = obj.values.enterpriseId;\n        obj.productId = obj.values.productId;\n      }\n\n      return obj;\n    };\n    /***\n     * 初始化模型数据\n     * @param ciName\n     */\n\n\n    var urmpTree = function urmpTree(ciName) {\n      resourceUIService.getModels(function (returnObj) {\n        if (returnObj.code == 0) {\n          resourceUIService.rootModelDic = {};\n          var tree = returnObj.data;\n\n          for (var i in tree) {\n            var obj = tree[i];\n            obj.text = obj.label;\n            if (!$scope.routePathNodes[obj.parentModelId]) $scope.routePathNodes[obj.parentModelId] = [];\n            $scope.routePathNodes[obj.parentModelId].push(obj);\n            if (!$scope.routePathNodes[obj.id]) $scope.routePathNodes[obj.id] = [];\n            var cmpObj = jQuery.extend(true, {}, obj);\n            resourceUIService.rootModelDic[cmpObj.id] = cmpObj;\n          }\n\n          var addNodes = function addNodes(parentNode) {\n            for (var modeid in $scope.routePathNodes) {\n              if (modeid == parentNode.id) {\n                parentNode.nodes = $scope.routePathNodes[modeid];\n\n                for (var i in parentNode.nodes) {\n                  addNodes(parentNode.nodes[i]);\n                }\n\n                if (parentNode.nodes.length == 0) {\n                  parentNode.nodes = null;\n                }\n              }\n            }\n          };\n\n          var initRoutePath = function initRoutePath(node, arr) {\n            for (var i in node.nodes) {\n              if ($routeParams.modelId == node.nodes[i].id) {\n                arr.push(node);\n                break;\n              } else {\n                initRoutePath(node.nodes[i], arr);\n              }\n            }\n          };\n\n          addNodes(resourceUIService.rootModel);\n\n          for (var key in $scope.routePathNodes) {\n            if (key != resourceUIService.rootModel.id && !resourceUIService.rootModelDic[key]) {\n              for (var i in $scope.routePathNodes[key]) {\n                addNodes($scope.routePathNodes[key][i]);\n                if (!resourceUIService.rootModel.nodes) resourceUIService.rootModel.nodes = [];\n                resourceUIService.rootModel.nodes.push($scope.routePathNodes[key][i]);\n              }\n            }\n          }\n\n          resourceUIService.rootModelDic[resourceUIService.rootModel.id] = resourceUIService.rootModel;\n          $scope.rootModel = resourceUIService.rootModel;\n          $scope.rootModelDic = resourceUIService.rootModelDic;\n        }\n      });\n    };\n    /**\n     * 更新网关上的设备值\n     */\n\n\n    var updateGateway = function updateGateway(data) {\n      for (var i in $scope.selectedGateitem.devices) {\n        if ($scope.selectedGateitem.devices[i].id == data.id) {\n          $scope.selectedGateitem.devices[i] = data;\n          break;\n        }\n      }\n\n      $scope.gatewayactiveDevices = $scope.selectedGateitem.devices;\n    };\n    /**\n     * 网关点击事件\n     * @param item 网关点击对象\n     */\n\n\n    $scope.click = function (item) {\n      if ($scope.activeMainTab == \"网关视图\") {\n        $scope.selectedGateitem = item; //\t\t\t\t\t$scope.selectedGateitem.isVirtual = $scope.selectedGateitem.isVirtual ? 'true' : 'false';\n\n        getDevices($scope.selectedGateitem);\n        findUnComfirmedDevice($scope.selectedGateitem);\n        $scope.protocolVersionChange();\n      }\n    };\n    /**\n     * 网关注销功能\n     */\n\n\n    $scope.delGateWay = function (select, callbackFun) {\n      //增加判断哪一个tab页（设备类型视图，资源域视图，网关视图）\n      if ($scope.activeMainTab == \"网关视图\") {\n        if (select.managedStatus == 'active') {\n          growl.warning(\"启用状态的网关不能注销，请先停用该网关。\", {});\n          return;\n        }\n\n        ; //注销网关\n\n        BootstrapDialog.show({\n          title: '提示',\n          closable: false,\n          message: '确认注销【' + select.name + '】网关吗？',\n          buttons: [{\n            label: '确定',\n            cssClass: 'btn-success',\n            action: function action(dialogRef) {\n              if (select) {\n                resourceUIService.deleteGateway(select.id, function (returnObj) {\n                  if (returnObj.code == 0) {\n                    var arr = [];\n\n                    for (var i in $scope.gatewaysAry) {\n                      if ($scope.gatewaysAry[i].id != select.id) {\n                        arr.push($scope.gatewaysAry[i]);\n                      }\n                    }\n\n                    $scope.gatewaysAry = arr;\n\n                    if (callbackFun) {\n                      callbackFun(select);\n                    }\n\n                    $scope.selectedHandler(\"gateway\", true);\n                    growl.success(\"注销网关成功\", {});\n                    broadcastGatewayAry(arr);\n                  }\n                });\n              }\n\n              dialogRef.close();\n            }\n          }, {\n            label: '取消',\n            action: function action(dialogRef) {\n              dialogRef.close();\n            }\n          }]\n        });\n      }\n    };\n    /**\n     * 网关列表的按钮操作\n     */\n\n\n    $scope.gatewayHandler = function (action, gateWayId) {\n      if (action == \"add\") {\n        location.href = \"#/gatewayInfo/0\";\n      } else if (action == \"update\") {\n        location.href = \"#/gatewayInfo/\" + gateWayId;\n      }\n\n      resourceUIService.activeListTab = \"\";\n    };\n    /**\n     * 新增网关\n     * 老版本的方法\n     */\n\n\n    $scope.addModel = function () {\n      //判断点击的是设备类型的添加按钮、资源域试图的添加按钮、网关试图的添加按钮\n      if ($scope.activeMainTab == \"网关视图\") {\n        var arr = [];\n\n        for (var i in $scope.gatewaysAry) {\n          var obj = $scope.gatewaysAry[i];\n          arr.push(obj);\n\n          if (obj.id == 0) {\n            growl.warning($.ProudSmart.message.saveVerify(\"网关\"), {});\n            return;\n          }\n        }\n\n        $scope.activeListTab = resourceUIService.activeListTab = \"tab1\";\n        $scope.selectedGateitem = initGatewayAtts({}, i);\n        $scope.gatewaysAry = [$scope.selectedGateitem].concat(arr);\n        arr = null; //新增网关，把该网关下面的未启用和启用设备列表清空\n        //$scope.gatewayDevices = [];\n\n        $scope.gatewayactiveDevices = []; //$scope.$broadcast(Event.CMDBINFOSINIT + \"GATE\", {\n        //  data: $scope.gatewayDevices\n        //});\n      }\n    };\n\n    $scope.attrLabel = \"\"; //属性显示名称\n\n    $scope.iconClick = function (type, indexId, thisId) {\n      if ($(\"#label\" + indexId + \"\").val() != \"图标\") {\n        $scope.attrLabel = $(\"#label\" + indexId + \"\").val();\n      }\n\n      if (type == 'icon') {\n        $(\"#label\" + indexId + \"\").val(\"图标\");\n        $(\"#label\" + indexId + \"\").attr(\"disabled\", true);\n        $scope.selectedDitem.attrs[indexId].label = \"图标\";\n      } else {\n        if ($(\"#label\" + indexId + \"\").val() == \"图标\") {\n          $(\"#label\" + indexId + \"\").val($scope.attrLabel);\n        }\n\n        $(\"#label\" + indexId + \"\").attr(\"disabled\", false);\n      }\n    };\n    /**\n     * 网关保存事件\n     */\n\n\n    $scope.saveModelSubItem = function (callbackFun) {\n      //增加三种视图（设备类型，资源域，网关）的判断\n      if ($scope.activeMainTab == \"网关视图\") {\n        if ($scope.choseGateWayTab != 2) {\n          if (!$scope.selectedGateitem.protocol) {\n            growl.warning(\"请选接入协议\", {});\n            return;\n          }\n\n          if (!$scope.selectedGateitem.protocolVersion) {\n            growl.warning(\"请选接入版本\", {});\n            return;\n          }\n        } else {\n          if (!$scope.selectedGateitem.enterpriseId) {\n            growl.warning(\"请选接入厂商\", {});\n            return;\n          } else {\n            if (!$scope.selectedGateitem.values) $scope.selectedGateitem.values = {};\n            $scope.selectedGateitem.values.enterpriseId = $scope.selectedGateitem.enterpriseId;\n          }\n\n          if (!$scope.selectedGateitem.productId) {\n            growl.warning(\"请选接入网关\", {});\n            return;\n          } else {\n            if (!$scope.selectedGateitem.values) $scope.selectedGateitem.values = {};\n            $scope.selectedGateitem.values.productId = $scope.selectedGateitem.productId;\n          }\n        }\n\n        if ($scope.selectedGateitem.protocol == 'flexem') {\n          if (!$scope.selectedGateitem.accessAddress) {\n            growl.warning(\"请输入接入地址\", {});\n            return;\n          }\n\n          if (!$scope.selectedGateitem.accessPassword) {\n            growl.warning(\"请输入网关密码\", {});\n            return;\n          }\n        }\n\n        if (!$scope.selectedGateitem.domain) {\n          growl.warning(\"请选择管理域\", {});\n          return;\n        }\n\n        if (!$scope.selectedGateitem.customerId && $scope.baseConfig.customerConfig.check && $scope.baseConfig.customerConfig.display) {\n          growl.warning(\"请选择\" + ($scope.menuitems[\"S12\"] && $scope.menuitems[\"S12\"].label ? $scope.menuitems[\"S12\"].label : \"客户\") + \"名称\", {});\n          return;\n        }\n\n        if (!$scope.selectedGateitem.projectId && $scope.baseConfig.projectConfig.check && $scope.baseConfig.projectConfig.display) {\n          growl.warning(\"请选择\" + ($scope.menuitems[\"S13\"] && $scope.menuitems[\"S13\"].label ? $scope.menuitems[\"S13\"].label : \"项目\") + \"名称\", {});\n          return;\n        }\n\n        if (!$scope.selectedGateitem.domains && $scope.baseConfig.enterpriseConfig && $scope.baseConfig.enterpriseConfig.check) {\n          growl.warning(\"请选择企业名称\", {});\n          return;\n        }\n\n        var regExp = /^[\\u4e00-\\u9fa5_a-zA-Z0-9][\\u4e00-\\u9fa5_a-zA-Z0-9._:-]{1,32}$/;\n        var regExp1 = /^[\\u4e00-\\u9fa5_a-zA-Z][\\u4e00-\\u9fa5_a-zA-Z0-9._-]{1,32}$/;\n\n        if ($scope.selectedGateitem.externalGwId || $scope.selectedGateitem.name) {\n          /* if (!regExp.test($scope.selectedGateitem.externalGwId)) {\n             growl.warning(\"网关标识输入格式不正确，请重新输入\", {});\n             return;\n           }*/\n          if (!regExp1.test($scope.selectedGateitem.name)) {\n            growl.warning(\"网关名称输入格式不正确，请重新输入\", {});\n            return;\n          }\n        }\n\n        if (!$scope.selectedGateitem.externalGwId) {\n          growl.warning(\"请输入网关标识\", {});\n          return;\n        }\n\n        if (!$scope.selectedGateitem.name) {\n          growl.warning(\"请输入网关名称\", {});\n          return;\n        }\n\n        if ($scope.selectedGateitem.id == 0) {\n          for (var i in $scope.gatewaysAry) {\n            if ($scope.gatewaysAry[i].id != 0 && $scope.gatewaysAry[i].externalGwId == $scope.selectedGateitem.externalGwId) {\n              growl.warning(\"网关标识已经存在\", {});\n              return;\n            }\n          }\n        }\n\n        var saveGateway = function saveGateway() {\n          if ($scope.selectedGateitem.id == 0) {\n            resourceUIService.addGateway($scope.selectedGateitem, function (returnObj) {\n              if (returnObj.code == 0) {\n                if (returnObj.data) {\n                  $scope.selectedGateitem = initGatewayAtts(returnObj.data);\n                }\n\n                if (callbackFun) {\n                  callbackFun(true);\n                } else {\n                  growl.success(\"添加网关成功\", {});\n                  $location.url(\"/gatewayInfo/\" + $scope.selectedGateitem.id);\n                  $location.replace();\n                }\n              }\n            });\n          } else {\n            resourceUIService.updateGateway($scope.selectedGateitem, function (returnObj) {\n              if (returnObj.code == 0) {\n                if (returnObj.data) {\n                  $scope.selectedGateitem = initGatewayAtts(returnObj.data);\n                }\n\n                if (callbackFun) {\n                  callbackFun();\n                } else {\n                  growl.success(\"更新网关成功\", {});\n                }\n              }\n            });\n          }\n        };\n\n        saveGateway();\n      }\n    };\n    /**\n     * 给网关添加一个未启用设备，等同于网关自动发现（现在直接在已启用设备里面直接添加）\n     */\n\n\n    $scope.addIns = function () {\n      var item = $scope.selectedGateitem;\n\n      if (item) {\n        if (item.id == 0) {\n          growl.warning(\"当前网关没有保存，请先保存网关\", {});\n          return;\n        }\n\n        for (var i in $scope.gatewayactiveDevices) {\n          var obj = $scope.gatewayactiveDevices[i];\n\n          if (obj.id == 0) {\n            growl.warning(\"当前有未添加到网关设备，请点击保存按钮\", {});\n            return;\n          }\n\n          if (obj.isEdit == 4) {\n            growl.warning(\"当前有在编辑的网关设备，请点击保存按钮\", {});\n            return;\n          }\n        }\n\n        var newObj = {\n          gatewayId: item.id,\n          label: '注册设备' + $scope.gatewayactiveDevices.length,\n          id: 0,\n          domainPath: '',\n          domainId: '',\n          modelId: '',\n          externalDevId: '',\n          managedStatus: 'deactive',\n          onlineStatus: 'offline',\n          operationStatus: 0,\n          sn: '',\n          gatewayDomainPath: item.domain,\n          isEdit: 2,\n          selected: false,\n          createTime: new Date()\n        };\n        $scope.gatewayactiveDevices.unshift(newObj);\n        $scope.$broadcast(Event.CMDBINFOSINIT + \"GATEACTIVE\", {\n          data: $scope.gatewayactiveDevices\n        });\n      } else {\n        growl.warning(\"请先添加一个网关\", {});\n      }\n    };\n    /**\n     *新发现设备  datatable操作事件\n     * @param type\n     * @param select\n     * @param callback\n     */\n\n\n    $scope.doActionUn = function (type, select, callback) {\n      if (type == 'select') {\n        $scope.selectUnComfirmedDevice = select;\n        $scope.$apply();\n      } else if (type == 'save') {\n        $scope.selectUnComfirmedDevice = select;\n        resourceUIService.selectUnComfirmedDevice = select; //存放到resourceUIservice上，全局使用\n\n        resourceUIService.selectUnComfirmedDevice.from = \"unReco\";\n        $scope.infoPageManage('UNDEVICE');\n      } else if (type == 'delete') {\n        BootstrapDialog.show({\n          title: '提示',\n          closable: false,\n          //size:BootstrapDialog.SIZE_WIDE,\n          message: '确认从 ' + escape($scope.selectedGateitem.name) + ' 网关删除未识别设备吗？',\n          buttons: [{\n            label: '确定',\n            cssClass: 'btn-success',\n            action: function action(dialogRef) {\n              resourceUIService.deleteUnRecognizedDevice(select.id, function (returnObj) {\n                if (returnObj.code == 0) {\n                  for (var i in $scope.unComfirmedDevice) {\n                    if ($scope.unComfirmedDevice[i].id == select.id) {\n                      $scope.unComfirmedDevice.splice(i, 1);\n                      break;\n                    }\n                  }\n\n                  if (callback) callback(true);\n                  growl.success(\"注销成功\", {});\n                }\n              });\n              dialogRef.close();\n            }\n          }, {\n            label: '取消',\n            action: function action(dialogRef) {\n              dialogRef.close();\n            }\n          }]\n        });\n      }\n    };\n    /**\n     * datatables内部操作处理\n     * @param {Object} type\n     * @param {Object} select\n     */\n\n\n    $scope.doAction = function (type, select, callback) {\n      //增加三种视图（设备类型，资源域，网关）显示页的判断\n      if ($scope.activeMainTab == \"网关视图\") {\n        if (type == 'gateSave') {\n          if (!jQuery.trim(select.label)) {\n            growl.warning(\"名称不能为空\", {});\n            return;\n          }\n\n          if (!jQuery.trim(select.externalDevId)) {\n            growl.warning(\"设备地址不能为空\", {});\n            return;\n          }\n\n          if (!jQuery.trim(select.sn)) {\n            growl.warning(\"序列号不能为空\", {});\n            return;\n          }\n\n          if (!jQuery.trim(select.modelId) || select.modelId == 0) {\n            growl.warning(\"设备模板不能为空\", {});\n            return;\n          }\n\n          if (select.id > 0) {\n            resourceUIService.savePhysicalDevice(select, function (returnObj) {\n              if (returnObj.code == 0) {\n                updateGateway(returnObj.data);\n                callback(returnObj.data);\n                growl.success(\"保存成功\", {});\n              } else {\n                callback(false);\n              }\n            });\n          } else {\n            for (var i in $scope.gatewayactiveDevices) {\n              if ($scope.gatewayactiveDevices[i].id != 0 && select.externalDevId == $scope.gatewayactiveDevices[i].externalDevId) {\n                growl.warning(\"设备地址不能重复\", {});\n                return;\n              }\n            }\n\n            resourceUIService.registerDevice($scope.selectedGateitem.id, select, function (returnObj) {\n              if (returnObj.code == 0) {\n                $scope.selectedGateitem.count++;\n                updateGateway(returnObj.data);\n                callback(returnObj.data);\n                growl.success(\"注册成功\", {});\n              } else {\n                callback(false);\n              }\n            });\n          }\n        } else if (type == 'deviceEdit') {\n          location.href = \"#/facility/DEVICE/\" + $scope.selectedGateitem.id + \"/\" + select.id;\n        } else if (type == 'deviceActive') {\n          if ($scope.selectedGateitem.managedStatus != 'active') {\n            growl.warning(\"网关不是启用状态，无法启用设备!\", {});\n            return;\n          }\n\n          if (!jQuery.trim(select.label)) {\n            growl.warning(\"名称不能为空\", {});\n            return;\n          }\n\n          if (!jQuery.trim(select.modelId) || select.modelId == 0) {\n            growl.warning(\"设备模板不能为空\", {});\n            return;\n          }\n\n          BootstrapDialog.show({\n            title: '提示',\n            closable: false,\n            //size:BootstrapDialog.SIZE_WIDE,\n            message: '确认从 ' + escape($scope.selectedGateitem.name) + ' 网关启用 ' + escape(select.label) + ' 设备吗？',\n            buttons: [{\n              label: '确定',\n              cssClass: 'btn-success',\n              action: function action(dialogRef) {\n                resourceUIService.activateDevice(select.id, function (returnObj) {\n                  if (returnObj.code == 0) {\n                    for (var i in $scope.gatewayactiveDevices) {\n                      if ($scope.gatewayactiveDevices[i].id == select.id) {\n                        $scope.gatewayactiveDevices[i].managedStatus = select.managedStatus;\n                        break;\n                      }\n                    }\n\n                    if (callback) callback(true);\n                    $scope.selectedHandler(\"device\", true);\n                    growl.success(\"启用成功\", {});\n                  }\n                });\n                dialogRef.close();\n              }\n            }, {\n              label: '取消',\n              action: function action(dialogRef) {\n                dialogRef.close();\n              }\n            }]\n          });\n        } else if (type == 'deviceDel') {\n          if (select.id <= 0) {\n            for (var i in $scope.gatewayactiveDevices) {\n              if ($scope.gatewayactiveDevices[i].id == select.id) {\n                $scope.gatewayactiveDevices.splice(i, 1);\n                callback(true);\n                break;\n              }\n            }\n          } else {\n            //增加注销确认步骤\n            BootstrapDialog.show({\n              title: '提示',\n              closable: false,\n              message: '确认从 ' + escape($scope.selectedGateitem.name) + ' 网关注销 ' + escape(select.label) + ' 设备吗？',\n              buttons: [{\n                label: '确定',\n                cssClass: 'btn-success',\n                action: function action(dialogRef) {\n                  var handler = function handler() {\n                    for (var i in $scope.gatewayactiveDevices) {\n                      if ($scope.gatewayactiveDevices[i].id == select.id) {\n                        $scope.gatewayactiveDevices.splice(i, 1);\n                        break;\n                      }\n                    }\n\n                    if (callback) callback(true);\n                    $scope.selectedHandler(\"device\", true);\n                    growl.success(\"注销成功\", {});\n                  };\n\n                  if (select.id != 0) {\n                    resourceUIService.unregisterDevice($scope.selectedGateitem.id, select.id, function (returnObj) {\n                      if (returnObj.code == 0) {\n                        handler();\n                      }\n                    });\n                  } else {\n                    handler();\n                  }\n\n                  dialogRef.close();\n                }\n              }, {\n                label: '取消',\n                action: function action(dialogRef) {\n                  dialogRef.close();\n                }\n              }]\n            });\n          }\n        } else if (type == 'deviceDeActive') {\n          BootstrapDialog.show({\n            title: '提示',\n            closable: false,\n            //size:BootstrapDialog.SIZE_WIDE,\n            message: '确认从 ' + escape($scope.selectedGateitem.name) + ' 网关停用 ' + escape(select.label) + ' 设备吗？',\n            buttons: [{\n              label: '确定',\n              cssClass: 'btn-success',\n              action: function action(dialogRef) {\n                resourceUIService.deactivateDevice(select.id, function (returnObj) {\n                  if (returnObj.code == 0) {\n                    for (var i in $scope.gatewayactiveDevices) {\n                      if ($scope.gatewayactiveDevices[i].id == select.id) {\n                        $scope.gatewayactiveDevices[i].managedStatus = select.managedStatus;\n                        break;\n                      }\n                    }\n\n                    if (callback) callback(true);\n                    $scope.selectedHandler(\"device\", true);\n                    growl.success(\"停用成功\", {});\n                  }\n                });\n                dialogRef.close();\n              }\n            }, {\n              label: '取消',\n              action: function action(dialogRef) {\n                dialogRef.close();\n              }\n            }]\n          });\n        }\n      }\n    };\n    /**\n     * 未启用设备启用事件\n     * @param select\n     * @param callback\n     * @param node\n     */\n\n\n    $scope.doActiveHanddler = function (select, callback, node) {\n      if ($scope.selectedGateitem.managedStatus != 'active') {\n        growl.warning(\"网关不是启用状态，无法启用设备!\", {});\n        return;\n      }\n\n      select.providerDomainPath = $scope.querySuppliers != null && $scope.querySuppliers.length > 0 ? $scope.querySuppliers[0].domainPath : \"\";\n      resourceUIService.activateDevice(select, function (returnObj) {\n        if (returnObj.code == 0) {\n          if (node) {\n            callback(true, node);\n          } else {\n            callback(true);\n            growl.success(\"启用成功\", {});\n            updateGateway(returnObj.data);\n          }\n        }\n      });\n    };\n\n    $scope.infoPageManage = function (flg) {\n      var handler = function handler(historychange) {\n        $scope.changeManagedStatus($scope.selectedGateitem, function (returnObj) {\n          $scope.selectedGateitem = returnObj;\n          if (historychange) $location.url(\"/gatewayInfo/\" + $scope.selectedGateitem.id);\n          $location.replace();\n        });\n      };\n\n      if (flg == '网关启用') {\n        $scope.saveModelSubItem(function (historychange) {\n          handler(historychange);\n        });\n      } else if (flg == '网关停用') {\n        handler();\n      } else if (flg == '设备停用') {\n        BootstrapDialog.show({\n          title: '提示',\n          closable: false,\n          message: '当前有 ' + $scope.activeDevices.length + ' 个设备启用状态，确认要停用吗？',\n          buttons: [{\n            label: '确定',\n            cssClass: 'btn-success',\n            action: function action(dialogRef) {\n              var activeDeviceIds = [];\n              $scope.activeDevices.forEach(function (activeDevice) {\n                activeDeviceIds.push(activeDevice.id);\n              });\n              resourceUIService.deactivateDevices(activeDeviceIds, function (returnObj) {\n                if (returnObj.code == 0) {\n                  for (var i in $scope.gatewayactiveDevices) {\n                    returnObj.data.successObj.forEach(function (device) {\n                      if ($scope.gatewayactiveDevices[i].id == device.id) {\n                        $scope.gatewayactiveDevices[i].managedStatus = device.managedStatus;\n                        return true;\n                      }\n                    });\n                    $scope.gatewayactiveDevices[i].selected = false;\n                  }\n\n                  $scope.selectedHandler(\"device\", true);\n                  broadcastDevices($scope.gatewayactiveDevices);\n                  growl.success(\"停用成功\" + returnObj.data.successObj.length + \"个设备,失败\" + returnObj.data.failObj.length + \"个设备\", {});\n                }\n              });\n              dialogRef.close();\n            }\n          }, {\n            label: '取消',\n            action: function action(dialogRef) {\n              dialogRef.close();\n            }\n          }]\n        });\n      } else if (flg == '设备启用') {\n        if ($scope.selectedGateitem.managedStatus != 'active') {\n          growl.warning(\"网关不是启用状态，无法启用设备!\", {});\n          return;\n        }\n\n        BootstrapDialog.show({\n          title: '提示',\n          closable: false,\n          message: '当前有 ' + $scope.deactiveDevices.length + ' 个设备未启用状态，确认要启用吗？',\n          buttons: [{\n            label: '确定',\n            cssClass: 'btn-success',\n            action: function action(dialogRef) {\n              var deactiveDeviceIds = [];\n              $scope.deactiveDevices.forEach(function (deactiveDevice) {\n                deactiveDeviceIds.push(deactiveDevice.id);\n              });\n              resourceUIService.activateDevices(deactiveDeviceIds, function (returnObj) {\n                if (returnObj.code == 0) {\n                  for (var i in $scope.gatewayactiveDevices) {\n                    returnObj.data.successObj.forEach(function (device) {\n                      if ($scope.gatewayactiveDevices[i].id == device.id) {\n                        $scope.gatewayactiveDevices[i].managedStatus = device.managedStatus;\n                        return true;\n                      }\n                    });\n                    $scope.gatewayactiveDevices[i].selected = false;\n                  }\n\n                  $scope.selectedHandler(\"device\", true);\n                  broadcastDevices($scope.gatewayactiveDevices);\n                  growl.success(\"启用成功\" + returnObj.data.successObj.length + \"个设备,失败\" + returnObj.data.failObj.length + \"个设备\", {});\n                }\n              });\n              dialogRef.close();\n            }\n          }, {\n            label: '取消',\n            action: function action(dialogRef) {\n              dialogRef.close();\n            }\n          }]\n        });\n      } else if (flg == '设备注销') {\n        BootstrapDialog.show({\n          title: '提示',\n          closable: false,\n          message: '当前有 ' + $scope.deactiveDevices.length + ' 个设备未启用状态，确认要注销吗？',\n          buttons: [{\n            label: '确定',\n            cssClass: 'btn-success',\n            action: function action(dialogRef) {\n              var deactiveDeviceIds = [];\n              $scope.deactiveDevices.forEach(function (deactiveDevice) {\n                deactiveDeviceIds.push(deactiveDevice.id);\n              });\n              resourceUIService.unregisterDevices($scope.selectedGateitem.id, deactiveDeviceIds, function (returnObj) {\n                if (returnObj.code == 0) {\n                  returnObj.data.successObj.forEach(function (deviceid) {\n                    for (var i in $scope.gatewayactiveDevices) {\n                      if ($scope.gatewayactiveDevices[i].id == deviceid) {\n                        $scope.gatewayactiveDevices.splice(i, 1);\n                        break;\n                      }\n\n                      $scope.gatewayactiveDevices[i].selected = false;\n                    }\n                  });\n                  $scope.selectedHandler(\"device\", true);\n                  broadcastDevices($scope.gatewayactiveDevices);\n                  growl.success(\"注销成功\" + returnObj.data.successObj.length + \"个设备,失败\" + returnObj.data.failObj.length + \"个设备\", {});\n                }\n              });\n              dialogRef.close();\n            }\n          }, {\n            label: '取消',\n            action: function action(dialogRef) {\n              dialogRef.close();\n            }\n          }]\n        });\n      } else if (flg == 'DEVICE') {\n        location.href = \"#/facility/DEVICE/\" + $scope.selectedGateitem.id + \"/0\";\n      } else if (flg == 'UNDEVICE') {\n        location.href = \"#/facility/UNDEVICE/\" + $scope.selectedGateitem.id + \"/\" + $scope.selectUnComfirmedDevice.id;\n      } else if (flg == 'FBOX') {\n        deviceAccessUIService.getFlexemCloudConfAddr($scope.selectedGateitem.externalGwId, location.href, function (returnObj) {\n          if (returnObj.code == 0) {\n            window.open(returnObj.data);\n          }\n        });\n      }\n    };\n    /**\n     * 启用、停用网关事件\n     */\n\n\n    $scope.changeManagedStatus = function (selectedGateitem, callbackFun) {\n      if (selectedGateitem.managedStatus == 'active') {\n        BootstrapDialog.show({\n          title: '提示',\n          closable: false,\n          //size:BootstrapDialog.SIZE_WIDE,\n          message: '停用网关的操作会使该网关下所有的设备一并停用，请确认要停用 ' + escape(selectedGateitem.name) + ' 网关吗？',\n          buttons: [{\n            label: '确定',\n            cssClass: 'btn-success',\n            action: function action(dialogRef) {\n              isChangeManagedStatus = true;\n              resourceUIService.deactivateGateway(selectedGateitem.id, function (returnObj) {\n                if (returnObj.code == 0) {\n                  var obj = initGatewayAtts(returnObj.data);\n\n                  for (var i in $scope.gatewaysAry) {\n                    if ($scope.gatewaysAry[i].id == obj.id) {\n                      $scope.gatewaysAry[i].managedStatus = obj.managedStatus;\n                      $scope.gatewaysAry[i].simulated = false;\n                      break;\n                    }\n                  }\n\n                  for (var i in selectedGateitem.devices) {\n                    selectedGateitem.devices[i].managedStatus = \"deactive\";\n                  }\n\n                  if (callbackFun) callbackFun(obj);\n                  $scope.selectedHandler(\"gateway\", true);\n                  growl.success(\"停用成功\", {});\n                }\n\n                isChangeManagedStatus = false;\n              });\n              dialogRef.close();\n            }\n          }, {\n            label: '取消',\n            action: function action(dialogRef) {\n              dialogRef.close();\n            }\n          }]\n        });\n      } else {\n        BootstrapDialog.show({\n          title: '提示',\n          closable: false,\n          //size:BootstrapDialog.SIZE_WIDE,\n          message: '确认启用 ' + escape(selectedGateitem.name) + ' 网关吗？',\n          buttons: [{\n            label: '确定',\n            cssClass: 'btn-success',\n            action: function action(dialogRef) {\n              isChangeManagedStatus = true;\n              resourceUIService.activateGateway(selectedGateitem.id, function (returnObj) {\n                if (returnObj.code == 0) {\n                  var obj = initGatewayAtts(returnObj.data);\n\n                  for (var i in $scope.gatewaysAry) {\n                    if ($scope.gatewaysAry[i].id == obj.id) {\n                      $scope.gatewaysAry[i].managedStatus = obj.managedStatus;\n                      $scope.gatewaysAry[i].simulated = false;\n                      break;\n                    }\n                  }\n\n                  if (callbackFun) callbackFun(obj);\n                  $scope.selectedHandler(\"gateway\", true);\n                  growl.success(\"启用成功\", {});\n                }\n\n                isChangeManagedStatus = false;\n              });\n              dialogRef.close();\n            }\n          }, {\n            label: '取消',\n            action: function action(dialogRef) {\n              dialogRef.close();\n            }\n          }]\n        });\n      }\n    };\n    /**\n     * 获得所有域\n     */\n\n\n    $scope.domainTreeQuery = function (reflash) {\n      var handler = function handler(data) {\n        $scope.domainListDic = data.domainListDic;\n        $scope.domainListTree = data.domainListTree;\n        if (reflash) growl.success(\"操作成功！\");\n      };\n\n      if ($scope.baseConfig && $scope.baseConfig.extendDomain && false) {\n        //网关不使用\n        resourceUIService.getExtendDomainsByFilter({}, handler);\n      } else {\n        userDomainService.queryDomainTree(userLoginUIService.user.userID, handler);\n      }\n    };\n\n    var isChangeManagedStatus = false;\n\n    var broadcastGatewayAry = function broadcastGatewayAry(gatewaysAry) {\n      getResourceBaseState(gatewaysAry, function () {\n        if (isChangeManagedStatus) return; //状态切换时不发送消息\n\n        $scope.$broadcast(Event.CMDBINFOSINIT + \"GATES\", {\n          data: gatewaysAry\n        });\n      });\n    };\n    /**\n     * 查询所有网关并且初始化设备数据\n     *\n     */\n\n\n    $scope.queryDitem = {\n      statelabel: \"\",\n      //查询条件显示\n      state: 0,\n      //查询条件\n      name: null,\n      customerId: null,\n      projectId: null,\n      domain: null,\n      managedStatus: null,\n      externalGwId: null\n    };\n    /**\n     * 查询网关 \n     */\n\n    $scope.goSearch = function () {\n      $scope.activeGateways = [];\n      $scope.deactiveGateways = [];\n      $scope.queryDitem.name = $scope.queryDitem.state == 0 ? $scope.queryDitem.name : null;\n      $scope.queryDitem.externalGwId = $scope.queryDitem.state == 1 ? $scope.queryDitem.externalGwId : null;\n      $scope.queryDitem.customerId = $scope.queryDitem.state == 2 ? $scope.queryDitem.customerId : null;\n      $scope.queryDitem.projectId = $scope.queryDitem.state == 3 ? $scope.queryDitem.projectId : null;\n      $scope.queryDitem.managedStatus = $scope.queryDitem.state == 4 ? $scope.queryDitem.managedStatus : null;\n      $scope.queryDitem.domain = $scope.queryDitem.state == 5 ? $scope.queryDitem.domain : null;\n      gateWayTree();\n    };\n\n    var gateWayTree = function gateWayTree() {\n      if ($routeParams.gatewayId) {\n        if ($routeParams.gatewayId == 0) {\n          $scope.selectedGateitem = initGatewayAtts($scope.defaultGatewayType);\n          tabHandler();\n          $scope.queryenterprise({\n            'data': ''\n          });\n        } else {\n          resourceUIService.getGatewayById($routeParams.gatewayId, function (returnObj) {\n            if (returnObj.code == 0) {\n              $scope.queryenterprise({\n                'data': returnObj.data.domianPath\n              });\n              $scope.selectedGateitem = initGatewayAtts(returnObj.data);\n\n              if ($scope.activeListTab == 'gateway2') {\n                gatewayEchars();\n              } else {\n                tabHandler();\n              }\n            }\n          });\n        }\n      } else {\n        resourceUIService.getAllGatewaysByCondition($scope.queryDitem, function (returnObj) {\n          $scope.gatewaysAry = [];\n          $scope.gatewaysIdAry = []; //存储所有网关的id，便于批量查询\n\n          $scope.gatewaysObj = {}; //根据网关id创建一个对象，主要用来存储网关上的设备\n\n          if (returnObj.code == 0) {\n            for (var i in returnObj.data) {\n              $scope.gatewaysAry.push(initGatewayAtts(returnObj.data[i], i));\n              $scope.gatewaysIdAry.push(returnObj.data[i].id);\n              returnObj.data[i][\"devices\"] = [];\n              $scope.gatewaysObj[returnObj.data[i].id] = returnObj.data[i];\n            }\n\n            broadcastGatewayAry($scope.gatewaysAry);\n            $scope.activeListTab = 'tab1'; //网关初始化默认显示网关信息\n\n            tabHandler();\n          }\n        });\n      }\n    };\n    /**\n     * 获得供应商\n     */\n\n\n    var querySupplier = function querySupplier() {\n      userEnterpriseService.querySupplier(function (returnObj) {\n        if (returnObj.code == 0) {\n          $scope.querySuppliers = returnObj.data;\n        }\n      });\n    };\n    /**\n     * 获得客户列表\n     */\n\n\n    $scope.customersList;\n    $scope.customersDic = {};\n\n    $scope.queryCustomer = function (reflash) {\n      var defer = $q.defer();\n      customerUIService.findCustomersByCondition({}, function (returnObj) {\n        $scope.customersDic = returnObj.customerDic;\n        returnObj.data.forEach(function (item) {\n          item.text = item.customerName;\n        });\n        $scope.customersList = returnObj.data;\n        defer.resolve(\"success\");\n        if (reflash) growl.success(\"操作成功！\");\n      });\n      deferList.push(defer.promise);\n    };\n    /**\n     * 查询项目\n     */\n\n\n    $scope.projectsList;\n    $scope.projectsDic = {};\n\n    $scope.queryProject = function (reflash) {\n      var defer = $q.defer();\n      projectUIService.findProjectsByCondition({}, function (returnObj) {\n        if (returnObj.code == 0) {\n          returnObj.data.forEach(function (item) {\n            $scope.projectsDic[item.id] = item;\n            item.text = item.projectName;\n          });\n          $scope.projectsList = returnObj.data;\n          defer.resolve(\"success\");\n          if (reflash) growl.success(\"操作成功！\");\n        }\n      });\n      deferList.push(defer.promise);\n    };\n    /**\n     * 查询企业\n     */\n\n\n    $scope.enterpriseList;\n    $scope.enterpriseDic = {};\n\n    $scope.queryenterprise = function (path) {\n      if (!$scope.menuitems['S34']) {\n        return;\n      }\n\n      var param = {\n        \"domainPath\": path.data,\n        \"modelId\": 303,\n        \"layer\": 2\n      };\n      resourceUIService.getDomainsByFilter(param, function (returnObj) {\n        if (returnObj.code == 0) {\n          returnObj.data.forEach(function (item) {\n            $scope.enterpriseDic[item.id] = item;\n            item.text = item.label;\n          });\n          $scope.enterpriseList = returnObj.data;\n        }\n      });\n    };\n\n    $scope.protocols = [];\n    $scope.protocolVersions = [];\n    $scope.collectionTemplateDic = [];\n    /**\n     * 获得所有的协议\n     */\n\n    var getAllCollectionPlugins = function getAllCollectionPlugins(callbackFun) {\n      resourceUIService.getAllCollectionPlugins(function (returnObj) {\n        var protocolDic = {};\n\n        if (returnObj.code == 0) {\n          returnObj.data.forEach(function (item) {\n            if (!protocolDic[item.protocol]) {\n              protocolDic[item.protocol] = item;\n              $scope.protocols.push(item);\n            }\n\n            $scope.collectionTemplateDic[item.protocol + item.protocolVersion] = item.collectionTemplates;\n          });\n          $scope.protocolVersions = returnObj.data;\n        }\n\n        if (callbackFun) callbackFun();\n      });\n    };\n\n    $scope.unComfirmedDevice = \"\";\n\n    var findUnComfirmedDevice = function findUnComfirmedDevice(selectedGateitem) {\n      resourceUIService.findUnRecognizedDevice(selectedGateitem.id, function (res) {\n        if (res.code == \"0\") {\n          $scope.unComfirmedDevice = res.data;\n          $scope.$broadcast(Event.CMDBINFOSINIT + \"not\", {\n            data: res.data\n          });\n        }\n      });\n    };\n    /**\n     * 多选的数据处理\n     */\n\n\n    $scope.activeGateways = [];\n    $scope.deactiveGateways = [];\n    $scope.activeDevices = [];\n    $scope.deactiveDevices = [];\n    $scope.selectedDevices = [];\n\n    $scope.selectedHandler = function (flg, noapply) {\n      if (flg == \"gateway\") {\n        var activeGateways = [];\n        var deactiveGateways = [];\n        $scope.gatewaysAry.forEach(function (gateway) {\n          if (gateway.selected) {\n            if (gateway.managedStatus == \"active\") {\n              activeGateways.push(gateway);\n            } else {\n              deactiveGateways.push(gateway);\n            }\n          }\n        });\n        $scope.activeGateways = activeGateways;\n        $scope.deactiveGateways = deactiveGateways;\n        if (!noapply) $scope.$apply();\n      } else if (flg == \"device\") {\n        var activeDevices = [];\n        var deactiveDevices = [];\n        var selectedDevices = [];\n        $scope.gatewayactiveDevices.forEach(function (device) {\n          if (device.selected) {\n            selectedDevices.push(device);\n\n            if (device.managedStatus == \"active\") {\n              activeDevices.push(device);\n            } else {\n              deactiveDevices.push(device);\n            }\n          }\n        });\n        $scope.activeDevices = activeDevices;\n        $scope.deactiveDevices = deactiveDevices;\n        $scope.selectedDevices = selectedDevices;\n        if (!noapply) $scope.$apply();\n      }\n    };\n\n    $scope.customerDomain = function (selCustomer) {\n      if (selCustomer) {\n        $scope.selectedGateitem.domain = $scope.customersDic[selCustomer].domainPath;\n      }\n    };\n\n    $scope.changeDomain = function (domain) {\n      if ($scope.selectedGateitem.customerId) {\n        var domainSel = $scope.customersDic[$scope.selectedGateitem.customerId].domainPath;\n\n        if (domain != domainSel) {\n          $scope.selectedGateitem.customerId = \"\";\n          $scope.selectedGateitem.projectId = \"\";\n        }\n      }\n    };\n    /**\n     * 启用所选\n     */\n\n\n    $scope.gatesActive = function () {\n      BootstrapDialog.show({\n        title: '提示',\n        closable: false,\n        message: '当前有 ' + $scope.deactiveGateways.length + ' 个网关未启用状态，确认要启用吗？',\n        buttons: [{\n          label: '确定',\n          cssClass: 'btn-success',\n          action: function action(dialogRef) {\n            var deactiveGateIds = [];\n            $scope.deactiveGateways.forEach(function (deactiveGate) {\n              deactiveGateIds.push(deactiveGate.id);\n            });\n            resourceUIService.activateGateways(deactiveGateIds, function (returnObj) {\n              if (returnObj.code == 0) {\n                for (var i in $scope.gatewaysAry) {\n                  returnObj.data.successObj.forEach(function (gate) {\n                    if ($scope.gatewaysAry[i].id == gate.id) {\n                      $scope.gatewaysAry[i].managedStatus = gate.managedStatus;\n                      $scope.gatewaysAry[i].simulated = false;\n                      return true;\n                    }\n                  });\n                  $scope.gatewaysAry[i].selected = false;\n                }\n\n                $scope.selectedHandler(\"gateway\", true);\n                broadcastGatewayAry($scope.gatewaysAry);\n                growl.success(\"启用成功\" + returnObj.data.successObj.length + \"个网关,失败\" + returnObj.data.failObj.length + \"个网关\", {});\n              }\n            });\n            dialogRef.close();\n          }\n        }, {\n          label: '取消',\n          action: function action(dialogRef) {\n            dialogRef.close();\n          }\n        }]\n      });\n    };\n    /**\n     * \n     */\n\n\n    $scope.gatesSimulate = function () {\n      BootstrapDialog.show({\n        title: '提示',\n        closable: false,\n        message: '当前有 ' + $scope.activeGateways.length + ' 个网关启用状态。确认要进行数据仿真吗？注意：停用网关即可关闭仿真。',\n        buttons: [{\n          label: '确定',\n          cssClass: 'btn-success',\n          action: function action(dialogRef) {\n            var activeGateIds = [];\n            $scope.activeGateways.forEach(function (activeGate) {\n              activeGateIds.push(activeGate.id);\n            });\n            resourceUIService.activateSimulatedGateways(activeGateIds, function (returnObj) {\n              if (returnObj.code == 0) {\n                for (var i in $scope.gatewaysAry) {\n                  returnObj.data.successObj.forEach(function (gate) {\n                    if ($scope.gatewaysAry[i].id == gate.id) {\n                      $scope.gatewaysAry[i].simulated = gate.simulated;\n                      return true;\n                    }\n                  });\n                  $scope.gatewaysAry[i].selected = false;\n                }\n\n                $scope.selectedHandler(\"gateway\", true);\n                broadcastGatewayAry($scope.gatewaysAry);\n                growl.success(\"仿真成功\" + returnObj.data.successObj.length + \"个网关,失败\" + returnObj.data.failObj.length + \"个网关\", {});\n              }\n            });\n            dialogRef.close();\n          }\n        }, {\n          label: '取消',\n          action: function action(dialogRef) {\n            dialogRef.close();\n          }\n        }]\n      });\n    };\n    /**\n     * 停用所选\n     */\n\n\n    $scope.gatesDeactive = function () {\n      BootstrapDialog.show({\n        title: '提示',\n        closable: false,\n        message: '当前有 ' + $scope.activeGateways.length + ' 个网关启用状态，停用网关的操作会使该网关下所有的设备一并停用。确认要停用吗？',\n        buttons: [{\n          label: '确定',\n          cssClass: 'btn-success',\n          action: function action(dialogRef) {\n            var activeGateIds = [];\n            $scope.activeGateways.forEach(function (activeGate) {\n              activeGateIds.push(activeGate.id);\n            });\n            resourceUIService.deactivateGateways(activeGateIds, function (returnObj) {\n              if (returnObj.code == 0) {\n                for (var i in $scope.gatewaysAry) {\n                  returnObj.data.successObj.forEach(function (gate) {\n                    if ($scope.gatewaysAry[i].id == gate.id) {\n                      $scope.gatewaysAry[i].managedStatus = gate.managedStatus;\n                      return true;\n                    }\n                  });\n                  $scope.gatewaysAry[i].selected = false;\n                }\n\n                $scope.selectedHandler(\"gateway\", true);\n                broadcastGatewayAry($scope.gatewaysAry);\n                growl.success(\"停用成功\" + returnObj.data.successObj.length + \"个网关,失败\" + returnObj.data.failObj.length + \"个网关\", {});\n              }\n            });\n            dialogRef.close();\n          }\n        }, {\n          label: '取消',\n          action: function action(dialogRef) {\n            dialogRef.close();\n          }\n        }]\n      });\n    };\n    /**\n     * 注销所选\n     */\n\n\n    $scope.gatesDelete = function () {\n      //注销网关\n      BootstrapDialog.show({\n        title: '提示',\n        closable: false,\n        message: '当前有 ' + $scope.deactiveGateways.length + ' 个网关未启用状态，确认要注销吗？',\n        buttons: [{\n          label: '确定',\n          cssClass: 'btn-success',\n          action: function action(dialogRef) {\n            var deactiveGateways = [];\n            $scope.deactiveGateways.forEach(function (deactiveGateway) {\n              deactiveGateways.push(deactiveGateway.id);\n            });\n            resourceUIService.deleteGateways(deactiveGateways, function (returnObj) {\n              if (returnObj.code == 0) {\n                returnObj.data.successObj.forEach(function (gate) {\n                  for (var i in $scope.gatewaysAry) {\n                    if ($scope.gatewaysAry[i].id == gate.id) {\n                      $scope.gatewaysAry.splice(i, 1);\n                      break;\n                    }\n\n                    $scope.gatewaysAry[i].selected = false;\n                  }\n                });\n                $scope.selectedHandler(\"gateway\", true);\n                broadcastGatewayAry($scope.gatewaysAry);\n                growl.success(\"注销成功\" + returnObj.data.successObj.length + \"个网关,失败\" + returnObj.data.failObj.length + \"个网关\", {});\n              }\n            });\n            dialogRef.close();\n          }\n        }, {\n          label: '取消',\n          action: function action(dialogRef) {\n            dialogRef.close();\n          }\n        }]\n      });\n    };\n    /**\n     * 启用所选设备\n     */\n\n\n    $scope.devicesActive = function () {\n      BootstrapDialog.show({\n        title: '提示',\n        closable: false,\n        message: '当前有 ' + $scope.deactiveGateways.length + ' 个网关未启用状态，确认要启用吗？',\n        buttons: [{\n          label: '确定',\n          cssClass: 'btn-success',\n          action: function action(dialogRef) {\n            var deactiveGateIds = [];\n            $scope.deactiveGateways.forEach(function (deactiveGate) {\n              deactiveGateIds.push(deactiveGate.id);\n            });\n            resourceUIService.activateGateways(deactiveGateIds, function (returnObj) {\n              if (returnObj.code == 0) {\n                for (var i in $scope.gatewaysAry) {\n                  returnObj.data.successObj.forEach(function (gate) {\n                    if ($scope.gatewaysAry[i].id == gate.id) {\n                      $scope.gatewaysAry[i].managedStatus = gate.managedStatus;\n                      $scope.gatewaysAry[i].simulated = false;\n                      return true;\n                    }\n                  });\n                  $scope.gatewaysAry[i].selected = false;\n                }\n\n                $scope.selectedHandler(\"gateway\", true);\n                broadcastGatewayAry($scope.gatewaysAry);\n                growl.success(\"启用成功\" + returnObj.data.successObj.length + \"个网关,失败\" + returnObj.data.failObj.length + \"个网关\", {});\n              }\n            });\n            dialogRef.close();\n          }\n        }, {\n          label: '取消',\n          action: function action(dialogRef) {\n            dialogRef.close();\n          }\n        }]\n      });\n    };\n    /**\n     * 停用所选\n     */\n\n\n    $scope.devicesDeactive = function () {\n      BootstrapDialog.show({\n        title: '提示',\n        closable: false,\n        message: '当前有 ' + $scope.activeGateways.length + ' 个网关启用状态，停用网关的操作会使该网关下所有的设备一并停用。确认要停用吗？',\n        buttons: [{\n          label: '确定',\n          cssClass: 'btn-success',\n          action: function action(dialogRef) {\n            var activeGateIds = [];\n            $scope.activeGateways.forEach(function (activeGate) {\n              activeGateIds.push(activeGate.id);\n            });\n            resourceUIService.deactivateGateways(activeGateIds, function (returnObj) {\n              if (returnObj.code == 0) {\n                for (var i in $scope.gatewaysAry) {\n                  returnObj.data.successObj.forEach(function (gate) {\n                    if ($scope.gatewaysAry[i].id == gate.id) {\n                      $scope.gatewaysAry[i].managedStatus = gate.managedStatus;\n                      $scope.gatewaysAry[i].simulated = false;\n                      return true;\n                    }\n                  });\n                  $scope.gatewaysAry[i].selected = false;\n                }\n\n                $scope.selectedHandler(\"gateway\", true);\n                broadcastGatewayAry($scope.gatewaysAry);\n                growl.success(\"停用成功\" + returnObj.data.successObj.length + \"个网关,失败\" + returnObj.data.failObj.length + \"个网关\", {});\n              }\n            });\n            dialogRef.close();\n          }\n        }, {\n          label: '取消',\n          action: function action(dialogRef) {\n            dialogRef.close();\n          }\n        }]\n      });\n    };\n    /**\n     * 注销所选\n     */\n\n\n    $scope.devicesDelete = function () {\n      //注销网关\n      BootstrapDialog.show({\n        title: '提示',\n        closable: false,\n        message: '当前有 ' + $scope.deactiveGateways.length + ' 个网关未启用状态，确认要注销吗？',\n        buttons: [{\n          label: '确定',\n          cssClass: 'btn-success',\n          action: function action(dialogRef) {\n            var deactiveGateways = [];\n            $scope.deactiveGateways.forEach(function (deactiveGateway) {\n              deactiveGateways.push(deactiveGateway.id);\n            });\n            resourceUIService.deleteGateways(deactiveGateways, function (returnObj) {\n              if (returnObj.code == 0) {\n                returnObj.data.successObj.forEach(function (gate) {\n                  for (var i in $scope.gatewaysAry) {\n                    if ($scope.gatewaysAry[i].id == gate.id) {\n                      $scope.gatewaysAry.splice(i, 1);\n                      break;\n                    }\n\n                    $scope.gatewaysAry[i].selected = false;\n                  }\n                });\n                $scope.selectedHandler(\"gateway\", true);\n                broadcastGatewayAry($scope.gatewaysAry);\n                growl.success(\"注销成功\" + returnObj.data.successObj.length + \"个网关,失败\" + returnObj.data.failObj.length + \"个网关\", {});\n              }\n            });\n            dialogRef.close();\n          }\n        }, {\n          label: '取消',\n          action: function action(dialogRef) {\n            dialogRef.close();\n          }\n        }]\n      });\n    };\n\n    var getResourceBaseState = function getResourceBaseState(gatewaysAry, callbackFun) {\n      var gatewaryIds = [];\n      var gatewaryDic = {};\n      gatewaysAry.forEach(function (gatewary) {\n        gatewaryIds.push(gatewary.id);\n        gatewaryDic[gatewary.id] = gatewary;\n      });\n\n      var stateCallback = function stateCallback(evendata) {\n        gatewaysAry.forEach(function (gatewary) {\n          if (gatewary.id == evendata.data.nodeId) {\n            gatewary.onlineStatus = evendata.data.value == 0 ? \"离线\" : \"在线\";\n            return false;\n          }\n        });\n        callbackFun(gatewaysAry);\n      };\n\n      kpiDataService.getRealTimeKpiData(gatewaryIds, [999998], function (returnObj) {\n        if (returnObj.code == 0) {\n          for (var i in returnObj.data) {\n            gatewaysAry.forEach(function (gatewary) {\n              if (gatewary.id == returnObj.data[i].nodeId) {\n                gatewary.onlineStatus = returnObj.data[i].value == 0 ? \"离线\" : \"在线\";\n              }\n            });\n          }\n\n          callbackFun(gatewaysAry);\n        }\n      }, true); //监听websocket\n\n      if (\"WebSocket\" in window) {\n        var param = {\n          ciid: gatewaryIds.toString(),\n          kpi: '999998'\n        };\n        var operation = \"register\"; //注册WebSocket\n\n        SwSocket.register(uuid, operation, stateCallback); //webSocket发送请求\n\n        SwSocket.send(uuid, operation, 'kpi', param);\n      }\n    }; //注销scope时注销方法heartBeat，回调函数callback  \n\n\n    $scope.$on(\"$destroy\", function () {\n      if (uuid) SwSocket.unregister(uuid);\n    });\n    /**\n     * tab页的事件监听\n     */\n\n    var initEvent = function initEvent() {\n      $('a[data-toggle=\"tab\"]').on('shown.bs.tab', function (e) {\n        if ($(e.target).closest(\"li.disabled\").length > 0) {\n          $(e.target).closest(\"li.disabled\").removeClass(\"active\");\n          $(e.target).closest(\"ul\").children(\"[name=\" + $scope.activeListTab + \"]\").addClass(\"active\");\n          return;\n        }\n\n        var aname = $(e.target).closest(\"li\").attr(\"name\");\n\n        if (aname) {\n          $scope.activeListTab = resourceUIService.activeListTab = aname;\n          $scope.$apply();\n          tabHandler();\n        }\n      });\n    };\n    /**\n     * 网关拓扑图展会数据获取\n     */\n\n\n    var gatewayEchars = function gatewayEchars() {\n      for (var j in $scope.gatewaysAry) {\n        if ($scope.gatewaysObj[$scope.gatewaysAry[j].id]) {\n          $scope.gatewaysObj[$scope.gatewaysAry[j].id].devices = [];\n        }\n      }\n\n      resourceUIService.getDevicesByCondition({\n        \"gatewayIds\": $scope.gatewaysIdAry\n      }, function (returnObj) {\n        if (returnObj.code == 0) {\n          var arr = returnObj.data;\n\n          for (var i in arr) {\n            if ($scope.gatewaysObj[arr[i].gatewayId]) {\n              $scope.gatewaysObj[arr[i].gatewayId].devices.push(arr[i]);\n            }\n          }\n\n          $scope.$broadcast(Event.ECHARTINFOSINIT + \"_graph\", {\n            optionData: $scope.gatewaysAry,\n            optionObj: $scope.gatewaysObj\n          });\n        }\n      });\n      $timeout(function () {\n        $('.chart').resize();\n      }, 300);\n    };\n\n    var tabHandler = function tabHandler() {\n      if ($scope.activeListTab == \"tab2\") {\n        getDevices($scope.selectedGateitem);\n      } else if ($scope.activeListTab == \"tab3\") {\n        findUnComfirmedDevice($scope.selectedGateitem);\n      } else if ($scope.activeListTab == \"gateway2\") {\n        gatewayEchars();\n      }\n    };\n    /**\n     * 初始化处理\n     */\n\n\n    var deferList = [];\n    var uuid;\n\n    var init = function init() {\n      if (initstate) return;\n      uuid = Math.uuid();\n      initstate = true;\n      initEvent();\n      querySupplier();\n      $scope.queryCustomer();\n      $scope.queryProject(); // 获得根模型\n\n      resourceUIService.getRootModel(function (returnObj) {\n        if (returnObj.code == 0) {\n          resourceUIService.rootModel = returnObj.data;\n          urmpTree();\n        }\n      });\n      var defer = $q.defer();\n      $scope.gatewayConfig = {};\n      $scope.defaultGatewayType = {};\n      getAllCollectionPlugins(function () {\n        configUIService.getConfigsByGroupName(\"DefaultGateWayType\", function (returnObj) {\n          if (returnObj.code == 0 && returnObj.data.length > 0) {\n            $scope.gatewayConfig = returnObj.data[0];\n            $scope.defaultGatewayType = JSON.parse(returnObj.data[0].value);\n            $scope.choseGateWayTab = $scope.defaultGatewayType.type;\n            var gatewayEnterpriseDic = {};\n            $scope.baseConfig.gatewayManufacturer.forEach(function (item) {\n              if ($scope.defaultGatewayType.enterpriseIds && $scope.defaultGatewayType.enterpriseIds.search(item.id) > -1) {\n                gatewayEnterpriseDic[item.id] = item;\n                gatewayEnterpriseDic[item.id].selectCount = 0;\n                item.selected = true;\n              } else {\n                item.selected = false;\n              }\n            });\n            $scope.baseConfig.gatewayModel.forEach(function (item) {\n              if ($scope.defaultGatewayType.productIds && $scope.defaultGatewayType.productIds.search(item.id) > -1) {\n                gatewayEnterpriseDic[item.manufacturerId].selectCount += 1;\n                item.selected = true;\n              } else {\n                item.selected = false;\n              }\n            });\n            $scope.protocols.forEach(function (item) {\n              if ($scope.defaultGatewayType.protocols && $scope.defaultGatewayType.protocols.search(item.protocol) > -1) {\n                item.selected = true;\n              } else {\n                item.selected = false;\n              }\n            });\n\n            if ($scope.defaultGatewayType.display) {\n              $scope.gatewayModal = true;\n            }\n          }\n\n          defer.resolve(\"success\");\n        });\n      });\n      deferList.push(defer.promise);\n      $q.all(deferList).then(function () {\n        gateWayTree();\n        $scope.domainTreeQuery();\n      });\n    };\n\n    $scope.gateWayProtocolFilter = function (item) {\n      if (!$scope.defaultGatewayType || !$scope.defaultGatewayType.protocols) return true;\n      return $scope.defaultGatewayType.protocols.search(item.protocol) > -1;\n    };\n\n    $scope.gateWayEnterPriseFilter = function (item) {\n      if (!$scope.selectedGateitem || !$scope.defaultGatewayType || !$scope.defaultGatewayType.enterpriseIds) return true;\n      return $scope.defaultGatewayType.enterpriseIds.search(item.id) > -1;\n    };\n\n    $scope.gateWayProductFilter = function (item) {\n      if (!$scope.selectedGateitem || !$scope.defaultGatewayType || !$scope.defaultGatewayType.productIds) return true;\n      return $scope.selectedGateitem.enterpriseId == item.manufacturerId && $scope.defaultGatewayType.productIds.search(item.id) > -1;\n    };\n\n    $scope.productChange = function () {\n      $scope.baseConfig.gatewayModel.forEach(function (item) {\n        if (item.id == $scope.selectedGateitem.productId) {\n          $scope.selectedGateitem.protocol = item.protocol;\n          $scope.selectedGateitem.protocolVersion = item.protocolVersion;\n        }\n      });\n    };\n    /**\n     * 默认网关过滤类型\n     */\n\n\n    $scope.choseGateWayTab;\n\n    $scope.choseGateWayTabHandler = function (flg) {\n      $scope.choseGateWayTab = flg;\n    };\n    /**\n     * 网关厂商选择\n     */\n\n\n    $scope.selectedEnterPrise = {};\n\n    $scope.gatewayEnterpriseChose = function (enterPrise) {\n      $scope.selectedEnterPrise[enterPrise.index] = enterPrise;\n      enterPrise.showProduct = !enterPrise.showProduct;\n      $scope.baseConfig.gatewayManufacturer.forEach(function (item) {\n        if (item.id != enterPrise.id) {\n          item.showProduct = false;\n        }\n      });\n    };\n    /**\n     * 网关产品选择\n     */\n\n\n    $scope.gatewayProductChose = function (product) {\n      product.selected = !product.selected;\n      $scope.baseConfig.gatewayManufacturer.forEach(function (item) {\n        if (item.id == product.manufacturerId) {\n          if (product.selected) item.selectCount ? item.selectCount += 1 : item.selectCount = 1;else item.selectCount ? item.selectCount -= 1 : item.selectCount = 0;\n\n          if (item.selectCount > 0) {\n            item.selected = true;\n          } else {\n            item.selected = false;\n          }\n        }\n      });\n    };\n\n    $scope.closeGateWayModal = function () {\n      $scope.gatewayModal = false;\n    };\n    /**\n     * 提交网关的配置\n     */\n\n\n    $scope.applyGateWayConfig = function () {\n      if ($scope.gatewayConfig.value != undefined) {\n        var updateConfig = JSON.parse($scope.gatewayConfig.value);\n        updateConfig.type = $scope.choseGateWayTab;\n        updateConfig.display = $scope.defaultGatewayType.display;\n\n        if (updateConfig.type != 2) {\n          //协议模式\n          updateConfig.protocols = \"\";\n          $scope.protocols.forEach(function (item) {\n            if (item.selected) updateConfig.protocols += item.protocol + \",\";\n          });\n        } else {\n          updateConfig.enterpriseIds = \"\";\n          updateConfig.productIds = \"\";\n          $scope.baseConfig.gatewayModel.forEach(function (item) {\n            if (item.selected) {\n              updateConfig.enterpriseIds += item.manufacturerId + \",\";\n              updateConfig.productIds += item.id + \",\";\n            }\n          });\n        }\n\n        $scope.defaultGatewayType.enterpriseIds = updateConfig.enterpriseIds;\n        $scope.defaultGatewayType.productIds = updateConfig.productIds;\n        $scope.defaultGatewayType.protocols = updateConfig.protocols;\n        $scope.gatewayConfig.value = JSON.stringify(updateConfig);\n        configUIService.saveConfig($scope.gatewayConfig, function (returnObj) {\n          if (returnObj.code == 0) {\n            $scope.gatewayModal = false;\n          }\n        });\n      } else {\n        growl.warning(\"请检查一下您的全局配置是否配了网关类型默认设置\", {});\n      }\n    };\n    /**\n     * 标准的登录状态判定\n     * 登陆后执行初始化init方法\n     */\n\n\n    if (!userLoginUIService.user.isAuthenticated) {\n      $scope.$on('loginStatusChanged', function (evt, d) {\n        if (userLoginUIService.user.isAuthenticated) {\n          init();\n        }\n      });\n    } else {\n      init();\n    }\n  }]);\n});"],"sourceRoot":"/source/"}