{"version":3,"sources":["app-oc/js/controllers/workorder-procedure-copy-ctrl.js"],"names":["define","controllers","BootstrapDialog","bootstrapMultiselect","initController","$scope","$location","$routeParams","$timeout","viewFlexService","kpiDataService","resourceUIService","growl","userLoginUIService","processService","userEnterpriseService","Info","$route","isEditing","procedureData","taskConfs","get","info","procedureStep","workOrderType","myDicts","procedureStepBk","procedureModel","getUser","queryEnterpriseUser","returnObj","code","data","length","userData","getUserGroup","queryEnterpriseGroup","groupData","getSupplier","querySupplier","providerData","initProcessDefinitions","getProcessDefinitions","$broadcast","Event","WORKORDERTYPEINIT","initProcedureStep","id","dictCode","valueCode","label","name","param","stepNumber","value","initStepData","i","procedureItem","category","desc","domainPath","processTemplateKey","taskConfsObj","userType","providerId","userIds","userGroupIds","sendEmail","sendSms","sendPsMessage","operation","prev","now","selectAll2Right","arr","push","String","userID","groupID","$","multiSelect","selectAll2Left","addProcedure","currentEditIndex","unshift","isEdit","warning","initDefaultSelect","addStep","parseInt","saveTaskConfs","removeClass","eq","addClass","deleteStep","splice","initSelectUser","initSelectGroup","index","obj","toString","initSelectProvider","saveProcedure","userids","usergroupids","undefined","processDefinition","saveProcessDefinition","success","doAction","type","select","show","title","closable","message","buttons","cssClass","action","dialogRef","deleteProcessDefinitionById","close","on","e","activeTab","target","text","relatedTarget","user","isAuthenticated","$on","evt","d","q","ticketCategoryService","workflowService","userRoleUIService","cmd","flows","uuid","Math","cmdins","flowList","workflowId","userSelect","roleSelect","expressionSelect","taskId","assignedUser","roleUser","allUser","groupUser","taskArry","handerConfsData","defers","defer","configureFlow","flowListDic","roleIdUser","rList","roleID","roleIds","getAssociateRole2User","res","forEach","ele","customNameArr","getdomainNameHandler","domains","customName","allRoles","allRole","queryEnterpriseRole","allGroupUser","groupId","queryGroupUser","addViews","newObj","createTime","Date","flg","rowData","fun","deleteTicketCategoryById","handerConfsList","handerConfs","saveTicketCategory","updateView","getTicketCategorys","tabStatus","userAssigned","userName","userExpressionOfCategory","userExpression","initEvent","attr","$apply","promises","promise","all","then","getWorkflows","resolve"],"mappings":"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","file":"app-oc/js/controllers/workorder-procedure-copy-ctrl.js","sourcesContent":["define(['controllers/controllers', 'bootstrap-dialog', 'bootstrap-multiselect'], function (controllers, BootstrapDialog, bootstrapMultiselect) {\n  'use strict';\n\n  controllers.initController('WorkOrderProcedureCtrl', ['$scope', '$location', '$routeParams', '$timeout', 'viewFlexService', 'kpiDataService', 'resourceUIService', 'growl', 'userLoginUIService', 'processService', 'userEnterpriseService', 'Info', '$route', function ($scope, $location, $routeParams, $timeout, viewFlexService, kpiDataService, resourceUIService, growl, userLoginUIService, processService, userEnterpriseService, Info, $route) {\n    $scope.isEditing = false;\n    $scope.procedureData = [];\n    $scope.taskConfs = [];\n    var previousTab;\n    var procedureModel;\n    var procedureStepBk;\n    var info = Info.get(\"localdb/procedure.json\", function (info) {\n      $scope.procedureStep = info.procedureStep; //5步工单枚举\n\n      $scope.workOrderType = $scope.myDicts['ticketCategory']; //工单分类枚举\n\n      procedureModel = info.procedureStepBk;\n      $scope.procedureModel = info.procedureStep;\n    });\n    /**\n     * 五步流程数据默认名字\n     * @return {[type]} [description]\n     */\n\n    $scope.initProcedureStep = function () {\n      var procedureStepBk = [{\n        \"id\": 4011,\n        \"dictCode\": \"systemProcessTemplate\",\n        \"valueCode\": \"oneStep\",\n        \"label\": \"一步工单\",\n        \"name\": \"流程任务1\",\n        \"param\": 1\n      }, {\n        \"id\": 4012,\n        \"dictCode\": \"systemProcessTemplate\",\n        \"valueCode\": \"twoStep\",\n        \"label\": \"二步工单\",\n        \"name\": \"流程任务2\",\n        \"param\": 2\n      }, {\n        \"id\": 4013,\n        \"dictCode\": \"systemProcessTemplate\",\n        \"valueCode\": \"threeStep\",\n        \"label\": \"三步工单\",\n        \"name\": \"流程任务3\",\n        \"param\": 3\n      }, {\n        \"id\": 4014,\n        \"dictCode\": \"systemProcessTemplate\",\n        \"valueCode\": \"fourStep\",\n        \"label\": \"四步工单\",\n        \"name\": \"流程任务4\",\n        \"param\": 4\n      }, {\n        \"id\": 4015,\n        \"dictCode\": \"systemProcessTemplate\",\n        \"valueCode\": \"fiveStep\",\n        \"label\": \"五步工单\",\n        \"name\": \"流程任务5\",\n        \"param\": 5\n      }];\n      $scope.procedureModel = procedureStepBk;\n    };\n\n    $scope.stepNumber = [{\n      \"name\": \"a\",\n      \"value\": 1\n    }, {\n      \"name\": \"b\",\n      \"value\": null\n    }, {\n      \"name\": \"c\",\n      \"value\": null\n    }, {\n      \"name\": \"d\",\n      \"value\": null\n    }, {\n      \"name\": \"e\",\n      \"value\": null\n    }]; //点击编辑工单流程\n\n    $scope.initStepData = function (length) {\n      for (var i = 0; i < length; i++) {\n        $scope.stepNumber[i].value = i + 1;\n      }\n    };\n\n    $scope.procedureItem = {\n      \"label\": \"\",\n      \"category\": \"\",\n      \"desc\": \"\",\n      \"id\": \"\",\n      \"domainPath\": \"\",\n      \"processTemplateKey\": \"\"\n    };\n    $scope.taskConfsObj = {\n      \"name\": \"\",\n      \"userType\": \"user\",\n      \"providerId\": null,\n      \"userIds\": null,\n      \"userGroupIds\": null,\n      \"sendEmail\": true,\n      \"sendSms\": true,\n      \"sendPsMessage\": false //工单流程任务的前后步\n\n    };\n    $scope.operation = {\n      \"prev\": null,\n      \"now\": 0\n      /**\n       * 获取用户\n       */\n\n    };\n\n    function getUser() {\n      userEnterpriseService.queryEnterpriseUser(function (returnObj) {\n        if (returnObj.code == 0) {\n          if (returnObj.data.length != 0) {\n            $scope.userData = returnObj.data;\n          } else {\n            $scope.userData = [];\n          }\n        }\n      });\n    }\n    /**\n     * 获取用户组\n     */\n\n\n    function getUserGroup() {\n      userEnterpriseService.queryEnterpriseGroup(function (returnObj) {\n        if (returnObj.code == 0) {\n          if (returnObj.data.length != 0) {\n            $scope.groupData = returnObj.data;\n          } else {\n            $scope.groupData = [];\n          }\n        }\n      });\n    }\n    /**\n     * 获取设备供应商\n     */\n\n\n    function getSupplier() {\n      userEnterpriseService.querySupplier(function (returnObj) {\n        if (returnObj.code == 0) {\n          if (returnObj.data.length != 0) {\n            $scope.providerData = returnObj.data;\n          } else {\n            $scope.providerData = [];\n          }\n        }\n      });\n    }\n    /**\n     * multi-select全选到右侧\n     */\n\n\n    $scope.selectAll2Right = function () {\n      var length;\n      var taskConfsObj = $scope.taskConfsObj;\n\n      if (taskConfsObj.userType == 'user') {\n        var arr = [];\n\n        if ($scope.userData != []) {\n          for (var i in $scope.userData) {\n            arr.push(String($scope.userData[i].userID));\n          }\n        }\n\n        taskConfsObj.userIds = arr;\n        $scope.taskConfsObj.userIds = arr;\n        length = taskConfsObj.userIds.length;\n      } else if (taskConfsObj.userType == 'group') {\n        var arr = [];\n\n        if ($scope.groupData != []) {\n          for (var i in $scope.groupData) {\n            arr.push(String($scope.groupData[i].groupID));\n          }\n        }\n\n        taskConfsObj.userGroupIds = arr;\n        $scope.taskConfsObj.userGroupIds = arr;\n        length = taskConfsObj.userGroupIds.length;\n      } else if (taskConfsObj.userType == 'provider') {\n        var providerId;\n\n        if ($scope.providerData != []) {\n          providerId = $scope.providerData;\n        }\n\n        $scope.taskConfsObj.providerId = providerId;\n        length = taskConfsObj.providerId.length;\n      }\n\n      if (length >= 0) {\n        $('.my-select-' + $scope.taskConfsObj.userType).multiSelect('select_all');\n      }\n    };\n    /**\n     * 全选到左侧\n     *\n     */\n\n\n    $scope.selectAll2Left = function () {\n      $('.my-select-' + $scope.taskConfsObj.userType).multiSelect('deselect_all');\n    };\n    /**\n     * 新建工单流程\n     */\n\n\n    $scope.addProcedure = function () {\n      if ($scope.isEditing == false) {\n        $scope.isEditing = true;\n        $scope.operation.prev = 0;\n        $scope.operation.now = 0; //将所有相关数据清空\n\n        $scope.taskConfs = [];\n        $scope.initProcedureStep();\n        $scope.currentEditIndex = 1;\n        $scope.stepNumber = [{\n          \"name\": \"a\",\n          \"value\": 1\n        }, {\n          \"name\": \"b\",\n          \"value\": null\n        }, {\n          \"name\": \"c\",\n          \"value\": null\n        }, {\n          \"name\": \"d\",\n          \"value\": null\n        }, {\n          \"name\": \"e\",\n          \"value\": null\n        }]; //流程名称类型描述数据清空\n\n        $scope.procedureItem = {\n          \"label\": \"\",\n          \"category\": \"\",\n          \"desc\": \"\" //正在操作的流程任务清空\n\n        };\n        $scope.taskConfsObj = {\n          \"name\": \"\",\n          \"userType\": \"user\",\n          \"providerId\": null,\n          \"userIds\": null,\n          \"userGroupIds\": null,\n          \"sendEmail\": true,\n          \"sendSms\": true,\n          \"sendPsMessage\": false\n        };\n        var newObj = {\n          id: '',\n          label: \"\",\n          domainPath: '',\n          category: '',\n          processTemplateKey: '',\n          desc: \"\",\n          taskConfs: [],\n          isEditing: true,\n          isEdit: 1\n        }; //isEdit 1-新建 2-编辑\n\n        $scope.procedureData.unshift(newObj);\n        $scope.$broadcast(Event.WORKORDERTYPEINIT, $scope.procedureData);\n      } else {\n        growl.warning(\"当前有正在编辑的工单流程\", {});\n      }\n    }; // $scope.$watch('taskConfsObj.userType', function(newValue, oldValue) {\n    //      \n    //      \n    //     $scope.userType = newValue;\n    //     $scope.initDefaultSelect()\n    //     if (newValue == 'user') {\n    //       $scope.taskConfsObj.userIds = $scope.taskConfsObj.userIds ? $scope.taskConfsObj.userIds : [];\n    //       $scope.taskConfsObj.userGroupIds = null;\n    //       $scope.taskConfsObj.providerId = null;\n    //       $scope.taskConfsObj.userType = 'user';\n    //     } else if (newValue == 'group') {\n    //       $scope.taskConfsObj.userIds = null;\n    //       $scope.taskConfsObj.userGroupIds = $scope.taskConfsObj.userGroupIds ? $scope.taskConfsObj.userGroupIds : [];\n    //       $scope.taskConfsObj.providerId = null;\n    //       $scope.taskConfsObj.userType = 'group';\n    //     } else if (newValue == 'provider') {\n    //       $scope.taskConfsObj.userIds = null;\n    //       $scope.taskConfsObj.userGroupIds = null;\n    //       $scope.taskConfsObj.providerId = $scope.taskConfsObj.providerId ? $scope.taskConfsObj.providerId : null;\n    //       $scope.taskConfsObj.userType = 'provider';\n    //     }\n    //      \n    //   });\n\n\n    $scope.initDefaultSelect = function () {\n      $('.my-select-user').multiSelect('deselect_all');\n      $('.my-select-group').multiSelect('deselect_all');\n      $('.my-select-provider').multiSelect('deselect_all');\n      return false;\n    };\n    /**\n     * 添加工单流程任务\n     */\n\n\n    $scope.addStep = function () {\n      var arr = [];\n\n      if ($scope.taskConfsObj.userType == 'user') {\n        arr = $scope.taskConfsObj.userIds;\n      } else if ($scope.taskConfsObj.userType == 'group') {\n        arr = $scope.taskConfsObj.userGroupIds;\n      } else if ($scope.taskConfsObj.userType == 'provider') {\n        arr = $scope.taskConfsObj.providerId;\n      }\n\n      if (arr != null && arr.length != 0) {\n        if ($scope.stepNumber[4].value == 5) {\n          growl.warning(\"最多只能添加5个工单流程任务\", {});\n          return;\n        } else {\n          for (var i in $scope.stepNumber) {\n            if ($scope.stepNumber[i].value == null) {\n              $scope.stepNumber[i].value = parseInt(i) + 1;\n              $scope.currentEditIndex = parseInt(i);\n              $scope.saveTaskConfs($scope.currentEditIndex);\n              $scope.taskConfsObj.userIds = [];\n              $scope.initDefaultSelect();\n              $(\".nav-tabs-custom>ul li\").removeClass('active');\n              $(\".nav-tabs-custom>ul li\").eq($scope.currentEditIndex - 1).addClass('active'); //              $scope.changeMultiSelect();\n\n              return;\n            }\n          }\n        }\n      } else {\n        growl.warning(\"请选择任务处理人\", {});\n        return;\n      }\n    };\n    /**\n     * 删除工单流程任务\n     */\n\n\n    $scope.deleteStep = function () {\n      for (var i in $scope.stepNumber) {\n        if (4 - i == 0) {\n          growl.warning(\"至少要有一个流程任务\", {});\n        } else {\n          $scope.initDefaultSelect();\n\n          if ($scope.stepNumber[4 - i].value != null) {\n            $scope.stepNumber[4 - i].value = null;\n            $(\".nav-tabs-custom>ul li\").removeClass('active');\n            $(\".nav-tabs-custom>ul li\").eq($scope.currentEditIndex).addClass('active');\n            var taskConfs = $scope.taskConfs;\n            taskConfs.splice($scope.currentEditIndex - 1, 1);\n            $scope.taskConfs = taskConfs;\n\n            for (var i in taskConfs) {\n              $scope.procedureModel[i].name = taskConfs[i].name;\n            }\n\n            $scope.operation.now = $scope.taskConfs.length - 1;\n            $scope.taskConfsObj = $scope.taskConfs[$scope.operation.now];\n            $scope.currentEditIndex = $scope.operation.now + 1;\n            $(\".nav-tabs-custom ul li\").removeClass('active');\n            $(\".nav-tabs-custom ul li\").eq($scope.operation.now).addClass('active');\n\n            if ($scope.taskConfsObj.userType == 'user' && $scope.taskConfsObj.userIds) {\n              $scope.initSelectUser($scope.taskConfsObj.userIds);\n            } else if ($scope.taskConfsObj.userType == 'group' && $scope.taskConfsObj.userGroupIds) {\n              $scope.initSelectGroup($scope.taskConfsObj.userGroupIds);\n            }\n\n            return;\n          }\n        }\n      }\n    };\n    /**\n     * 保存工单流程任务\n     */\n\n\n    $scope.currentEditIndex = 1;\n    $scope.operation.prev = 0;\n    $scope.operation.now = 0;\n\n    $scope.saveTaskConfs = function (index) {\n      $scope.operation.prev = $scope.operation.now;\n      $scope.operation.now = index;\n      var taskConfs = $scope.taskConfs;\n      var obj = $scope.taskConfsObj;\n      obj.name = $scope.procedureModel[$scope.operation.prev].name;\n      taskConfs[$scope.operation.prev] = obj;\n      $scope.taskConfs = taskConfs; //更新当前步骤数据\n\n      if ($scope.taskConfs[index]) {\n        $scope.taskConfsObj = $scope.taskConfs[index];\n        $scope.userType = $scope.taskConfsObj.userType;\n\n        if ($scope.taskConfsObj.userType == 'user') {\n          var arr = [];\n\n          for (var i in $scope.taskConfsObj.userIds) {\n            if (typeof $scope.taskConfsObj.userIds[i] != 'string') {\n              arr[i] = $scope.taskConfsObj.userIds[i].toString();\n            } else {\n              arr[i] = $scope.taskConfsObj.userIds[i];\n            }\n          }\n\n          $scope.initDefaultSelect();\n          $scope.initSelectUser(arr);\n        } else if ($scope.taskConfsObj.userType == 'group') {\n          var arr = [];\n\n          for (var i in $scope.taskConfsObj.userGroupIds) {\n            if (typeof $scope.taskConfsObj.userGroupIds[i] != 'string') {\n              arr[i] = $scope.taskConfsObj.userGroupIds[i].toString();\n            } else {\n              arr[i] = $scope.taskConfsObj.userGroupIds[i];\n            }\n          }\n\n          $scope.initDefaultSelect();\n          $scope.initSelectGroup(arr);\n        } else if ($scope.taskConfsObj.userType == 'provider') {\n          var arr = $scope.taskConfsObj.providerId.toString();\n          $scope.initSelectProvider(arr);\n        }\n      } else {\n        $scope.taskConfsObj = {\n          \"name\": \"\",\n          \"userType\": \"user\",\n          \"providerId\": null,\n          \"userIds\": null,\n          \"userGroupIds\": null,\n          \"sendEmail\": true,\n          \"sendSms\": true,\n          \"sendPsMessage\": false\n        };\n      }\n\n      $scope.currentEditIndex = index + 1;\n    };\n    /**\n     * 保存工单流程\n     */\n\n\n    $scope.saveProcedure = function () {\n      var userids = $scope.taskConfsObj.userIds;\n      var usergroupids = $scope.taskConfsObj.userGroupIds;\n      var providerid = $scope.taskConfsObj.providerId;\n\n      if ($scope.procedureItem.label == \"\" || $scope.procedureItem.label == null || $scope.procedureItem.label == undefined) {\n        growl.warning(\"请填写流程名称\", {});\n        return;\n      } else if ($scope.procedureItem.category == null || $scope.procedureItem.category == \"\") {\n        growl.warning(\"请选择工单类型\", {});\n        return;\n      }\n\n      if ($scope.taskConfsObj.userType == 'user') {\n        if (userids == null || userids.length == 0) {\n          growl.warning(\"请选择任务处理人\", {});\n          return;\n        }\n      } else if ($scope.taskConfsObj.userType == 'group') {\n        if (usergroupids == null || usergroupids.length == 0) {\n          growl.warning(\"请选择任务处理人\", {});\n          return;\n        }\n      }\n\n      if ($scope.procedureModel[$scope.operation.now].name == \"\" || $scope.procedureModel[$scope.operation.now].name == null) {\n        growl.warning(\"请填写流程任务名称\", {});\n        return;\n      } //保存最近一次的工单流程编辑数据\n\n\n      $scope.saveTaskConfs($scope.operation.now);\n      $scope.taskConfs.name = $scope.procedureItem.label;\n      var taskConfs = $scope.taskConfs;\n      var processDefinition = $scope.procedureItem;\n      processDefinition.taskConfs = taskConfs;\n\n      for (var i in processDefinition.taskConfs) {\n        if (!processDefinition.taskConfs[i]) {\n          delete processDefinition.taskConfs[i];\n        }\n      }\n\n      processService.saveProcessDefinition(processDefinition, function (returnObj) {\n        if (returnObj.code == 0) {\n          if (processDefinition.id) {\n            growl.success(\"修改工单流程成功\", {});\n          } else {\n            growl.success(\"新建工单流程成功\", {});\n          }\n\n          $scope.isEditing = false;\n          initProcessDefinitions();\n          $scope.taskConfs = []; //清空数据\n\n          $scope.operation.prev = 0;\n          $scope.operation.now = 0;\n        }\n      });\n    };\n    /**\n     * 处理Table数据\n     */\n\n\n    $scope.doAction = function (type, select) {\n      if (type == 'save') {} else if (type == 'editError') {\n        growl.warning(select, {});\n        return;\n      } else if (type == 'delete') {\n        if ($scope.isEditing == true) {\n          $scope.isEditing == false;\n        }\n\n        BootstrapDialog.show({\n          title: '提示',\n          closable: false,\n          message: '确认删除工单流程 ' + select.label + ' 吗？',\n          buttons: [{\n            label: '确定',\n            cssClass: 'btn-success',\n            action: function action(dialogRef) {\n              var id = select.id;\n              processService.deleteProcessDefinitionById(id, function (returnObj) {\n                if (returnObj.code == 0) {\n                  //删除后刷新局部\n                  initProcessDefinitions();\n                  $scope.initProcedureStep();\n                  $scope.isEditing = false;\n                  $scope.procedureModel = procedureStepBk;\n                  growl.success(\"删除工单流程成功\", {});\n                }\n              });\n              dialogRef.close();\n            }\n          }, {\n            label: '取消',\n            action: function action(dialogRef) {\n              dialogRef.close();\n            }\n          }]\n        });\n      } else if (type == 'cancel') {\n        $scope.isEditing = false;\n        initProcessDefinitions();\n        growl.success(select, {});\n        $scope.operation.prev = 0;\n        $scope.operation.now = 0;\n        $scope.isEditing = false;\n      }\n    }; //监测Tab页的变换\n\n\n    $('a[data-toggle=\"tab\"]').on('shown.bs.tab', function (e) {\n      // 获取已激活的标签页的名称\n      $scope.activeTab = $(e.target).text(); // 获取前一个激活的标签页的名称\n\n      previousTab = $(e.relatedTarget).text();\n    });\n    /**\n     * 初始化工单类型定义\n     */\n\n    function initProcessDefinitions() {\n      processService.getProcessDefinitions(function (returnObj) {\n        if (returnObj.code == 0) {\n          if (returnObj.length != 0) {\n            $scope.procedureData = returnObj.data;\n          } else {\n            $scope.procedureData = [];\n          }\n\n          $scope.$broadcast(Event.WORKORDERTYPEINIT, $scope.procedureData);\n        }\n      });\n    }\n\n    ;\n\n    function init() {\n      if (!userLoginUIService.user.isAuthenticated) {\n        $scope.$on('loginStatusChanged', function (evt, d) {\n          if (userLoginUIService.user.isAuthenticated) {\n            getSupplier();\n            getUserGroup();\n            getUser();\n            initProcessDefinitions();\n          }\n        });\n      } else {\n        getSupplier();\n        getUserGroup();\n        getUser();\n        initProcessDefinitions();\n      }\n    }\n\n    init();\n  }]);\n  controllers.initController('workFlowCtrl', ['$scope', '$q', 'ticketCategoryService', '$location', 'workflowService', '$timeout', 'userRoleUIService', 'kpiDataService', 'resourceUIService', 'growl', 'userLoginUIService', 'processService', 'userEnterpriseService', 'Info', '$route', 'commonMethodService', function ($scope, q, ticketCategoryService, $location, workflowService, $timeout, userRoleUIService, kpiDataService, resourceUIService, growl, userLoginUIService, processService, userEnterpriseService, Info, $route, cmd) {\n    $scope.workOrderType = \"\";\n    $scope.flows = \"\";\n    var uuid = Math.uuid();\n    var cmdins = new cmd(); //一些下拉框的model值选择\n\n    $scope.flowList = {\n      \"workflowId\": \"\",\n      \"category\": \"\",\n      \"userSelect\": \"\",\n      \"roleSelect\": \"\",\n      \"expressionSelect\": \"\",\n      \"userType\": \"\",\n      \"taskId\": \"\",\n      \"assignedUser\": \"\",\n      \"roleUser\": [],\n      \"allUser\": {},\n      \"groupUser\": {},\n      \"taskArry\": {}\n    };\n    $scope.handerConfsData = {};\n    var defers = [];\n\n    for (var i = 0; i < 1; i++) {\n      defers.push(q.defer());\n    }\n\n    $scope.configureFlow = [];\n    $scope.flowListDic = {};\n\n    var updateView = function updateView(param, fun) {\n      var handerConfsList = [];\n      var handerConfs = $scope.handerConfsData;\n\n      for (var i in handerConfs) {\n        /* if(handerConfs[i].userType == \"role\"){\n         if($scope.flowList.roleUser <= 0){\n         growl.warning(\"您的'\"+handerConfs[i].taskName+\"'任务下面角色没有用户请去用户管理分配\",{});\n         return;\n         }\n         }else if(handerConfs[i].userType == \"groupUser\"){\n         if($scope.flowList.roleUser <= 0){\n         growl.warning(\"您的'\"+handerConfs[i].taskName+\"'任务下面用户组没有用户请去用户组管理分配\",{});\n         return;\n         }\n         }*/\n        handerConfsList.push(handerConfs[i]);\n      }\n\n      param.handerConfs = handerConfsList;\n\n      if (param.isEdit == 3) {\n        param.id = 0;\n      }\n\n      ticketCategoryService.saveTicketCategory(param, function (returnObj) {\n        if (returnObj.code == 0) {\n          if (param.isEdit == 3) {\n            for (var i in $scope.configureFlow) {\n              if ($scope.configureFlow[i].isEdit == 3) {\n                $scope.configureFlow[i].isEdit = 0;\n                $scope.configureFlow[i] = returnObj.data;\n                break;\n              }\n            }\n          } else {\n            for (var i = $scope.configureFlow.length - 1; i > -1; i--) {\n              if ($scope.configureFlow[i].id == returnObj.data.id) {\n                $scope.configureFlow[i] = returnObj.data;\n              }\n            }\n          }\n\n          $scope.$broadcast('WORKFLOW', $scope.configureFlow);\n\n          if (param.id > 0) {\n            growl.success(\"编辑成功\");\n          } else {\n            growl.success(\"添加成功\");\n          }\n        }\n      });\n    }; //通过角色id查用户\n\n\n    $scope.roleIdUser = function () {\n      var roleId = $scope.handerConfsData[$scope.flowList.taskId].roleIds;\n      var rList = {\n        \"roleID\": roleId\n      };\n      userRoleUIService.getAssociateRole2User(rList, function (res) {\n        if (res.code == 0) {\n          res.data.forEach(function (ele) {\n            var customNameArr = cmdins.getdomainNameHandler(ele.domains, []);\n            var customName = \"\";\n\n            for (var i = 0; i < customNameArr.length; i++) {\n              customName += customNameArr[i] + \"/\";\n            }\n\n            ele.customName = customName;\n          });\n          $scope.flowList.roleUser = res.data;\n        }\n      });\n    }; //获取当前用户下面的所有用户\n\n\n    $scope.allUser = function () {\n      userEnterpriseService.queryEnterpriseUser(function (res) {\n        if (res.code == 0) {\n          for (var i in res.data) {\n            $scope.flowList.allUser[res.data[i].userID] = res.data[i];\n          }\n        }\n      });\n    }; //获取当前用户下面的所有角色\n\n\n    $scope.flowList.allRoles = {};\n\n    $scope.allRole = function () {\n      userEnterpriseService.queryEnterpriseRole(function (res) {\n        if (res.code == 0) {\n          for (var i in res.data) {\n            $scope.flowList.allRoles[res.data[i].roleID] = res.data[i];\n          }\n        }\n      });\n    }; //获取用户组用户\n\n\n    $scope.allGroupUser = function () {\n      var groupId = $scope.handerConfsData[$scope.flowList.taskId].userGroupIds;\n      userEnterpriseService.queryGroupUser(groupId, function (res) {\n        if (res.code == 0) {\n          $scope.flowList.groupUser = res.data;\n        }\n      });\n    };\n\n    $scope.addViews = function () {\n      var newObj = {\n        id: uuid,\n        workflowId: \"\",\n        name: \"\",\n        desc: \"\",\n        category: \"\",\n        createTime: new Date(),\n        //handerConfs:\"\",\n        isEdit: 3\n      };\n      $scope.flowList.category = \"\";\n      $scope.flowList.workflowId = \"\";\n\n      for (var i in $scope.configureFlow) {\n        if ($scope.configureFlow[i].id == null || $scope.configureFlow[i].isEdit > 1) {\n          growl.warning(\"当前有未保存的数据，请先保存\", {});\n          return;\n        }\n      }\n\n      $scope.configureFlow.push(newObj);\n      $scope.$broadcast('WORKFLOW', $scope.configureFlow);\n    };\n\n    $scope.doAction = function (flg, rowData, fun) {\n      if (flg == \"attr-delete\") {\n        //删除\n        BootstrapDialog.show({\n          title: '提示',\n          closable: false,\n          //size:BootstrapDialog.SIZE_WIDE,\n          message: '确认删除流程关联吗？',\n          buttons: [{\n            label: '确定',\n            cssClass: 'btn-success',\n            action: function action(dialogRef) {\n              ticketCategoryService.deleteTicketCategoryById([rowData.id], function (returnObj) {\n                if (returnObj.code == 0) {\n                  for (var i = 0; i < $scope.configureFlow.length; i++) {\n                    if ($scope.configureFlow[i].id == rowData.id) {\n                      $scope.configureFlow.splice(i, 1);\n                      break;\n                    }\n                  }\n\n                  if (fun) {\n                    fun(true);\n                  }\n\n                  growl.success(\"流程关联删除成功\", {});\n                }\n              });\n              dialogRef.close();\n            }\n          }, {\n            label: '取消',\n            action: function action(dialogRef) {\n              dialogRef.close();\n            }\n          }]\n        });\n      } else if (flg == \"view-save\") {\n        updateView(rowData, fun);\n      } else if (flg == \"cancel\") {\n        ticketCategoryService.getTicketCategorys(function (returnObj) {\n          if (returnObj.code == 0) {\n            $scope.configureFlow = returnObj.data;\n            $scope.$broadcast('WORKFLOW', $scope.configureFlow);\n          }\n        });\n      }\n    };\n\n    $scope.tabStatus = function (type, handerConfsData) {\n      if (handerConfsData) {\n        $scope.handerConfsData = handerConfsData;\n\n        if (type == \"role\") {\n          /**\n           * 现在实现的是按照所选当前的节点开始加载的数据\n           * 之前是一次性全部加载的 把这个方法注释了\n           * 韩星\n           */\n          $scope.$broadcast(\"handerConfsData\", handerConfsData[$scope.flowList.taskId]); // $scope.roleIdUser();\n        } else if (type == \"user\") {\n          var userAssigned = $scope.handerConfsData[$scope.flowList.taskId].userIds;\n          $scope.flowList.assignedUser = $scope.flowList.allUser[userAssigned].userName;\n        } else if (type == \"group\") {\n          $scope.allGroupUser();\n        } else if (type == \"expression\") {\n          var userExpressionOfCategory = $scope.handerConfsData[$scope.flowList.taskId].userExpressionOfCategory;\n\n          if (userExpressionOfCategory == \"\" || userExpressionOfCategory == null) {\n            $scope.handerConfsData[$scope.flowList.taskId].userExpressionOfCategory = $scope.handerConfsData[$scope.flowList.taskId].userExpression;\n          }\n        }\n      }\n    };\n\n    $scope.initEvent = function () {\n      $('a[data-toggle=\"tab\"]').on('shown.bs.tab', function (e) {\n        var userType = $(e.target).attr(\"userType\");\n        var taskId = $(e.target).attr(\"taskId\");\n        $scope.flowList.userType = userType;\n        $scope.flowList.taskId = taskId;\n        $scope.tabStatus(userType, $scope.handerConfsData);\n        $scope.$apply();\n      });\n    };\n\n    function initViews() {\n      //查询所有已经发布的流程\n      workflowService.getWorkflows(function (returnObj) {\n        if (returnObj.code == 0) {\n          if (returnObj.data && returnObj.data != undefined) {\n            for (var i in returnObj.data) {\n              $scope.flowListDic[returnObj.data[i].id] = returnObj.data[i];\n            }\n          }\n\n          $scope.flows = returnObj.data;\n          defers[0].resolve(\"success\");\n        }\n      });\n      Info.get(\"localdb/procedure.json\", function (info) {\n        $scope.workOrderType = $scope.myDicts['ticketCategory']; //工单分类枚举\n      });\n    }\n\n    var promises = [];\n\n    for (var i in defers) {\n      promises.push(defers[i].promise);\n    }\n\n    q.all(promises).then(function (data) {\n      //查询所有分类跟流程关联的数据\n      ticketCategoryService.getTicketCategorys(function (returnObj) {\n        if (returnObj.code == 0) {\n          $scope.configureFlow = returnObj.data;\n          $scope.$broadcast('WORKFLOW', $scope.configureFlow);\n        }\n      });\n      $scope.allUser();\n      $scope.allRole();\n    });\n    initViews();\n  }]);\n});"],"sourceRoot":"/source/"}