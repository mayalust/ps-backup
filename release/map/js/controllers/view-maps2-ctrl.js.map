{"version":3,"sources":["js/controllers/view-maps2-ctrl.js"],"names":["define","controllers","initController","$scope","kpiDataService","SwSocket","Info","alertService","console","info","dashboardOption","backgroundColor","title","text","subtext","sublink","left","textStyle","color","tooltip","trigger","formatter","obj","seriesName","value","bmap","center","zoom","roam","mapStyle","styleJson","series","name","type","coordinateSystem","data","symbolSize","val","showEffectOn","rippleEffect","brushType","hoverAnimation","label","normal","position","show","itemStyle","shadowBlur","shadowColor","get","styleJson_blue","$on","Event","CMDBINFOS4MAPINIT","event","args","params","nodeIds","groupKey","i","option","values","hasOwnProperty","push","id","addObj","longitude","latitude","toString","states","countFromCache","returnObj","code","groupCountMap","total","$broadcast","ECHARTMAPINFOSINIT","$attrs","$parse","startPoint","x","y","$watch","ngModel","newValue","init"],"mappings":"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","file":"js/controllers/view-maps2-ctrl.js","sourcesContent":["define(['controllers/controllers'], function (controllers) {\n  'use strict';\n\n  controllers.initController('ViewMaps2Ctrl', ['$scope', 'kpiDataService', 'SwSocket', 'Info', 'alertService', function ($scope, kpiDataService, SwSocket, Info, alertService) {\n    console.info(\"切换布局地图\");\n    var dashboardOption = {\n      backgroundColor: '#404a59',\n      title: {\n        text: '',\n        subtext: '',\n        sublink: '',\n        left: 'center',\n        textStyle: {\n          color: '#fff'\n        }\n      },\n      tooltip: {\n        trigger: 'item',\n        formatter: function formatter(obj) {\n          return obj.seriesName + ':' + obj.value[2];\n        }\n      },\n      bmap: {\n        center: [104.114129, 37.550339],\n        zoom: 5,\n        roam: true,\n        mapStyle: {\n          styleJson: []\n        }\n      },\n      series: [{\n        name: '告警数',\n        type: 'effectScatter',\n        coordinateSystem: 'bmap',\n        data: [],\n        symbolSize: function symbolSize(val) {\n          if (val) return val[2] > 20 ? 20 : val[2] < 10 ? 10 : val[2];else return 0;\n        },\n        showEffectOn: 'render',\n        rippleEffect: {\n          brushType: 'stroke'\n        },\n        hoverAnimation: true,\n        label: {\n          normal: {\n            formatter: '{b}',\n            position: 'right',\n            show: true\n          }\n        },\n        itemStyle: {\n          normal: {\n            color: function color(val) {\n              if (val) return val.value[2] > 0 ? '#d73925' : '#e08e0b';else return '#e08e0b';\n            },\n            shadowBlur: 10,\n            shadowColor: '#333'\n          }\n        }\n      }]\n    };\n    var info = Info.get(\"../localdb/echarts-map.json\", function (info) {\n      dashboardOption.bmap.mapStyle.styleJson = info.styleJson_blue;\n    });\n    $scope.$on(Event.CMDBINFOS4MAPINIT, function (event, args) {\n      var params = {};\n      params.nodeIds = [];\n      params.groupKey = 'nodeId';\n      dashboardOption.series[0].data = [];\n\n      for (var i in args.option[0]) {\n        var obj = args.option[0][i];\n\n        if (obj.values.hasOwnProperty(\"longitude\")) {\n          params.nodeIds.push(obj.id);\n          var addObj = {\n            name: obj.label,\n            id: obj.id,\n            value: [obj.values.longitude, obj.values.latitude, 0]\n          };\n          dashboardOption.series[0].data.push(addObj);\n        }\n      }\n\n      params.nodeIds = params.nodeIds.toString(); //\t\t\t\tparams.nodeIds=\"\";\n\n      params.states = \"0\";\n      alertService.countFromCache(params, function (returnObj) {\n        if (returnObj.code == 0) {\n          for (var i in dashboardOption.series[0].data) {\n            var obj = dashboardOption.series[0].data[i];\n\n            if (returnObj.data.groupCountMap[obj.id]) {\n              obj.value[2] = returnObj.data.groupCountMap[obj.id].total;\n            }\n          }\n\n          $scope.$broadcast(Event.ECHARTMAPINFOSINIT, {\n            \"option\": dashboardOption\n          });\n        }\n      });\n    });\n  }]);\n  controllers.initController('ViewMaps3Ctrl', ['$scope', '$attrs', '$parse', 'kpiDataService', 'SwSocket', 'Info', 'alertService', function ($scope, $attrs, $parse, kpiDataService, SwSocket, Info, alertService) {\n    console.info(\"切换布局地图\");\n    var ngModelGetter = $parse($attrs['ngModel']);\n    var zoom = 18;\n\n    if ($attrs['zoom']) {\n      zoom = $attrs['zoom'];\n    }\n\n    var startPoint = {\n      x: 104.114129,\n      y: 37.550339\n    };\n    var dashboardOption = {\n      backgroundColor: '#404a59',\n      title: {\n        text: '',\n        subtext: '',\n        sublink: '',\n        left: 'center',\n        textStyle: {\n          color: '#fff'\n        }\n      },\n      tooltip: {\n        trigger: 'item',\n        formatter: function formatter(obj) {\n          return obj.seriesName;\n        }\n      },\n      bmap: {\n        center: [startPoint.x, startPoint.y],\n        zoom: zoom,\n        roam: true,\n        mapStyle: {\n          styleJson: []\n        }\n      },\n      series: [{\n        name: '位置',\n        type: 'effectScatter',\n        coordinateSystem: 'bmap',\n        data: [],\n        symbolSize: function symbolSize(val) {\n          if (val) return val[2] > 20 ? 20 : val[2] < 10 ? 10 : val[2];else return 0;\n        },\n        showEffectOn: 'render',\n        rippleEffect: {\n          brushType: 'stroke'\n        },\n        hoverAnimation: true,\n        label: {\n          normal: {\n            formatter: '{b}',\n            position: 'right',\n            show: true\n          }\n        },\n        itemStyle: {\n          normal: {\n            color: '#ff0000',\n            shadowBlur: 10,\n            shadowColor: '#333'\n          }\n        }\n      }]\n    };\n    var info = Info.get(\"../localdb/echarts-map.json\", function (info) {\n      dashboardOption.bmap.mapStyle.styleJson = info.styleJson_blue;\n    });\n    $scope.$watch($attrs.ngModel, function (newValue) {\n      $scope.init(newValue);\n    });\n\n    $scope.init = function (obj) {\n      if (obj.values.hasOwnProperty(\"longitude\")) {\n        var addObj = {\n          name: obj.label,\n          id: obj.id,\n          value: [obj.values.longitude, obj.values.latitude, 0]\n        };\n        startPoint.x = obj.values.longitude;\n        startPoint.y = obj.values.latitude;\n        dashboardOption.bmap.center = [startPoint.x, startPoint.y];\n        dashboardOption.series[0].data.push(addObj);\n      }\n\n      $scope.$broadcast(Event.ECHARTMAPINFOSINIT, {\n        \"option\": dashboardOption\n      });\n    };\n  }]);\n});"],"sourceRoot":"/source/"}