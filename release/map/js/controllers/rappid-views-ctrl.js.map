{"version":3,"sources":["js/controllers/rappid-views-ctrl.js"],"names":["define","controllers","initController","$scope","viewFlexService","$timeout","growl","dialogue","getAllMyViews","returnObj","code","configureViews","data","filter","elem","viewType","viewlist","source","header","label","icon","type","class","style","margin","events","click","event","newGraph","rs","find","some","element","viewTitle","inx","fnlist","width","border-radius","font-size","font-weight","padding","fn","param","input","value","viewHierarchy","description","addView","success","close","location","href","viewId","open","title","composory","placeholder","onChange","this","disabled","error","visible","selected","self","viewIds","map","viewTitles","deleteViews","i","toString","remove","columnDefs","filterable","sortable","format","str","options","updateView","date","hierarchy","duplicateNameBase","duplicateName","content","insertAfter"],"mappings":"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","file":"js/controllers/rappid-views-ctrl.js","sourcesContent":["define(['controllers/controllers', 'Array'], function (controllers) {\n  'use strict';\n\n  controllers.initController('RappidViewsCtrl', ['$scope', 'viewFlexService', '$timeout', 'growl', 'dialogue', function ($scope, viewFlexService, $timeout, growl, dialogue) {\n    function initViews() {\n      var getAllMyViews_callback = function getAllMyViews_callback(returnObj) {\n        if (returnObj.code == 0) {\n          var configureViews = returnObj.data.filter(function (elem) {\n            return elem.viewType == \"configure\";\n          });\n\n          var addNewClick = function addNewClick() {\n            var self = event;\n            var newGraph = \"新建组态视图\";\n            var rs = newGraph;\n            var find = $scope.viewlist.source.some(function (element) {\n              return newGraph == element.viewTitle;\n            });\n\n            if (find) {\n              var inx = 1;\n\n              while (find) {\n                rs = newGraph + inx;\n                inx++;\n                find = $scope.viewlist.source.some(function (element) {\n                  return rs == element.viewTitle;\n                });\n              }\n            }\n\n            var fnlist = [{\n              label: '创建组态视图',\n              icon: 'btn btn-success',\n              style: {\n                width: '50%',\n                'border-radius': 0,\n                'font-size': '18px',\n                'font-weight': 'bold',\n                'padding': 10\n              },\n              fn: function fn(event) {\n                var param = {\n                  viewType: \"configure\",\n                  viewTitle: event.input[0].value,\n                  viewHierarchy: event.input[1].value,\n                  description: event.input[2].value\n                };\n                viewFlexService.addView(param, function (event) {\n                  if (event.code == 0) {\n                    growl.success(\"复制组态视图[\" + event.data.viewTitle + \"]成功\", {});\n                    dialogue.close();\n                    location.href = \"../app-configure/index.html#/configure/\" + event.data.viewId;\n                  }\n                });\n              }\n            }, {\n              label: '取消',\n              icon: 'btn btn-default',\n              style: {\n                width: '50%',\n                'border-radius': 0,\n                'font-size': '18px',\n                'font-weight': 'bold',\n                'padding': 10\n              },\n              fn: function fn() {\n                dialogue.close();\n              }\n            }];\n            dialogue.open({\n              title: {\n                label: '新建组态视图'\n              },\n              input: [{\n                value: rs,\n                composory: true,\n                type: \"input\",\n                label: '组态视图名称',\n                placeholder: '组态视图名称',\n                onChange: function onChange(event) {\n                  var value = this.value;\n                  var find = $scope.viewlist.source.find(function (element) {\n                    return element.viewTitle == value;\n                  });\n\n                  if (find) {\n                    event.error = \"此视图名已被占用，请更换.\";\n                    fnlist[0].disabled = true;\n                  } else {\n                    if (value == \"\") {\n                      event.error = \"视图名不可为空.\";\n                      fnlist[0].disabled = true;\n                    } else {\n                      event.error = null;\n                      fnlist[0].disabled = false;\n                    }\n                  }\n                }\n              }, {\n                value: \"\",\n                type: \"input\",\n                composory: false,\n                label: '视图层级',\n                placeholder: '层级结构，例如 0/1'\n              }, {\n                value: \"描述信息\",\n                type: \"textarea\",\n                composory: false,\n                label: '描述信息',\n                placeholder: '新视图名称'\n              }],\n              fnlist: fnlist\n            });\n          };\n\n          var removeGraph = function removeGraph(event) {\n            var self = event;\n            var viewIds = event.map(function (elem) {\n              return elem.viewId;\n            });\n            var viewTitles = event.map(function (elem) {\n              return elem.viewTitle;\n            });\n            var fnlist = [{\n              label: '是',\n              icon: 'btn btn-success',\n              style: {\n                width: '50%',\n                'border-radius': 0,\n                'font-size': '18px',\n                'font-weight': 'bold',\n                'padding': 10\n              },\n              fn: function fn() {\n                dialogue.close();\n                viewFlexService.deleteViews(viewIds, function (event) {\n                  if (event.code == 0) {\n                    growl.success(\"组态视图 [ \" + viewTitles.toString() + \" ] 删除成功\", {});\n\n                    for (var i in self) {\n                      self[i].remove();\n                    }\n\n                    ;\n                  }\n                });\n              }\n            }, {\n              label: '否',\n              icon: 'btn btn-default',\n              style: {\n                width: '50%',\n                'border-radius': 0,\n                'font-size': '18px',\n                'font-weight': 'bold',\n                'padding': 10\n              },\n              fn: function fn() {\n                dialogue.close();\n              }\n            }];\n            dialogue.open({\n              title: {\n                label: '删除组态视图'\n              },\n              description: {\n                label: '确认要删除组态视图   [ ' + viewTitles.toString() + ' ]  吗？'\n              },\n              fnlist: fnlist\n            });\n          };\n\n          var designClick = function designClick(event) {\n            location.href = \"../app-configure/index.html#/configure/\" + event.viewId;\n          };\n\n          var viewClick = function viewClick(event) {\n            location.href = \"../app-configure/index.html#/display/\" + event.viewId;\n          };\n\n          var editClick = function editClick(event) {\n            var self = event;\n            var fnlist = [{\n              label: '编辑组态视图',\n              icon: 'btn btn-success',\n              style: {\n                width: '50%',\n                'border-radius': 0,\n                'font-size': '18px',\n                'font-weight': 'bold',\n                'padding': 10\n              },\n              fn: function fn(event) {\n                var param = {\n                  viewType: \"configure\",\n                  viewId: self.viewId,\n                  viewTitle: event.input[0].value,\n                  viewHierarchy: event.input[1].value,\n                  description: event.input[2].value\n                };\n                viewFlexService.updateView(param, function (event) {\n                  if (event.code == 0) {\n                    growl.success(\"更新组态视图[\" + event.data.viewTitle + \"]成功\", {});\n                    dialogue.close();\n                    self.description = event.date.description;\n                    self.hierarchy = event.date.hierarchy;\n                  }\n                });\n              }\n            }, {\n              label: '取消',\n              icon: 'btn btn-default',\n              style: {\n                width: '50%',\n                'border-radius': 0,\n                'font-size': '18px',\n                'font-weight': 'bold',\n                'padding': 10\n              },\n              fn: function fn() {\n                dialogue.close();\n              }\n            }];\n            dialogue.open({\n              title: {\n                label: '编辑视图信息'\n              },\n              input: [{\n                value: event.viewTitle,\n                composory: true,\n                type: \"input\",\n                label: '组态视图名称',\n                placeholder: '组态视图名称',\n                onChange: function onChange(event) {\n                  var value = this.value;\n                  var find = $scope.viewlist.source.find(function (element) {\n                    return element.viewTitle == value && element.viewTitle != event.viewTitle;\n                  });\n\n                  if (find) {\n                    event.error = \"名已被占用，请更换.\";\n                    fnlist[0].disabled = true;\n                  } else {\n                    if (value == \"\") {\n                      event.error = \"视图名不可为空.\";\n                      fnlist[0].disabled = true;\n                    } else {\n                      event.error = null;\n                      fnlist[0].disabled = false;\n                    }\n                  }\n                }\n              }, {\n                value: event.viewHierarchy,\n                type: \"input\",\n                composory: false,\n                label: '视图层级',\n                placeholder: '层级结构，例如 0/1'\n              }, {\n                value: event.description,\n                type: \"textarea\",\n                composory: false,\n                label: '描述信息',\n                placeholder: '新视图名称'\n              }],\n              fnlist: fnlist\n            });\n          };\n\n          var deleteClick = function deleteClick(event) {\n            var self = event;\n            var viewId = event.viewId;\n            var viewTitle = event.viewTitle;\n            var fnlist = [{\n              label: '是',\n              icon: 'btn btn-success',\n              style: {\n                width: '50%',\n                'border-radius': 0,\n                'font-size': '18px',\n                'font-weight': 'bold',\n                'padding': 10\n              },\n              fn: function fn() {\n                dialogue.close();\n                viewFlexService.deleteViews([viewId], function (event) {\n                  if (event.code == 0) {\n                    growl.success(\"组态视图 [ \" + viewTitle + \" ] 删除成功\", {});\n                    self.remove(); //getViews();\n                  }\n                });\n              }\n            }, {\n              label: '否',\n              icon: 'btn btn-default',\n              style: {\n                width: '50%',\n                'border-radius': 0,\n                'font-size': '18px',\n                'font-weight': 'bold',\n                'padding': 10\n              },\n              fn: function fn() {\n                dialogue.close();\n              }\n            }];\n            dialogue.open({\n              title: {\n                label: '删除组态视图'\n              },\n              description: {\n                label: '确认要删除组态视图   [ ' + viewTitle + ' ]  吗？'\n              },\n              fnlist: fnlist\n            });\n          };\n\n          var duplicateClick = function duplicateClick(event) {\n            var self = event;\n            var duplicateNameBase = event.viewTitle + \"_复制\";\n            var duplicateName = duplicateNameBase;\n            var content = event.content;\n            var find = $scope.viewlist.source.some(function (element) {\n              return duplicateName == element.viewTitle;\n            });\n\n            if (find) {\n              var inx = 1;\n\n              while (find) {\n                duplicateName = duplicateNameBase + inx;\n                inx++;\n                find = $scope.viewlist.source.some(function (element) {\n                  return duplicateName == element.viewTitle;\n                });\n              }\n            }\n\n            var fnlist = [{\n              label: '创建',\n              icon: 'btn btn-success',\n              style: {\n                width: '50%',\n                'border-radius': 0,\n                'font-size': '18px',\n                'font-weight': 'bold',\n                'padding': 10\n              },\n              fn: function fn(event) {\n                var param = {\n                  viewType: \"configure\",\n                  viewTitle: event.input[0].value,\n                  content: content\n                };\n                viewFlexService.addView(param, function (event) {\n                  if (event.code == 0) {\n                    growl.success(\"复制组态视图[\" + event.data.viewTitle + \"]成功\", {});\n                    dialogue.close();\n                    self.insertAfter(event.data);\n                  }\n                });\n              }\n            }, {\n              label: '取消',\n              icon: 'btn btn-default',\n              style: {\n                width: '50%',\n                'border-radius': 0,\n                'font-size': '18px',\n                'font-weight': 'bold',\n                'padding': 10\n              },\n              fn: function fn() {\n                dialogue.close();\n              }\n            }];\n            dialogue.open({\n              title: {\n                label: '复制视图'\n              },\n              input: [{\n                value: duplicateName,\n                composory: true,\n                label: '新视图名称',\n                placeholder: '新视图名称',\n                onChange: function onChange(event) {\n                  var value = this.value;\n                  var find = $scope.viewlist.source.find(function (element) {\n                    return element.viewTitle == value;\n                  });\n\n                  if (find) {\n                    event.error = \"此视图名已被占用，请更换.\";\n                    fnlist[0].disabled = true;\n                  } else {\n                    if (value == \"\") {\n                      event.error = \"视图名不可为空.\";\n                      fnlist[0].disabled = true;\n                    } else {\n                      event.error = null;\n                      fnlist[0].disabled = false;\n                    }\n                  }\n                }\n              }],\n              fnlist: fnlist\n            });\n          };\n\n          $scope.viewlist = {\n            source: configureViews,\n            header: [{\n              label: \"新建组态视图\",\n              icon: \"fa fa-plus\",\n              type: \"button\",\n              class: \"btn btn-primary btn-sm\",\n              style: {\n                margin: \"2px\"\n              },\n              events: {\n                click: addNewClick\n              }\n            }, {\n              label: \"删除\",\n              icon: \"fa fa-plus\",\n              type: \"button\",\n              visible: function visible(event) {\n                var some = event.some(function (elem) {\n                  return elem.selected == true;\n                });\n                return !some;\n              },\n              class: \"btn btn-default btn-sm\",\n              style: {\n                margin: \"2px\"\n              },\n              events: {\n                click: removeGraph\n              }\n            }],\n            columnDefs: [{\n              label: \"视图名称\",\n              data: \"viewTitle\",\n              type: \"text\",\n              filterable: true,\n              sortable: true\n            }, {\n              label: \"视图层级\",\n              data: \"viewHierarchy\",\n              type: \"text\",\n              filterable: true,\n              sortable: true\n            }, {\n              label: \"视图描述\",\n              data: \"description\",\n              type: \"text\",\n              format: function format(str) {\n                if (str == null) {\n                  return '-';\n                } else {\n                  return str;\n                }\n              },\n              filterable: true,\n              sortable: true\n            }, {\n              label: \"创建时间\",\n              data: \"createTime\",\n              type: \"date\",\n              format: \"yy-mm-dd, hh:nn:ss\",\n              filterable: false,\n              sortable: true\n            }, {\n              label: \"更新时间\",\n              data: \"updateTime\",\n              type: \"date\",\n              format: \"yy-mm-dd, hh:nn:ss\",\n              filterable: false,\n              sortable: true\n            }, {\n              label: \"操作\",\n              width: 141,\n              type: \"buttonGroup\",\n              filterable: false,\n              sortable: false,\n              options: [{\n                label: \"设计\",\n                type: \"button\",\n                class: \"btn btn-primary\",\n                events: {\n                  click: designClick\n                }\n              }, {\n                label: \"查看\",\n                type: \"button\",\n                events: {\n                  click: viewClick\n                }\n              }, {\n                label: \"编辑\",\n                type: \"button\",\n                events: {\n                  click: editClick\n                }\n              }, {\n                label: \"删除\",\n                type: \"button\",\n                events: {\n                  click: deleteClick\n                }\n              }, {\n                label: \"复制\",\n                type: \"button\",\n                events: {\n                  click: duplicateClick\n                }\n              }]\n            }]\n          };\n          /**\n           $scope.$broadcast('RAPPIDVIEWS', {\n            \"data\": $scope.configureView\n          });\n           */\n        }\n      };\n\n      viewFlexService.getAllMyViews(getAllMyViews_callback);\n    }\n\n    initViews();\n  }]);\n});"],"sourceRoot":"/source/"}