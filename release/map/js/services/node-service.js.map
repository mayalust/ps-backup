{"version":3,"sources":["js/services/node-service.js"],"names":["define","services","factory","serviceProxy","$http","base","host","window","location","hostname","port","post","method","param","callback","failure","url","JSON","stringify","then","e","status","data","service","init","a","b","i","extend","prototype","login","params","getAllUnits","queryDomainTree","getCurrentUser"],"mappings":"AAAAA,OAAO,CAAC,2BAA4B,SAAUC,GAC5C,aAEAA,EAASC,QAAQ,cAAe,CAAC,eAAgB,QAAS,SAAUC,EAAcC,GAEhF,IAAIC,EAAO,aACPC,EAAOC,OAAOC,SAASC,SACvBC,EAAO,KAQX,SAASC,EAAKC,EAAQC,EAAOC,EAAUC,GACrC,IAAIC,EAAM,UAAYV,EAAO,IAAMI,EAAOL,EAAOO,EAE7B,mBAATC,IACTC,EAAWD,EACXA,EAAQ,MAGVA,EAAQI,KAAKC,UAAUL,GACbT,EAAMO,KAAKK,EAAKH,GACtBM,KAAK,SAAUC,GACD,KAAZA,EAAEC,QACJP,EAASM,EAAEE,QAKjB,SAASC,IACP,OAAO,IAAIA,EAAQC,KA2BrB,OAnDA,SAAgBC,EAAGC,GACjB,IAAK,IAAIC,KAAKD,EACZD,EAAEE,GAAKD,EAAEC,GA2CbC,EAlBAL,EAAQC,KAAO,cAkBKK,UAAW,CAC7BC,MAjBF,SAAeC,EAAQjB,GACrBH,EAAK,QAASoB,EAAQjB,IAiBtBkB,YAVF,SAAqBlB,GACnBH,EAAK,cAAeG,IAUpBmB,gBAPF,SAAyBnB,GACvBH,EAAK,kBAAmBG,IAOxBoB,eAhBF,SAAwBpB,GACtBH,EAAK,iBAAkBG,MAiBlBS","file":"js/services/node-service.js","sourcesContent":["define(['../services/services.js'], function (services) {\n  'use strict';\n\n  services.factory('nodeService', ['serviceProxy', '$http', function (serviceProxy, $http) {\n    /** 用于调用经过NODEJS合并作为中间层的请求 */\n    var base = \"/api/node/\";\n    var host = window.location.hostname;\n    var port = 8081;\n\n    function extend(a, b) {\n      for (var i in b) {\n        a[i] = b[i];\n      }\n    }\n\n    function post(method, param, callback, failure) {\n      var url = \"http://\" + host + \":\" + port + base + method;\n\n      if (typeof param == \"function\") {\n        callback = param;\n        param = null;\n      }\n\n      param = JSON.stringify(param);\n      var req = $http.post(url, param);\n      req.then(function (e) {\n        if (e.status == 200) {\n          callback(e.data);\n        }\n      });\n    }\n\n    function service() {\n      return new service.init();\n    }\n\n    service.init = function () {};\n\n    function login(params, callback) {\n      post(\"login\", params, callback);\n    }\n\n    function getCurrentUser(callback) {\n      post(\"getCurrentUser\", callback);\n    }\n\n    function getAllUnits(callback) {\n      post(\"getAllUnits\", callback);\n    }\n\n    function queryDomainTree(callback) {\n      post(\"queryDomainTree\", callback);\n    }\n\n    extend(service.init.prototype, {\n      login: login,\n      getAllUnits: getAllUnits,\n      queryDomainTree: queryDomainTree,\n      getCurrentUser: getCurrentUser\n    });\n    return service;\n  }]);\n});"],"sourceRoot":"/source/"}