{"version":3,"sources":["js/services/kpidata-flex-service.js"],"names":["define","services","factory","serviceProxy","service","base","includeFields","toString","getRealTimeKpiData","nodeIds","kpiCodes","callBack","includeInstance","extendstr","error","p","isRealTimeData","timePeriod","get","queryDeviceData","kpiQueryModel","getRealTimeKpiDataWithKpiInfo","category","startTime","endTime","timeRange","statisticType","condList","getKpiHierarchyValueList","exportKpiValueList","kpiQueryObj","getValueList","param","returnObj","getKpiValList","a","b","i","extend","getKpiValueList","handlerObj","code","data","recordList","source","nodesDic","kpisDic","kpisNDic","insDic","mergeKpiValue","kpiObj","config","datavalue","length","arisingMS","newDateJson","arisingTime","getTime","milliseconds","time","minTimespan","instance","nodeId","kpiCode","value","obj","push","label","name","getChartProperty","item","key","properties","pt","getKpisInfo","kpiName2Code","displayKpi","dataSource","displayKpiSet","jQuery","isArray","subDisplayKpi","Number","getNodesInfo","filters","filter","filterObj","type","tmpNodeIds","split","j","mergeKpiHandler"],"mappings":"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","file":"js/services/kpidata-flex-service.js","sourcesContent":["define(['../services/services.js'], function (services) {\n  'use strict';\n\n  services.factory('kpiDataService', ['serviceProxy', function (serviceProxy) {\n    var service = {};\n    var base = \"kpiDataFlexService\";\n    var include = [\"arisingTime\", \"granularityUnit\", \"instance\", \"kpiCode\", \"modelId\", \"nodeId\", \"value\"];\n    var includeFields = \"includeFields=\" + include.toString();\n    /**\n     * 获得当前KPI数据，适用于一个数据展示的组件，如饼图、仪表盘、节点告警状态等。\n     * @param {Array} nodeIds 设备IDs\n     * @param {Array} kpiCodes KPIIDs\n     * @param {Function} callBack 回调方法\n     * @param {Boolean} includeInstance 是否能够查询实例，999999状态专用\n     */\n\n    service.getRealTimeKpiData = function (nodeIds, kpiCodes, callBack, includeInstance, extendstr, error) {\n      if (!extendstr) {\n        extendstr = includeFields;\n      }\n\n      var kpiQueryModel = {\n        isRealTimeData: true,\n        timePeriod: 0,\n        nodeIds: nodeIds,\n        kpiCodes: kpiCodes,\n        includeInstance: includeInstance\n      };\n      var p = [\"kpi\", kpiQueryModel];\n      serviceProxy.get(base, \"getKpiValueList\", p, callBack, error, extendstr);\n    };\n\n    service.queryDeviceData = function (kpiQueryModel, callBack, extendstr) {\n      if (!extendstr) {\n        extendstr = includeFields;\n      }\n\n      var p = [\"kpi\", kpiQueryModel];\n      serviceProxy.get(base, \"getKpiValueList\", p, callBack, null, extendstr);\n    };\n\n    service.getRealTimeKpiDataWithKpiInfo = function (nodeIds, kpiCodes, callBack) {\n      var kpiQueryModel = {\n        category: \"ci\",\n        isRealTimeData: true,\n        timePeriod: 0,\n        nodeIds: nodeIds,\n        kpiCodes: kpiCodes,\n        startTime: null,\n        endTime: null,\n        timeRange: \"\",\n        statisticType: \"psiot\",\n        condList: []\n      };\n      var p = [\"kpi\", kpiQueryModel];\n      serviceProxy.get(base, \"getKpiHierarchyValueList\", p, callBack);\n    };\n\n    service.getKpiHierarchyValueList = function (p, callBack) {\n      serviceProxy.get(base, \"getKpiHierarchyValueList\", p, callBack);\n    };\n\n    service.exportKpiValueList = function (kpiQueryObj, callBack) {\n      serviceProxy.get(base, \"exportKpiValueList\", kpiQueryObj, callBack);\n    };\n\n    service.getValueList = function (param, callBack, extendstr) {\n      if (!extendstr) {\n        extendstr = includeFields;\n      }\n\n      serviceProxy.get(base, \"getKpiValueList\", param, function (returnObj) {\n        callBack(returnObj);\n      }, null, extendstr);\n    };\n\n    function extend(a, b) {\n      for (var i in b) {\n        a[i] = b[i];\n      }\n\n      return a;\n    }\n\n    service.getKpiValList = function (param, callBack, extendstr) {\n      if (!extendstr) {\n        extendstr = includeFields;\n      }\n\n      var kpiQueryModel = {\n        category: \"time\",\n        isRealTimeData: true,\n        timePeriod: 0,\n        nodeIds: [],\n        kpiCodes: [],\n        startTime: null,\n        endTime: null,\n        timeRange: \"\",\n        statisticType: \"psiot\",\n        condList: []\n      };\n      kpiQueryModel = extend(kpiQueryModel, param);\n      serviceProxy.get(base, \"getKpiValueList\", [\"kpi\", kpiQueryModel], function (returnObj) {\n        callBack(returnObj);\n      }, null, extendstr);\n    };\n\n    service.getKpiValueList = function (p, callBack, extendstr) {\n      if (!extendstr) {\n        extendstr = includeFields;\n      }\n\n      var handlerObj = {\n        code: 0,\n        data: {\n          recordList: []\n        },\n        source: null,\n        nodesDic: {},\n        kpisDic: {},\n        kpisNDic: {},\n        insDic: {}\n      };\n\n      var mergeKpiValue = function mergeKpiValue(kpiObj, config) {\n        var datavalue = handlerObj.data.recordList[handlerObj.data.recordList.length - 1];\n        var arisingMS = newDateJson(kpiObj.arisingTime).getTime();\n\n        if (datavalue.milliseconds == 0) {\n          datavalue.milliseconds = arisingMS;\n          datavalue.arisingTime = kpiObj.arisingTime;\n          datavalue.time = kpiObj.arisingTime;\n        }\n\n        if (arisingMS < datavalue.milliseconds + config.kpisDic.minTimespan) {\n          if (kpiObj.instance) {\n            handlerObj.insDic[kpiObj.instance] = kpiObj.instance;\n            datavalue[kpiObj.nodeId + \"?\" + kpiObj.kpiCode + \"?\" + kpiObj.instance] = kpiObj.value;\n          } else {\n            datavalue[kpiObj.nodeId + \"?\" + kpiObj.kpiCode] = kpiObj.value;\n          }\n        } else {\n          var obj = {\n            milliseconds: arisingMS,\n            arisingTime: kpiObj.arisingTime,\n            time: kpiObj.arisingTime\n          };\n\n          if (kpiObj.instance) {\n            handlerObj.insDic[kpiObj.instance] = kpiObj.instance;\n            obj[kpiObj.nodeId + \"?\" + kpiObj.kpiCode + \"?\" + kpiObj.instance] = kpiObj.value;\n          } else {\n            obj[kpiObj.nodeId + \"?\" + kpiObj.kpiCode] = kpiObj.value;\n          }\n\n          handlerObj.data.recordList.push(obj);\n        }\n      };\n\n      serviceProxy.get(base, \"getKpiValueList\", p, function (returnObj) {\n        if (returnObj.code == 0) {\n          handlerObj.source = returnObj.data;\n          var config = p[1];\n\n          if (returnObj.data.length > 0) {\n            if (config.timePeriod > 0) {\n              var startTime = newDateJson(returnObj.data[0].arisingTime).getTime();\n              var endTime = newDateJson(returnObj.data[returnObj.data.length - 1].arisingTime).getTime();\n              var timespan = config.kpisDic.minTimespan;\n              var timeDiff = endTime - startTime;\n            }\n          }\n\n          for (var i in returnObj.data) {\n            var kpiObj = returnObj.data[i];\n            handlerObj.nodesDic[kpiObj.nodeId] = config.nodesDic[kpiObj.nodeId].label;\n            handlerObj.kpisDic[kpiObj.kpiCode] = config.kpisDic[kpiObj.kpiCode].label;\n            handlerObj.kpisNDic[config.kpisDic[kpiObj.kpiCode].name] = kpiObj.kpiCode;\n\n            if (handlerObj.data.recordList.length == 0) {\n              handlerObj.data.recordList.push({\n                milliseconds: 0\n              });\n            }\n\n            if (config.timePeriod == 0) {\n              var datavalue = handlerObj.data.recordList[0];\n              /*\n              if (kpiObj.instance) {\n                handlerObj.insDic[kpiObj.instance] = kpiObj.instance;\n                datavalue[kpiObj.nodeId + \"?\" + kpiObj.kpiCode + \"?\" + kpiObj.instance] = kpiObj.value;\n              } else {\n                datavalue[kpiObj.nodeId + \"?\" + kpiObj.kpiCode] = kpiObj.value;\n              }\n              */\n\n              datavalue[kpiObj.nodeId + \"?\" + kpiObj.kpiCode] = kpiObj.value;\n              datavalue.arisingTime = kpiObj.arisingTime;\n              datavalue.time = kpiObj.arisingTime;\n            } else {\n              mergeKpiValue(kpiObj, config);\n            }\n          }\n        }\n        /*\n        if (handlerObj.data.recordList.length > 1) {\n          handlerObj.data.recordList.splice(handlerObj.data.recordList.length - 1, 1);\n        }\n        */\n\n\n        callBack(handlerObj);\n      }, null, extendstr);\n    };\n\n    service.getChartProperty = function (item, key) {\n      for (var i in item.properties.item) {\n        var pt = item.properties.item[i];\n\n        if (pt.name == key) {\n          return pt;\n        }\n      }\n    };\n\n    service.getKpisInfo = function (item) {\n      var kpiCodes = [];\n      var kpiName2Code = {};\n      var displayKpi = item.dataSource.displayKpiSet.displayKpi;\n\n      if (jQuery.isArray(displayKpi)) {\n        for (var i in displayKpi) {\n          var subDisplayKpi = displayKpi[i];\n          kpiCodes.push(Number(subDisplayKpi.code));\n          kpiName2Code[subDisplayKpi.code] = subDisplayKpi.name;\n        }\n      } else {\n        kpiCodes.push(Number(displayKpi.code));\n        kpiName2Code[displayKpi.code] = displayKpi.name;\n      }\n\n      return [kpiCodes, kpiName2Code];\n    };\n\n    service.getNodesInfo = function (item) {\n      var timePeriod;\n      var nodeIds = [];\n\n      for (var i in item.dataSource.filters.filter) {\n        var filterObj = item.dataSource.filters.filter[i];\n\n        if (filterObj.type == \"ci\") {\n          var tmpNodeIds = filterObj.nodeIds.split(',');\n\n          for (var j in tmpNodeIds) {\n            nodeIds.push(Number(tmpNodeIds[j]));\n          }\n        } else if (filterObj.type == \"time\") {\n          timePeriod = Number(filterObj.timePeriod) * 60 * 1000;\n        }\n      }\n\n      return [nodeIds, timePeriod];\n    };\n\n    service.mergeKpiHandler = function (kpiObj, config, handlerObj) {\n      var datavalue = handlerObj.data.recordList[handlerObj.data.recordList.length - 1];\n      var arisingMS = newDateJson(kpiObj.arisingTime).getTime();\n\n      if (arisingMS < datavalue.milliseconds + config.kpisDic.minTimespan) {\n        if (kpiObj.instance) {\n          handlerObj.insDic[kpiObj.instance] = kpiObj.instance;\n          datavalue[kpiObj.nodeId + \"?\" + kpiObj.kpiCode + \"?\" + kpiObj.instance] = kpiObj.value;\n        } else {\n          datavalue[kpiObj.nodeId + \"?\" + kpiObj.kpiCode] = kpiObj.value;\n        }\n      } else {\n        var obj = {\n          milliseconds: arisingMS,\n          arisingTime: kpiObj.arisingTime,\n          time: kpiObj.arisingTime\n        };\n\n        if (kpiObj.instance) {\n          handlerObj.insDic[kpiObj.instance] = kpiObj.instance;\n          obj[kpiObj.nodeId + \"?\" + kpiObj.kpiCode + \"?\" + kpiObj.instance] = kpiObj.value;\n        } else {\n          obj[kpiObj.nodeId + \"?\" + kpiObj.kpiCode] = kpiObj.value;\n        }\n\n        handlerObj.data.recordList.push(obj);\n      }\n\n      return handlerObj;\n    };\n\n    return service;\n  }]);\n});"],"sourceRoot":"/source/"}