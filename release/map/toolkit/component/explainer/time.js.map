{"version":3,"sources":["toolkit/component/explainer/time.js"],"names":["define","dateHandler","valueListHandler","data","tools","callback","result","group","startTime","endTime","vlh","init","nodesDes","kpisDes","format","freq","frequency","freqObj","timespan","aggregate_rule","autoFillBlank","getLegend","simulate","formatter","map","elem","ci","label","kpi","getResources","element","getKpis","getDataMap","getxAxis","xAxis","getDate","date","FormatByString","getTimeRange","i","push","Date","time","length","getSeries","name","getValueList","nodeId","id","kpiCode","filter","rs","j","regroup","getTimeStamp","setTimeRange","setAutoFillBlank","setAggregateRule","aggregateValues","rawData","timestamps","sort","a","b","getTimestamp"],"mappings":"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","file":"toolkit/component/explainer/time.js","sourcesContent":["/**\n * Created by leonlin on 16/11/3.\n */\ndefine(['toolkit/date-handler', 'toolkit/value-list-handler'], function (dateHandler, valueListHandler) {\n  return function (data, tools, callback) {\n    var vlh = valueListHandler.init();\n    var result, group, allTimes;\n    var nodesDes = tools.nodesDes;\n    var kpisDes = tools.kpisDes;\n    var series, startTime, endTime;\n    var timeRange = [];\n    var format = tools.format;\n    var freq = tools.frequency;\n    var freqObj = tools.freqObj;\n    var timespan = tools.timespan;\n    var aggregate_rule = tools.aggregate_rule;\n    var autoFillBlank = tools.autoFillBlank;\n    var simulateFn = tools.simulate;\n\n    var getDay = function getDay(date) {\n      var year = date.getFullYear();\n      var month = date.getMonth() + 1;\n      var dat = date.getDate();\n      ;\n      return new Date(year + \"-\" + month + \"-\" + dat).getTime();\n    };\n\n    var getTimestamp = function getTimestamp() {\n      var xAxis = [];\n\n      if (freq > 0) {\n        for (var i = endTime; i > startTime; i -= freq) {\n          xAxis.push(i);\n        }\n\n        ;\n        xAxis.push(startTime);\n        xAxis = xAxis.sort(function (a, b) {\n          return a - b;\n        });\n      } else {\n        for (var i in result) {\n          xAxis.push(result[i].time);\n        }\n      }\n\n      if (xAxis.length == 0) {\n        xAxis.push(\"-\");\n      }\n\n      return xAxis;\n    };\n\n    var getLegend = function getLegend(formatter) {\n      return group.map(function (elem) {\n        var name;\n\n        if (typeof formatter == 'function') {\n          name = formatter({\n            ci: elem.ci.label,\n            kpi: elem.kpi.label\n          });\n        } else {\n          name = elem.ci.label + \"-\" + elem.kpi.label;\n        }\n\n        return name;\n      });\n    };\n\n    var regroup = function regroup(ci, kpi) {\n      var rs = [];\n\n      for (var i in ci) {\n        for (var j in kpi) {\n          rs.push({\n            ci: ci[i],\n            kpi: kpi[j]\n          });\n        }\n      }\n\n      return rs;\n    };\n\n    var getResources = function getResources() {\n      return nodesDes.map(function (element) {\n        return element.label;\n      });\n    };\n\n    var getKpis = function getKpis() {\n      return kpisDes.map(function (element) {\n        return element.label;\n      });\n    };\n\n    var getDataMap = function getDataMap() {\n      return group;\n    };\n\n    var getxAxis = function getxAxis() {\n      var xAxis = [];\n\n      var getDate = function getDate(date) {\n        var str = date.FormatByString(format);\n        return str;\n      };\n\n      if (freq > 0) {\n        xAxis = vlh.getTimeRange().map(function (elem) {\n          return getDate(elem.getDate());\n        });\n      } else {\n        for (var i in result) {\n          xAxis.push(getDate(new Date(result[i].time)));\n        }\n      }\n\n      ;\n\n      if (xAxis.length == 0) {\n        xAxis.push(\"-\");\n      }\n\n      ;\n      return [xAxis];\n    };\n\n    var getSeries = function getSeries(formatter) {\n      var rs = group.map(function (elem) {\n        var name;\n\n        if (typeof formatter == 'function') {\n          name = formatter({\n            ci: elem.ci.label,\n            kpi: elem.kpi.label\n          });\n        } else {\n          name = elem.ci.label + \"-\" + elem.kpi.label;\n        }\n\n        if (elem.data.length == 0) {\n          elem.data = [null];\n        }\n\n        return {\n          name: name,\n          data: elem.data\n        };\n      });\n      return rs;\n    };\n\n    var init = function init(data) {\n      var getValueList = function getValueList(element) {\n        var nodeId = element.ci.id;\n        var kpiCode = element.kpi.id;\n        var filter = data.filter(function (elem) {\n          return nodeId == elem.nodeId && kpiCode == elem.kpiCode;\n        });\n        return filter;\n      };\n\n      group = regroup(nodesDes, kpisDes);\n      endTime = dateHandler.init();\n      startTime = dateHandler.init(endTime.getTimeStamp() - timespan);\n      vlh.setTimeRange(startTime, endTime, freqObj);\n      vlh.setAutoFillBlank(autoFillBlank);\n      vlh.setAggregateRule(aggregate_rule);\n\n      for (var i in group) {\n        group[i].data = vlh.aggregateValues(getValueList(group[i]));\n      }\n\n      ;\n      callback({\n        rawData: data,\n        getLegend: getLegend,\n        timestamps: getTimestamp(),\n        getResources: getResources,\n        getKpis: getKpis,\n        getDataMap: getDataMap,\n        getxAxis: getxAxis,\n        getSeries: getSeries\n      });\n    }; //var dt = vlh.generateRandomValueList(nodesDes,kpisDes,'2017-10-18 16:00:00+0800', '2017-10-19 00:00:00+0800', 100, [0,100]);\n    //init(dt);\n\n\n    init(data);\n  };\n});"],"sourceRoot":"/source/"}