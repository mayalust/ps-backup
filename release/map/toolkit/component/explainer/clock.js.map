{"version":3,"sources":["toolkit/component/explainer/clock.js"],"names":["define","index","init","fmt","time","Date","prototype","format","o","M+","this","getMonth","d+","getDate","h+","getHours","m+","getMinutes","s+","getSeconds","S","getMilliseconds","k","test","replace","RegExp","$1","getFullYear","substr","length","events","formt","clock","id","setFormat","on","eventname","callback","start","getTime","stop","clearInterval","interval"],"mappings":"AAGAA,OAAO,GAAI,WACT,IAAIC,GAAS,EACb,MAAO,CACLC,KAAM,SAAcC,GAgClB,IAAIC,EA/BJH,IAEAI,KAAKC,UAAUC,OAAS,SAAUJ,GAChC,IAAIK,EAAI,CACNC,KAAMC,KAAKC,WAAa,EAExBC,KAAMF,KAAKG,UAEXC,KAAMJ,KAAKK,WAEXC,KAAMN,KAAKO,aAEXC,KAAMR,KAAKS,aAEXC,EAAKV,KAAKW,mBAQZ,IAAK,IAAIC,IAJL,OAAOC,KAAKpB,KACdA,EAAMA,EAAIqB,QAAQC,OAAOC,IAAKhB,KAAKiB,cAAgB,IAAIC,OAAO,EAAIH,OAAOC,GAAGG,UAGhErB,EACR,IAAIiB,OAAO,IAAMH,EAAI,KAAKC,KAAKpB,KACjCA,EAAMA,EAAIqB,QAAQC,OAAOC,GAAwB,GAApBD,OAAOC,GAAGG,OAAcrB,EAAEc,IAAM,KAAOd,EAAEc,IAAIM,QAAQ,GAAKpB,EAAEc,IAAIO,UAIjG,OAAO1B,GAKT,IAAI2B,EAAS,GACTC,EAAQ,sBAEZ,SAASC,EAAM/B,GACbS,KAAKuB,GAAKhC,EAgCZ,OA3BA+B,EAAM1B,UAAU4B,UAAY,SAAU/B,GACpC4B,EAAQ5B,GAAO4B,GAGjBC,EAAM1B,UAAU6B,GAAK,SAAUC,EAAWC,GACxCP,EAAOM,GAAaC,GAGtBL,EAAM1B,UAAUgC,MAAQ,WAEtBlC,GAAO,IAAIC,MAAOE,OAAOwB,GACzBD,EAAO,KAAQ1B,IAQjB4B,EAAM1B,UAAUiC,QAAU,WACxB,OAAOnC,GAGT4B,EAAM1B,UAAUkC,KAAO,WACrBC,mBAlCEC,IAqCG,IAAIV,EAAM/B","file":"toolkit/component/explainer/clock.js","sourcesContent":["/**\n * Created by leonlin on 16/11/3.\n */\ndefine([], function () {\n  var index = -1;\n  return {\n    init: function init(fmt) {\n      index++;\n\n      Date.prototype.format = function (fmt) {\n        var o = {\n          \"M+\": this.getMonth() + 1,\n          //月份\n          \"d+\": this.getDate(),\n          //日\n          \"h+\": this.getHours(),\n          //小时\n          \"m+\": this.getMinutes(),\n          //分\n          \"s+\": this.getSeconds(),\n          //秒\n          \"S\": this.getMilliseconds() //毫秒\n\n        };\n\n        if (/(y+)/.test(fmt)) {\n          fmt = fmt.replace(RegExp.$1, (this.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n        }\n\n        for (var k in o) {\n          if (new RegExp(\"(\" + k + \")\").test(fmt)) {\n            fmt = fmt.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : (\"00\" + o[k]).substr((\"\" + o[k]).length));\n          }\n        }\n\n        return fmt;\n      };\n\n      var time;\n      var interval;\n      var events = {};\n      var formt = \"yyyy-MM-dd hh:mm:ss\";\n\n      function clock(index) {\n        this.id = index;\n      }\n\n      ;\n\n      clock.prototype.setFormat = function (fmt) {\n        formt = fmt || formt;\n      };\n\n      clock.prototype.on = function (eventname, callback) {\n        events[eventname] = callback;\n      };\n\n      clock.prototype.start = function () {\n        var cur = this;\n        time = new Date().format(formt);\n        events['init'](time);\n        /**\n        interval = setInterval(function(){\n          time = new Date().format(formt);\n          events['change'](time, cur.id);\n        },1000);*/\n      };\n\n      clock.prototype.getTime = function () {\n        return time;\n      };\n\n      clock.prototype.stop = function () {\n        clearInterval(interval);\n      };\n\n      return new clock(index);\n    }\n  };\n});"],"sourceRoot":"/source/"}