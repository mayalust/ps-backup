{"version":3,"sources":["toolkit/component/explainer/deno_time_inds.js"],"names":["define","simulate","data","tools","callback","Info","nodesDes","kpisDes","format","instance","result","map","elem","dt","Date","arisingTime","year","getFullYear","month","getMonth","allMonth","item","xAxis","i","indexOf","push","sort","loopNodeDes","kpi","loopKpisDes","node","obj","name","ci","label","value","find","el","kpiCode","id","nodeId","getLegend","getxAxis","parseInt","FormatByString","getSeries","clone","$clone","itm","length"],"mappings":"AAGAA,OAAO,CAAC,YAAa,SAAUC,GAC7B,OAAO,SAAUC,EAAMC,EAAOC,GACjBD,EAAME,KAAjB,IACIC,EAAWH,EAAMG,SACjBC,EAAUJ,EAAMI,QAGhBC,GAFWL,EAAMM,SACJN,EAAMF,SACVE,EAAMK,QACfE,EAAS,GAEbR,EAAOA,EAAKS,IAAI,SAAUC,GACxB,IAAIC,EAAK,IAAIC,KAAKF,EAAKG,aACnBC,EAAOH,EAAGI,cACVC,EAAQL,EAAGM,WAEf,OADAP,EAAKQ,SAAkB,GAAPJ,EAAYE,EACrBN,IAET,IAEyBS,EAFrBC,EAAQ,GAUZ,IAAK,IAAIC,KAAKrB,EARWmB,EASlBnB,EAAKqB,IAR2B,GAAjCD,EAAME,QAAQH,EAAKD,WACrBE,EAAMG,KAAKJ,EAAKD,UAWpBE,EAAQA,EAAMI,OAEd,IAmCIC,EAAc,SAAqBC,GACrC,IAAIC,EAAc,SAAqBC,GACrC,IAAIC,EAAM,CACRC,KAAM,CACJC,GAAIH,EAAKI,MACTN,IAAKA,EAAIM,OAEXC,MAAOb,EAAMX,IAAI,SAAUC,GAIzB,OAHWV,EAAKkC,KAAK,SAAUC,GAC7B,OAAOzB,GAAQyB,EAAGjB,UAAYiB,EAAGC,SAAWV,EAAIW,IAAMF,EAAGG,QAAUV,EAAKS,QAK9E7B,EAAOe,KAAKM,IAGd,IAAK,IAAIR,KAAKjB,EACZuB,EAAYvB,EAASiB,KAIzB,IAAK,IAAIA,KAAKhB,EACZoB,EAAYpB,EAAQgB,IAItBnB,EAAS,CACPM,OAAQA,EACR+B,UAhEc,WACd,OAAOnC,EAASK,IAAI,SAAUC,GAC5B,OAAOA,EAAKsB,SA+DdQ,SA3Da,WAMb,MAAO,CALEpB,EAAMX,IAAI,SAAUC,GAG3B,OADW,IAAIE,KAAK6B,SAAS/B,EAAO,IAAM,KAAOA,EAAO,GAAK,IACjDgC,eAAepC,OAwD7BqC,UAnDc,WACd,IAAI3C,EAAOQ,EAAOC,IAAI,SAAUU,GAC9B,IAAIyB,EAAQzB,EAAK0B,SAKjB,OAJAD,EAAMd,KAAOc,EAAMd,KAAKC,GACxBa,EAAM5C,KAAO4C,EAAMX,MAAMxB,IAAI,SAAUqC,GACrC,OAAOA,EAAIb,QAENW,IAUT,OAPmB,GAAf5C,EAAK+C,SACP/C,EAAO,CAAC,CACN8B,KAAM,GACN9B,KAAM,MAIHA","file":"toolkit/component/explainer/deno_time_inds.js","sourcesContent":["/**\n * Created by leonlin on 16/11/3.\n */\ndefine([\"simulate\"], function (simulate) {\n  return function (data, tools, callback) {\n    var Info = tools.Info;\n    var nodesDes = tools.nodesDes;\n    var kpisDes = tools.kpisDes;\n    var instance = tools.instance;\n    var simulateFn = tools.simulate;\n    var format = tools.format;\n    var result = []; //var data = simulate(\"time\", nodesDes, kpisDes, instance, simulateFn);\n\n    data = data.map(function (elem) {\n      var dt = new Date(elem.arisingTime);\n      var year = dt.getFullYear();\n      var month = dt.getMonth();\n      elem.allMonth = year * 12 + month;\n      return elem;\n    });\n    var xAxis = [];\n\n    var loop = function loop(item) {\n      if (xAxis.indexOf(item.allMonth) == -1) {\n        xAxis.push(item.allMonth);\n      }\n\n      ;\n    };\n\n    for (var i in data) {\n      loop(data[i]);\n    }\n\n    ;\n    xAxis = xAxis.sort();\n\n    var getLegend = function getLegend() {\n      return nodesDes.map(function (elem) {\n        return elem.label;\n      });\n    };\n\n    var getxAxis = function getxAxis() {\n      var rs = xAxis.map(function (elem) {\n        var str = elem / 12 + \"-\" + (elem % 12 + 1);\n        var time = new Date(parseInt(elem / 12) + \"-\" + (elem % 12 + 1));\n        return time.FormatByString(format);\n      });\n      return [rs];\n    };\n\n    var getSeries = function getSeries() {\n      var data = result.map(function (item) {\n        var clone = item.$clone();\n        clone.name = clone.name.ci;\n        clone.data = clone.value.map(function (itm) {\n          return itm.value;\n        });\n        return clone;\n      });\n\n      if (data.length == 0) {\n        data = [{\n          name: '',\n          data: ''\n        }];\n      }\n\n      return data;\n    };\n\n    var loopNodeDes = function loopNodeDes(kpi) {\n      var loopKpisDes = function loopKpisDes(node) {\n        var obj = {\n          name: {\n            ci: node.label,\n            kpi: kpi.label\n          },\n          value: xAxis.map(function (elem) {\n            var find = data.find(function (el) {\n              return elem == el.allMonth && el.kpiCode == kpi.id && el.nodeId == node.id;\n            });\n            return find;\n          })\n        };\n        result.push(obj);\n      };\n\n      for (var i in nodesDes) {\n        loopKpisDes(nodesDes[i]);\n      }\n    };\n\n    for (var i in kpisDes) {\n      loopNodeDes(kpisDes[i]);\n    }\n\n    ;\n    callback({\n      result: result,\n      getLegend: getLegend,\n      getxAxis: getxAxis,\n      getSeries: getSeries\n    });\n  };\n});"],"sourceRoot":"/source/"}