{"version":3,"sources":["toolkit/component/explainer/deno_ci_ins_3d.js"],"names":["define","simulate","data","tools","callback","Info","nodesDes","kpisDes","instance","aggregate_type","services","dictionaryService","getDictValues","event","code","aggregate_type_arr","filter","elem","indexOf","valueCode","getIns","inx","reduce","a","b","ins1","split","push","baseOption","timeline","axisType","autoPlay","playInterval","map","value","symbolSize","label","formatter","s","title","tooltip","legend","x","selected","GDP","金融","房地产","calculable","grid","top","bottom","xAxis","type","axisLabel","interval","splitLine","show","yAxis","name","series","options","loop","insName2","option","pushData","aggrName","arr","ins2","loopIns","insName1","find","aggregateType","i","result","getOption"],"mappings":"AAGAA,OAAO,CAAC,YAAa,SAAUC,GAC7B,OAAO,SAAUC,EAAMC,EAAOC,GACjBD,EAAME,KACFF,EAAMG,SACPH,EAAMI,QACLJ,EAAMK,SACJL,EAAMF,SAJvB,IAKIQ,EAAiBN,EAAMM,eACvBC,EAAW,GACfA,EAASC,kBAAoBR,EAAMQ,kBACnC,IAEyCT,EAAAA,EAiJ5BA,EAhJXQ,EAASC,kBAAkBC,cAAc,gBAAiB,SAAUC,GAClE,GAAkB,GAAdA,EAAMC,KAAW,CACnB,IAAIC,EAAqBF,EAAMX,KAAKc,OAAO,SAAUC,GACnD,OAAkD,GAA3CR,EAAeS,QAAQD,EAAKE,aAGjCC,EAAS,SAAgBC,GAU3B,OATSnB,EAAKoB,OAAO,SAAUC,EAAGC,GAChC,IAAIC,EAAOD,EAAEhB,SAASkB,MAAM,KAAKL,GAMjC,OAJwB,GAApBE,EAAEL,QAAQO,IACZF,EAAEI,KAAKF,GAGFF,GACN,KAcDK,EAAa,CACfC,SAAU,CACRC,SAAU,WACVC,UAAU,EACVC,aAAc,IACd9B,KAAMkB,EAAO,GAAGa,IAAI,SAAUhB,GAC5B,MAAO,CACLiB,MAAOjB,EACPkB,WAAY,KAGhBC,MAAO,CACLC,UAAW,SAAmBC,GAC5B,OAAOA,KAIbC,MAAO,GACPC,QAAS,GACTC,OAAQ,CACNC,EAAG,QACHxC,KAAMa,EAAmBkB,IAAI,SAAUhB,GACrC,OAAOA,EAAKmB,QAEdO,SAAU,CACRC,KAAO,EACPC,MAAM,EACNC,OAAO,IAGXC,YAAY,EACZC,KAAM,CACJC,IAAK,GACLC,OAAQ,KAEVC,MAAO,CAAC,CACNC,KAAQ,WACRC,UAAa,CACXC,SAAY,GAEdpD,KAAQkB,EAAO,GACfmC,UAAa,CACXC,MAAM,KAGVC,MAAO,CAAC,CACNC,KAAM,SACNN,KAAM,SACL,CACDM,KAAM,YACNN,KAAM,UAERO,OA7DS5C,EAAmBkB,IAAI,SAAUhB,GACxC,MAAO,CACLyC,KAAMzC,EAAKmB,MACXgB,KAAM,UA4DRQ,EAAU,GAEVC,EAAO,SAAcC,GACvB,IAAIC,EAAS,CACXJ,OAAQ,IAINK,GAFO5C,IAEI,SAAkB6C,GAC/B,IAAIC,EAAM,GACNC,EAAO/C,EAAO,GAEdgD,EAAU,SAAiBC,GAC7B,IAAIC,EAAOpE,EAAKoE,KAAK,SAAUrD,GAC7B,OAAOA,EAAKT,UAAY6D,EAAW,IAAMP,GAAY7C,EAAKsD,eAAiBN,EAAS9C,YAEtF,MAAO,CACLuC,KAAMI,EACN5B,MAAOoC,EAAOA,EAAKpC,MAAQ,MAI/B,IAAK,IAAIsC,KAAKL,EACZD,EAAIvC,KAAKyC,EAAQD,EAAKK,KAMxB,MAHU,CACRtE,KAAMgE,KAKV,IAAK,IAAIM,KAAKzD,EACZgD,EAAOJ,OAAOhC,KAAKqC,EAASjD,EAAmByD,KAGjD,OAAOT,GAGLtC,EAAOL,EAAO,GAElB,IAAK,IAAIoD,KAAK/C,EACZmC,EAAQjC,KAAKkC,EAAKpC,EAAK+C,KAGzB,IAAIC,EAAS,CACX7C,WAAYA,EACZgC,QAASA,GAOXxD,EAAS,CACPsE,UALc,WACd,OAAOD","file":"toolkit/component/explainer/deno_ci_ins_3d.js","sourcesContent":["/**\n * Created by leonlin on 16/11/3.\n */\ndefine([\"simulate\"], function (simulate) {\n  return function (data, tools, callback) {\n    var Info = tools.Info;\n    var nodesDes = tools.nodesDes;\n    var kpisDes = tools.kpisDes;\n    var instance = tools.instance;\n    var simulateFn = tools.simulate;\n    var aggregate_type = tools.aggregate_type;\n    var services = {};\n    services.dictionaryService = tools.dictionaryService;\n    var result = [];\n\n    var simulateBack = function simulateBack(data) {\n      services.dictionaryService.getDictValues(\"aggregateType\", function (event) {\n        if (event.code == 0) {\n          var aggregate_type_arr = event.data.filter(function (elem) {\n            return aggregate_type.indexOf(elem.valueCode) != -1;\n          });\n\n          var getIns = function getIns(inx) {\n            var rs = data.reduce(function (a, b) {\n              var ins1 = b.instance.split(\",\")[inx];\n\n              if (a.indexOf(ins1) == -1) {\n                a.push(ins1);\n              }\n\n              return a;\n            }, []);\n            return rs;\n          };\n\n          var getSeriesTemp = function getSeriesTemp() {\n            var rs = aggregate_type_arr.map(function (elem) {\n              return {\n                name: elem.label,\n                type: 'bar'\n              };\n            });\n            return rs;\n          };\n\n          var baseOption = {\n            timeline: {\n              axisType: 'category',\n              autoPlay: false,\n              playInterval: 1000,\n              data: getIns(1).map(function (elem) {\n                return {\n                  value: elem,\n                  symbolSize: 7\n                };\n              }),\n              label: {\n                formatter: function formatter(s) {\n                  return s;\n                }\n              }\n            },\n            title: {},\n            tooltip: {},\n            legend: {\n              x: 'right',\n              data: aggregate_type_arr.map(function (elem) {\n                return elem.label;\n              }),\n              selected: {\n                'GDP': false,\n                '金融': false,\n                '房地产': false\n              }\n            },\n            calculable: true,\n            grid: {\n              top: 80,\n              bottom: 100\n            },\n            xAxis: [{\n              'type': 'category',\n              'axisLabel': {\n                'interval': 0\n              },\n              'data': getIns(0),\n              'splitLine': {\n                show: false\n              }\n            }],\n            yAxis: [{\n              name: '消耗量(吨)',\n              type: 'value'\n            }, {\n              name: '折标量(吨标准煤)',\n              type: 'value'\n            }],\n            series: getSeriesTemp()\n          };\n          var options = [];\n\n          var loop = function loop(insName2) {\n            var option = {\n              series: []\n            };\n            var ins1 = getIns();\n\n            var pushData = function pushData(aggrName) {\n              var arr = [];\n              var ins2 = getIns(0);\n\n              var loopIns = function loopIns(insName1) {\n                var find = data.find(function (elem) {\n                  return elem.instance == insName1 + \",\" + insName2 && elem.aggregateType == aggrName.valueCode;\n                });\n                return {\n                  name: insName2,\n                  value: find ? find.value : \"-\"\n                };\n              };\n\n              for (var i in ins2) {\n                arr.push(loopIns(ins2[i]));\n              }\n\n              var obj = {\n                data: arr\n              };\n              return obj;\n            };\n\n            for (var i in aggregate_type_arr) {\n              option.series.push(pushData(aggregate_type_arr[i]));\n            }\n\n            return option;\n          };\n\n          var ins1 = getIns(1);\n\n          for (var i in ins1) {\n            options.push(loop(ins1[i]));\n          }\n\n          var result = {\n            baseOption: baseOption,\n            options: options\n          };\n\n          var getOption = function getOption() {\n            return result;\n          };\n\n          callback({\n            getOption: getOption\n          });\n        }\n      });\n    };\n\n    simulateBack(data); //simulate(\"ci_3d\", nodesDes, kpisDes, instance, simulateFn, services, simulateBack);\n  };\n});"],"sourceRoot":"/source/"}