{"version":3,"sources":["toolkit/component/explainer/time_natual.js"],"names":["define","data","tools","callback","result","group","allTimes","startTime","endTime","nodesDes","kpisDes","format","freq","frequency","aggregate_rule","autoFillBlank","simulateFn","simulate","resetTime","time","date","Date","setMilliseconds","setSeconds","setMinutes","setHours","getTime","getTimestamp","xAxis","st","parseInt","i","push","sort","a","b","length","getLegend","formatter","map","elem","ci","label","kpi","getResources","element","getKpis","getDataMap","getxAxis","getDate","FormatByString","getSeries","name","getValueList","nodeId","id","kpiCode","filter","splitData","rs","compare","inx","timestamp","item","arr","timeStamp","value","undefined","sum","j","toFixed","times","splitByTime","getAllData","init","regroup","arisingTime","picked","Math","min","apply","max","rawData","timestamps","require"],"mappings":"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","file":"toolkit/component/explainer/time_natual.js","sourcesContent":["/**\n * Created by leonlin on 16/11/3.\n */\ndefine([], function () {\n  return function (data, tools, callback) {\n    var result, group, allTimes;\n    var nodesDes = tools.nodesDes;\n    var kpisDes = tools.kpisDes;\n    var series, startTime, endTime;\n    var format = tools.format;\n    var freq = tools.frequency;\n    var aggregate_rule = tools.aggregate_rule;\n    var autoFillBlank = tools.autoFillBlank;\n    var simulateFn = tools.simulate;\n\n    var resetTime = function resetTime(time, freq) {\n      var date = new Date(time);\n      date.setMilliseconds(0);\n\n      if (freq >= 60000) {\n        date.setSeconds(0);\n\n        if (freq >= 3600000) {\n          date.setMinutes(0);\n\n          if (freq >= 86400000) {\n            date.setHours(0);\n          }\n        }\n      }\n\n      return date.getTime();\n    };\n\n    var getTimestamp = function getTimestamp() {\n      var xAxis = [];\n\n      if (freq > 0) {\n        /*var t8 = 28800000;\n        startTime= t8;\n        endTime+= t8;*/\n        var st = startTime % freq == 0 ? startTime : parseInt(startTime / freq) * freq;\n        var et = endTime % freq == 0 ? endTime : parseInt(endTime / freq) * freq;\n        st = resetTime(startTime, freq);\n        et = resetTime(endTime, freq);\n\n        for (var i = et; i > st; i -= freq) {\n          xAxis.push(i);\n        }\n\n        ;\n        xAxis.push(st);\n        xAxis = xAxis.sort(function (a, b) {\n          return a - b;\n        });\n      } else {\n        for (var i in result) {\n          xAxis.push(result[i].time);\n        }\n      }\n\n      if (xAxis.length == 0) {\n        xAxis.push(\"-\");\n      }\n\n      return xAxis;\n    };\n\n    var getLegend = function getLegend(formatter) {\n      return group.map(function (elem) {\n        var name;\n\n        if (typeof formatter == 'function') {\n          name = formatter({\n            ci: elem.ci.label,\n            kpi: elem.kpi.label\n          });\n        } else {\n          name = elem.ci.label + \"-\" + elem.kpi.label;\n        }\n\n        return name;\n      });\n    };\n\n    var regroup = function regroup(ci, kpi) {\n      var rs = [];\n\n      for (var i in ci) {\n        for (var j in kpi) {\n          rs.push({\n            ci: ci[i],\n            kpi: kpi[j]\n          });\n        }\n      }\n\n      return rs;\n    };\n\n    var getResources = function getResources() {\n      return nodesDes.map(function (element) {\n        return element.label;\n      });\n    };\n\n    var getKpis = function getKpis() {\n      return kpisDes.map(function (element) {\n        return element.label;\n      });\n    };\n\n    var getDataMap = function getDataMap() {\n      return group;\n    };\n\n    var getxAxis = function getxAxis() {\n      var xAxis = [];\n\n      var getDate = function getDate(date) {\n        var str = date.FormatByString(format);\n        return str;\n      };\n\n      if (freq > 0) {\n        var times = getTimestamp();\n        xAxis = times.map(function (elem) {\n          return getDate(new Date(elem));\n        });\n      } else {\n        for (var i in result) {\n          xAxis.push(getDate(new Date(result[i].time)));\n        }\n      }\n\n      ;\n\n      if (xAxis.length == 0) {\n        xAxis.push(\"-\");\n      }\n\n      ;\n      return [xAxis];\n    };\n\n    var getSeries = function getSeries(formatter) {\n      var rs = group.map(function (elem) {\n        var name;\n\n        if (typeof formatter == 'function') {\n          name = formatter({\n            ci: elem.ci.label,\n            kpi: elem.kpi.label\n          });\n        } else {\n          name = elem.ci.label + \"-\" + elem.kpi.label;\n        }\n\n        if (elem.data.length == 0) {\n          elem.data = [null];\n        }\n\n        return {\n          name: name,\n          data: elem.data\n        };\n      });\n      return rs;\n    };\n\n    var getValueList = function getValueList(element) {\n      var nodeId = element.ci.id;\n      var kpiCode = element.kpi.id;\n      var filter = result.filter(function (elem) {\n        return nodeId == elem.nodeId && kpiCode == elem.kpiCode;\n      });\n      return filter;\n    };\n\n    var splitData = function splitData(data) {\n      var rs = [];\n\n      var compare = function compare(inx, time) {\n        var arr = [];\n\n        var condition = function condition(timestamp, item) {\n          if (timestamp >= time && timestamp < time + freq) {\n            arr.push(item.value);\n          }\n\n          ;\n        };\n\n        for (var i in data) {\n          condition(data[i].timeStamp, data[i]);\n        }\n\n        ;\n\n        if (aggregate_rule == 0) {\n          if (arr.length > 0) {\n            // \n            rs.push(arr[arr.length - 1]);\n          } else {\n            // \n            if (autoFillBlank) {\n              if (rs[rs.length - 1] != undefined) {\n                rs.push(rs[rs.length - 1]);\n              } else {\n                rs.push(\"-\");\n              }\n            } else {\n              rs.push(\"-\");\n            }\n          }\n\n          ;\n        } else if (aggregate_rule == 1) {\n          if (arr.length > 0) {\n            rs.push(arr[0]);\n          } else {\n            if (autoFillBlank) {\n              if (rs[rs.length - 1] != undefined) {\n                rs.push(rs[rs.length - 1]);\n              } else {\n                rs.push(\"-\");\n              }\n            } else {\n              rs.push(\"-\");\n            }\n          }\n\n          ;\n        } else if (aggregate_rule == 2) {\n          if (arr.length > 0) {\n            var sum = 0;\n\n            for (var j in arr) {\n              sum += arr[j];\n            }\n\n            rs.push((sum / arr.length).toFixed(2));\n          } else {\n            if (autoFillBlank) {\n              if (rs[rs.length - 1 != undefined]) {\n                rs.push(rs[rs.length - 1]);\n              } else {\n                rs.push(\"-\");\n              }\n            } else {\n              rs.push(\"-\");\n            }\n          }\n\n          ;\n        }\n      };\n\n      var splitByTime = function splitByTime() {\n        var times = getTimestamp();\n\n        for (var i in times) {\n          compare(i, times[i]);\n        }\n      };\n\n      var getAllData = function getAllData() {\n        for (var i in data) {\n          rs.push(data[i].value);\n        }\n      };\n\n      if (freq > 0) {\n        splitByTime();\n      } else {\n        getAllData();\n      }\n\n      ;\n      return rs;\n    };\n\n    var init = function init(data) {\n      group = regroup(nodesDes, kpisDes);\n      result = data.map(function (element) {\n        var timeStamp = new Date(element.arisingTime).getTime();\n        return {\n          kpiCode: element.kpiCode,\n          nodeId: element.nodeId,\n          time: element.arisingTime,\n          timeStamp: timeStamp,\n          value: element.value,\n          picked: false\n        };\n      });\n      allTimes = result.map(function (elem) {\n        return elem.timeStamp;\n      });\n      startTime = Math.min.apply(null, allTimes);\n      endTime = Math.max.apply(null, allTimes);\n\n      for (var i in group) {\n        group[i].data = splitData(getValueList(group[i]));\n      }\n\n      ;\n      callback({\n        rawData: data,\n        getLegend: getLegend,\n        timestamps: getTimestamp(),\n        getResources: getResources,\n        getKpis: getKpis,\n        getDataMap: getDataMap,\n        getxAxis: getxAxis,\n        getSeries: getSeries\n      });\n    };\n\n    if (simulateFn) {\n      require(['simulate_time'], function (simulate) {\n        init(simulate(\"time\", nodesDes, kpisDes, simulateFn));\n      });\n    } else {\n      init(data);\n    }\n  };\n});"],"sourceRoot":"/source/"}