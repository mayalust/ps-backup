{"version":3,"sources":["toolkit/component/treemenu.js"],"names":["define","treeDataHandler","pstree","data","treeIns","_res","callback","id","ALERTKPI","resourceIdMap","root","elemData","_projects","invalidNodes","push","Array","prototype","tostring","Object","toString","isObject","isType","isArray","isFunction","target","element","treenavigator","$","icons","getParameter","getValue","extendstr","serviceProxy","_onlyDeviceClickable","parameters","navitype","LOC","300","301","302","1000","type","obj","call","extend","a","b","i","each","arr","length","nodeClick","node","modelId","removeAllRequest","setHighlight","setTimeout","$location","setParameter","trigger","changeNavString","getResourceById","resource","setValue","analysisChangePath","deviceChangePath","path","this","label","parent","getParent","parentID","reverse","join","getIcon","rule","regeExp","RegExp","val1","values","number","val2","getMaxUnmber","variable","maxLength","ret","exec","num","addZeroBefore","word","dif","max","mnum1","mnum2","Math","replace","extendToResIdMap","resources","domains","split","filter","e","last2","slice","resourceType","console","err","inputToRelativeMap","model","children","inserted","insertBySort","getRootScope","attrs","find","elem","name","sourceValue","rs","getParentsWithSomeModelID","layer","error","message","assert","getKpiValueCi","ci","kpi","runtime","valuelist","isRealTimeData","getDomains","mids","getResourceByModelId","inx","mid","d","apply","getDomainsSuccess","domain","dev","traverse","child","postponed","getDomainsKpiValueCiSuccess","val","nodeId","value","getKpiValueCiSuccess","getDevicesByConditionSuccess","getDevicesByCondition","animate","themes","on","init","icon","open","depth","click","event","preventDefault","toggle","nd","eachParent","n","highlight","str","search","indexOf"],"mappings":"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","file":"toolkit/component/treemenu.js","sourcesContent":["/**\n * Created by leonlin on 16/11/3.\n */\ndefine(['toolkit/itree/tree-data-handler', 'pstree'], function (treeDataHandler, pstree) {\n  return function (data) {\n    var ALERTKPI = 999999;\n\n    var treeIns,\n        _res,\n        resourceIdMap = {\n      root: []\n    },\n        elemData = data,\n        _projects = [],\n        invalidNodes = [],\n        push = Array.prototype.push,\n        tostring = Object.prototype.toString,\n        isObject = isType(\"Object\"),\n        isNull = isType(\"Null\"),\n        isUndefined = isType(\"Undefined\"),\n        isArray = isType(\"Array\"),\n        isNumber = isType(\"Number\"),\n        isFunction = isType(\"Function\"),\n        isString = isType(\"String\"),\n        _onlyDeviceClickable\n    /** boolean */\n    ,\n        target = elemData.element,\n        treenavigator = $(\"<div class=\\\"tree-menu\\\"></div>\"),\n        resource = target.getParameter(\"resource\"),\n        _role = target.getValue(\"global/ROLE\"),\n        icons = ['tag tag-green', 'tag tag-yellow', 'tag tag-orange', 'tag tag-red'],\n        extendstr = \"includeFields=id,label,modelId,values.number,domains,resourcetype,viewType\",\n        _LOCATION = [null, \"index\", \"navigate\", \"factory\", \"production\"],\n        serviceProxy = data.serviceProxy,\n        _onlyDeviceClickable = function (param) {\n      return param.navitype == \"device\";\n    }(target.parameters || {}),\n        LOC = {\n      \"300\": \"domain\",\n      \"301\": \"customer\",\n      \"302\": \"project\",\n      \"1000\": \"device\"\n    };\n\n    function nextTick(fn) {\n      setTimeout(fn, 100);\n    }\n\n    function pushBack(arr, obj) {\n      if (isArray(obj)) {\n        push.apply(arr, obj);\n      } else {\n        push.call(arr, obj);\n      }\n    }\n\n    function isType(type) {\n      return function (obj) {\n        return tostring.call(obj) == \"[object \" + type + \"]\" && obj === obj;\n      };\n    }\n\n    function isNaN(num) {\n      return num !== num;\n    }\n\n    function bind(target, fn) {\n      return function () {\n        fn.apply(target, arguments);\n      };\n    }\n\n    function find(arr, callback) {\n      var i;\n      arr = arr || [];\n\n      for (var i = 0; i < arr.length; i++) {\n        if (callback(arr[i], i)) {\n          return arr[i];\n        }\n      }\n    }\n\n    function filter(arr, callback) {\n      var i,\n          rs = [];\n      arr = arr || [];\n\n      for (var i = 0; i < arr.length; i++) {\n        if (callback(arr[i], i)) {\n          rs.push(arr[i]);\n        }\n      }\n\n      return rs;\n    }\n\n    function clone(obj) {\n      return JSON.parse(JSON.stringify(obj));\n    }\n\n    function extend(a, b) {\n      for (var i in b) {\n        a[i] = b[i];\n      }\n\n      return a;\n    }\n\n    function each(arr, callback) {\n      var i;\n      arr = arr || [];\n\n      for (i = 0; i < arr.length; i++) {\n        callback && callback(arr[i], i);\n      }\n    }\n\n    function eachProp(obj, callback) {\n      var i;\n      obj = obj || {};\n\n      for (var i in obj) {\n        callback && callback(obj[i], i);\n      }\n    }\n\n    function insertBySort(children, inserted, rule) {\n      for (var i = children.length - 1; i > -1;) {\n        if (rule(inserted, children[i])) {\n          children[i + 1] = children[i];\n          i--;\n        } else {\n          break;\n        }\n      }\n\n      children[i + 1] = inserted;\n    }\n\n    ;\n\n    function getLocationByModel(model) {\n      var viewType = function (model) {\n        if (!model) return undefined;\n        var attrs = model.attrs || [];\n        var viewTypeAttr = attrs.find(function (elem) {\n          return elem.name == \"viewType\";\n        }) || {};\n        return viewTypeAttr.sourceValue;\n      }(model);\n\n      return viewType == \"motor\" ? \"motor\" : \"device\";\n    }\n\n    function nodeClick(node) {\n      if (_onlyDeviceClickable && node.modelId < 1000) return;\n      serviceProxy.removeAllRequest();\n\n      if (node.setHighlight) {\n        node.setHighlight(true);\n      }\n\n      ;\n      nextTick(function () {\n        if (_onlyDeviceClickable) {\n          analysisChangePath(node);\n        } else {\n          deviceChangePath(node);\n        }\n      });\n    }\n\n    function deviceChangePath(node) {\n      var path = node.$location;\n      target.setParameter(\"id\", node.id);\n      target.trigger(\"changeNavString\", changeNavString.call(node));\n      getResourceById(node.id, function (resource) {\n        extend(node, resource);\n        target.setValue(\"global/resource\", node);\n        target.trigger(\"pathChange\", path);\n        target.trigger(\"tree_resourceChange\", {\n          resource: extend({}, node)\n        });\n        target.trigger(\"analysisShakeNavigateTo\", 0);\n      });\n    }\n\n    function analysisChangePath(node) {\n      var path = node.$location;\n      target.setParameter(\"id\", node.id);\n      target.trigger(\"changeNavString\", changeNavString.call(node));\n      getResourceById(node.id, function (resource) {\n        extend(node, resource);\n        target.setValue(\"global/resource\", node);\n        target.trigger(\"tree_resourceChange\", {\n          resource: extend({}, node)\n        });\n        target.trigger(\"analysisShakeNavigateTo\", 0);\n      });\n    }\n\n    function changeNavString() {\n      var node = this,\n          str,\n          arr = [node.label],\n          parent = getParent(node);\n\n      function getParent(node) {\n        return node.parentID && resourceIdMap[node.parentID] || node.parent;\n      }\n\n      while (parent) {\n        if (parent.id != 99) {\n          arr.push(parent.label);\n        }\n\n        parent = getParent(parent);\n      }\n\n      arr.reverse();\n      return arr.join(\" > \");\n    }\n\n    function getResourceById(id, callback) {\n      target.getResourceById(id, function (resource) {\n        callback && callback(resource);\n      });\n    }\n\n    function getIcon(i) {\n      return icons[i - 1] || 'tag tag-green';\n    }\n\n    function error(msg) {\n      this.msg = msg;\n    }\n\n    ;\n\n    function rule(a, b) {\n      var regeExp = new RegExp(\"/\\\\d+/\", \"g\"),\n          val1 = a.values && a.values.number || null,\n          val2 = b.values && b.values.number || null;\n\n      function getMaxUnmber(variable) {\n        var maxLength = 0,\n            ret = regeExp.exec(variable.label);\n\n        while (ret != null) {\n          var num = ret[0].length;\n\n          if (num > maxLength) {\n            maxLength = num;\n          }\n\n          ret = regeExp.exec(variable.label);\n        }\n\n        return maxLength;\n      }\n\n      function addZeroBefore(word) {\n        var dif = max - word.length;\n\n        for (var i = 0; i < dif; i++) {\n          word = \"0\" + word;\n        }\n\n        return word;\n      }\n\n      if (val1 || val2) {\n        return val1 < val2;\n      } else {\n        var mnum1 = getMaxUnmber(a),\n            mnum2 = getMaxUnmber(b),\n            max = Math.max(mnum1, mnum2),\n            la = a.label.replace(regeExp, function (word) {\n          return addZeroBefore(word);\n        }),\n            lb = b.label.replace(regeExp, function (word) {\n          return addZeroBefore(word);\n        });\n        return la < lb;\n      }\n    }\n\n    function getLastTwo(domains) {\n      var arr = domains.split(\"/\").filter(function (e) {\n        return e;\n      });\n      return arr.slice(-2);\n    }\n\n    function checkModelId(modelId) {\n      if (modelId > 1000) {\n        return true;\n      } else {\n        return modelId == 300 || modelId == 301 || modelId == 302;\n      }\n    }\n\n    function extendToResIdMap(target, resources) {\n      var proj = {},\n          id,\n          type,\n          modelId; //extendToResIdMap.size = extendToResIdMap.size || 1/0;\n\n      each(resources, function (resource, i) {\n        var domains = resource.domains.split(\"/\").filter(function (e) {\n          return e;\n        }),\n            last2 = getLastTwo(resource.domains),\n            parentID = resource.id == last2[1] ? last2[0] : last2[1];\n\n        if (parentID !== resource.id) {\n          resource.parentID = parentID;\n          id = resource.id;\n          modelId = resource.modelId;\n          type = modelId > 1000 ? 1000 : modelId;\n          target[id] = resource;\n          resource.resourceType = LOC[type];\n        } else {\n          console.err(\"此节点为错误或无效节点\", resource);\n          invalidNodes.push(resource);\n        }\n      });\n      return target;\n    }\n\n    function inputToRelativeMap(resource) {\n      var domains = resource.domains,\n          parents,\n          modelId = resource.modelId,\n          parent = getParent(resource);\n      domains = domains.split(\"/\").filter(function (e) {\n        return e;\n      });\n\n      function getParent(resource) {\n        if (resource.parentID) {\n          return resourceIdMap[resource.parentID];\n        } else {\n          console.err(\"没有设置PARENTID属性\");\n        }\n      }\n\n      function getParentsWithSomeModelID(resource) {\n        var rs = [],\n            cached,\n            modelId = resource.modelId,\n            parent = resource;\n\n        while (parent = getParent(parent)) {\n          if (parent.modelId != modelId) {\n            break;\n          }\n\n          rs.push(parent);\n        }\n\n        return rs;\n      }\n\n      if (parent) {\n        parent.children = parent.children || [];\n        insertBySort(parent.children, resource, rule);\n      } else {\n        resourceIdMap['root'].push(resource); // console.assert(false, \"无根节点的节点\", resource);\n      }\n\n      if (modelId > 1000) {\n        resource.$location = getLocationByModel(target.getRootScope(\"rootModelsDic\")[modelId]);\n      } else {\n        if (modelId == 300) {\n          parents = getParentsWithSomeModelID(resource);\n\n          if (resource.layer == 1) {\n            resource.$location = \"index\";\n          } else if (resource.layer == 2) {\n            resource.$location = \"navigate\";\n          } else if (resource.layer == 3) {\n            resource.$location = \"factory\";\n          } else {\n            resource.$location = {\n              error: \"unhandled node\",\n              message: \"[300]layer is over 3, cannot handle\"\n            };\n            console.error(\"管理域出现\" + resource.layer + \"级，不可被处理\", resource.label, resource.modelId, resource.layer);\n          }\n        } else if (modelId == 301) {\n          resource.$location = \"production\";\n        } else if (modelId == 302) {\n          if (resource.children && resource.children[0] && resource.children[0].modelId > 1000 || resource.layer == 1) {\n            resource.$location = \"devicegroup\";\n          } else {\n            resource.$location = \"virtual\";\n          }\n        }\n      }\n\n      console.assert(resource.$location, \"$location没正确倒入\", resource.label, resource.modelId, resource.layer);\n    }\n\n    function getCurrentResource(callback) {\n      var resource = target.getValue(\"global/resource\") || {},\n          id = resource.id || target.getParameter(\"id\");\n      id && target.getResourceById(id, function (resource) {\n        callback && callback(resource);\n      });\n      !id && callback && callback(null);\n    }\n\n    function getDevicesByCondition(callback) {\n      runtime('resource开始加载');\n      target.getDevicesByCondition({}, function (resources) {\n        runtime('resource完成加载');\n        callback && callback(resources);\n      }, extendstr);\n    }\n\n    function getKpiValueCi(ci, kpi, callback) {\n      runtime('getStatus开始加载');\n      target.getKpiValueCi(ci, kpi, function (valuelist) {\n        runtime('getStatus完成加载');\n        callback && callback(valuelist);\n      }, {\n        isRealTimeData: true\n      });\n    }\n\n    function getDomains(callback) {\n      var domains = [];\n      var mids = [300, 301, 302];\n      var i;\n\n      function getResourceByModelId(inx) {\n        var mid = mids[inx];\n\n        function handler(d) {\n          pushBack(domains, d);\n          getResourceByModelId(inx + 1);\n        }\n\n        mid && target.getResourceByModelId(mid, handler, extendstr);\n        !mid && callback && callback(domains);\n      }\n\n      getResourceByModelId(0);\n    }\n\n    function getCurrentResourceSuccess(resource) {\n      _res = resource;\n      getDomains(getDomainsSuccess);\n    }\n\n    function getDomainsSuccess(domains) {\n      extendToResIdMap(resourceIdMap, domains);\n      var ci = [],\n          node;\n      each(domains, function (domain) {\n        inputToRelativeMap(domain);\n        ci.push(domain.id);\n      });\n      dev = resourceIdMap['root'];\n\n      function traverse(d) {\n        each(d, function (child) {\n          !child.children && _projects.push(child);\n          child.children && traverse(child.children);\n        });\n      }\n\n      traverse(dev);\n\n      if (!_onlyDeviceClickable) {\n        if (!_res) {\n          node = resourceIdMap[\"root\"][0];\n        } else {\n          if (_res.modelId < 1000) {\n            node = resourceIdMap[_res.id];\n          }\n        }\n\n        ;\n\n        if (node) {\n          if (!node.$location) {\n            node.postponed = true;\n          } else {\n            deviceChangePath(node);\n          }\n        }\n      }\n\n      getKpiValueCi(ci, [ALERTKPI], getDomainsKpiValueCiSuccess);\n    }\n\n    function getDomainsKpiValueCiSuccess(valuelist) {\n      each(valuelist, function (val) {\n        resourceIdMap[val.nodeId]['status'] = val.value;\n        resourceIdMap[val.nodeId]['icon'] = getIcon(val.value);\n      });\n      getDevicesByCondition(function (d) {\n        getDevicesByConditionSuccess(d);\n      });\n    }\n\n    function getDevicesByConditionSuccess(resources) {\n      runtime('getResourceSuccess开始');\n      var ci = [];\n      extendToResIdMap(resourceIdMap, resources);\n      each(resources, function (resource) {\n        inputToRelativeMap(resource);\n        ci.push(resource.id);\n      });\n      runtime(\"MAP全完成\", resourceIdMap['root']);\n      getKpiValueCi(ci, [ALERTKPI], getKpiValueCiSuccess);\n    }\n\n    ;\n\n    function getKpiValueCiSuccess(valuelist) {\n      each(valuelist, function (val, i) {\n        resourceIdMap[val.nodeId]['status'] = val.value;\n        resourceIdMap[val.nodeId]['icon'] = getIcon(val.value);\n      });\n      var root = resourceIdMap['root'];\n\n      var find = _projects.find(function (e) {\n        return e.children instanceof Array && e.children.length > 0;\n      });\n\n      resourceIdMap['firstDevice'] = isObject(find) && isArray(find.children) && find.children[0];\n      console.assert(resourceIdMap['firstDevice'], \"没有找到任何设备\");\n      root = root && root[0] && root[0].layer == 1 && root[0].modelId == 300 ? root[0].children : root;\n      treeIns = pstree(treenavigator[0], {\n        data: isArray(root) ? root : [],\n        animate: false,\n        themes: \"show-line folder-pull-right steel-industry condense\",\n        on: {\n          init: function init() {\n            this.icon = this.icon || \"tag tag-green\";\n            this.open = this.depth < 2;\n          },\n          click: function click(event) {\n            if (_onlyDeviceClickable && this.resourceType !== \"device\") {\n              event.preventDefault();\n              this.toggle();\n            } else {\n              nodeClick(this);\n            }\n          }\n        }\n      });\n\n      var nd = function () {\n        if (_onlyDeviceClickable) {\n          if (isObject(_res)) {\n            if (_res.modelId < 1000) {\n              return resourceIdMap['firstDevice'];\n            } else {\n              return _res;\n            }\n          } else {\n            return resourceIdMap['firstDevice'] || null;\n          }\n        } else {\n          return _res ? _res : resourceIdMap['root'] ? resourceIdMap['root'][0] : null;\n        }\n      }();\n\n      var node = treeIns.find(function (e) {\n        return (nd && nd.id) == e.id;\n      });\n      isObject(node) && isFunction(node.eachParent) && node.eachParent(function (n) {\n        !n.open && n.toggle();\n      });\n      isObject(node) && isFunction(node.highlight) && node.highlight();\n      isObject(node) && !node.open && isFunction(node.toggle) && node.toggle();\n\n      if (node) {\n        if (_onlyDeviceClickable) {\n          nodeClick(node);\n        } else if (node.modelId > 1000 || node.postponed) {\n          delete node.postponed;\n          nodeClick(node);\n        }\n\n        ;\n      }\n\n      runtime('allfinished', root);\n    }\n\n    getCurrentResource(getCurrentResourceSuccess);\n    target.on(\"treeSelect\", function () {\n      var id = target.getParameter(\"id\");\n      var node = treeIns.find(function (n) {\n        return n.id == id;\n      });\n      node && isFunction(node.eachParent) && node.eachParent(function (n) {\n        !n.open && n.toggle();\n      });\n      node && isFunction(node.highlight) && node.highlight();\n    });\n    target.on(\"searchtree\", function (str) {\n      treeIns.search(function (node) {\n        return node.label.indexOf(str) != -1;\n      });\n    });\n    return treenavigator;\n  };\n});"],"sourceRoot":"/source/"}