{"version":3,"sources":["toolkit/svgcharts/svgcharts.js"],"names":["createCharts","d3","init","dom","opts","_grid_","width","height","colors","svg","select","append","defs","AxisDom","DURATION","seriesDom","_options_","creatGradient","id","config","color1","color2","x1","y1","x2","y2","linearGradient","attr","style","setSize","$","createDiamond","deg","path","degree","Math","PI","sin","createShadowShapeLeft","createShadowShapeRight","calculate","number","per","regExp","exec","parseInt","getMax","series","values","reduce","a","b","stack","i","data","name","allValue","Array","prototype","push","apply","max","setOption","options","types","w","h","xAxis","yAxis","selectAll","remove","show","g","x","scaleOrdinal","domain","range","length","rs","step","xRange","call","axisBottom","$attr","left","top","rect","y","scaleLinear","rectMargin","axis","axisLeft","ticks","line","createyAxis","createAxis","indexOf","type","stacks","stackObj","ser","bar","prepareBarData","item","inx","barwidth","filter","elem","subInx","map","index","value","stackValue","mainInx","color","prepare3DBarData","stackLength","isTop","isBottom","rest","slice","before","every","cols","stackHeight","label","normal","$extension","extentData","transition","duration","d","enter","exit","text","setGrid","gd","grid","t","l","svgchart","setTimeout","refresh","window","on","event","define","svgcharts"],"mappings":"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","file":"toolkit/svgcharts/svgcharts.js","sourcesContent":["/**\n * Created by leonlin on 16/11/3.\n */\nif (typeof define == \"function\") {\n  define(['d3'], createCharts);\n} else {\n  window.svgcharts = createCharts(d3);\n}\n\nfunction createCharts(d3) {\n  return {\n    init: function init(dom, opts) {\n      //var colors = [\"#0ca4fe\", \"#e8b609\", \"#e74e54\"];\n      var colors = [\"#00bc79\", \"#ece417\", \"#ee6b1c\"];\n      var wrap = d3.select(dom);\n      var svg = wrap.append(\"svg\");\n      var defs = svg.append(\"defs\");\n      var AxisDom = svg.append(\"g\");\n      var DURATION = 1000;\n      var seriesDom = svg.append(\"g\");\n\n      var _options_ = opts || null;\n\n      var _grid_;\n\n      var width, height;\n\n      var creatGradient = function creatGradient(id, config) {\n        var id = id;\n        var color1 = config.color1 || \"#000\";\n        var color2 = config.color2 || \"#fff\";\n        var x1 = config.x1 || \"0%\";\n        var y1 = config.y1 || \"0%\";\n        var x2 = config.x2 || \"100%\";\n        var y2 = config.y2 || \"0%\";\n        var linearGradient = defs.append(\"linearGradient\").attr(\"id\", id).attr(\"x1\", x1).attr(\"y1\", y1).attr(\"x2\", x2).attr(\"y2\", y2);\n        var stop1 = linearGradient.append(\"stop\").attr(\"offset\", \"0%\").style(\"stop-color\", color1);\n        var stop2 = linearGradient.append(\"stop\").attr(\"offset\", \"100%\").style(\"stop-color\", color2);\n      };\n\n      var resize = function resize(event) {\n        setTimeout(function () {\n          setSize();\n          setGrid(_options_.grid);\n          setOption(_options_);\n        });\n      };\n\n      var setSize = function setSize() {\n        width = $(dom).width();\n        height = $(dom).height();\n        svg.attr(\"width\", width);\n        svg.attr(\"height\", height);\n      };\n\n      var createDiamond = function createDiamond(width, deg) {\n        var path = \"M0 0 \";\n        var degree = deg / 180 * Math.PI;\n        path += \"L\" + width / 2 + \" -\" + width * Math.sin(degree) + \" \";\n        path += \"L\" + width + \" 0 \";\n        path += \"L\" + width / 2 + \" \" + width * Math.sin(degree) + \" \";\n        path += \"L0 0 \";\n        return path;\n      };\n\n      var createShadowShapeLeft = function createShadowShapeLeft(width, height, deg) {\n        var degree = deg / 180 * Math.PI;\n        var path = \"M0 \" + width * Math.sin(degree) + \" \";\n        path += \"L-\" + width / 2 + \" 0 \";\n        path += \"L-\" + width / 2 + \" \" + height + \" \";\n        path += \"L0 \" + (height + width * Math.sin(degree)) + \" \";\n        path += \"L0 0 \";\n        return path;\n      };\n\n      var createShadowShapeRight = function createShadowShapeRight(width, height, deg) {\n        var degree = deg / 180 * Math.PI;\n        var path = \"M0 \" + width * Math.sin(degree) + \" \";\n        path += \"L\" + width / 2 + \" 0 \";\n        path += \"L\" + width / 2 + \" \" + height + \" \";\n        path += \"L0 \" + (height + width * Math.sin(degree)) + \" \";\n        path += \"L0 0 \";\n        return path;\n      };\n\n      var calculate = function calculate(number, per) {\n        var regExp = [/(\\d+)\\%/];\n\n        if (regExp[0].exec(per)[1]) {\n          return number * parseInt(regExp[0].exec(per)[1]) / 100;\n        }\n        /** not finished yet */\n\n      };\n\n      var xRange = function xRange(height, length) {\n        if (length > 2) {\n          var rs = [];\n          var step = height / length;\n\n          for (var i = 0; i < length; i++) {\n            rs.push(i * step);\n          }\n\n          ;\n          return rs;\n        } else {\n          return [];\n        }\n\n        ;\n      };\n\n      var getMax = function getMax(series) {\n        var max = 0;\n        var values = series.reduce(function (a, b) {\n          if (b.stack) {\n            a[b.stack] = a[b.stack] || [];\n\n            for (var i in b.data) {\n              a[b.stack][i] = a[b.stack][i] || 0;\n              a[b.stack][i] += parseInt(b.data[i]);\n            }\n\n            ;\n          } else {\n            a[b.name] = a[b.name] || [];\n\n            for (var i in b.data) {\n              a[b.name][i] = a[b.name][i] || 0;\n              a[b.name][i] += parseInt(b.data[i]);\n            }\n\n            ;\n          }\n\n          return a;\n        }, {});\n        var allValue = [];\n\n        for (var i in values) {\n          Array.prototype.push.apply(allValue, values[i]);\n        }\n\n        ; //;\n\n        max = Math.max.apply(null, allValue) * 1.2;\n        return max;\n      };\n\n      var setOption = function setOption(options) {\n        var w = _grid_.width;\n        var h = _grid_.height;\n        var xAxis = options.xAxis || null;\n        var yAxis = options.yAxis || null;\n        var max = yAxis ? yAxis.max || getMax(options.series) : getMax(options.series);\n\n        var createAxis = function createAxis() {\n          AxisDom.selectAll(\"*\").remove();\n\n          var createxAxis = function createxAxis(data) {\n            var g = AxisDom.append(\"g\");\n            var x = d3.scaleOrdinal().domain(data).range(xRange(w, data.length));\n            var step = w / data.length;\n            g.call(d3.axisBottom(x));\n            g.selectAll(\"text\").attr(\"fill\", xAxis.$attr(\"axisLabel/color\") || \"#333\").attr(\"y\", xAxis.$attr(\"axisLabel/margin\") || 9).style(\"display\", xAxis.$attr(\"axisLabel/show\") == false ? \"none\" : \"display\");\n            var line = g.selectAll(\"line\").attr(\"stroke\", xAxis.$attr(\"axisLine/lineStyle/color\") || \"#333\").style(\"display\", xAxis.$attr(\"axisLine/show\") == false ? \"none\" : \"display\");\n            g.selectAll(\"path\").attr(\"stroke\", xAxis.$attr(\"axisTick/color\") || \"#333\").style(\"display\", xAxis.$attr(\"axisTick/show\") == false ? \"none\" : \"display\");\n            ;\n            g.attr(\"transform\", \"translate(\" + (_grid_.left + step / 2) + \", \" + (h + _grid_.top) + \")\");\n          };\n\n          var createyAxis = function createyAxis(data) {\n            var rect = AxisDom.append(\"path\");\n            var g = AxisDom.append(\"g\");\n            var y = d3.scaleLinear().domain([0, max]).range([h, 0]);\n            var rectMargin = yAxis.$attr(\"base/margin\") || -10;\n            rect.attr(\"d\", \"M0 0 \" + \"L\" + _grid_.width + \" 0 L\" + _grid_.width * 1.02 + \" 25 L-\" + _grid_.width * .02 + \" 25 L0 0\");\n            rect.attr(\"transform\", \"translate(\" + _grid_.left + \",\" + (_grid_.height + _grid_.top + rectMargin) + \")\");\n            rect.attr(\"fill\", \"url(#base)\");\n            var axis = d3.axisLeft(y);\n            axis.ticks(yAxis.$attr(\"splitNumber\") || 5);\n            g.call(axis);\n            g.selectAll(\"text\").attr(\"fill\", yAxis.$attr(\"axisLabel/color\") || \"#333\").attr(\"x\", -yAxis.$attr(\"axisLabel/margin\") || -9).style(\"display\", yAxis.$attr(\"axisLabel/show\") == false ? \"none\" : \"display\");\n            var line = g.selectAll(\"line\").attr(\"stroke\", yAxis.$attr(\"axisLine/lineStyle/color\") || \"#333\").style(\"display\", yAxis.$attr(\"axisLine/show\") == false ? \"none\" : \"display\");\n            g.selectAll(\"path\").attr(\"stroke\", yAxis.$attr(\"axisTick/color\") || \"#333\").style(\"display\", yAxis.$attr(\"axisTick/show\") == false ? \"none\" : \"display\");\n            line.attr(\"x1\", -6);\n            line.attr(\"x2\", _grid_.width);\n            g.attr(\"transform\", \"translate(\" + _grid_.left + \", \" + _grid_.top + \")\");\n          };\n\n          if (xAxis) {\n            if (xAxis.show != false) {\n              createxAxis(xAxis.data);\n            }\n          }\n\n          ;\n\n          if (yAxis) {\n            if (yAxis.show != false) {\n              createyAxis(yAxis.data);\n            }\n\n            ;\n          }\n        };\n\n        var createSeries = function createSeries(series) {\n          var types = series.reduce(function (a, b) {\n            if (a.indexOf(b.type) == -1) {\n              a.push(b.type);\n            }\n\n            ;\n            return a;\n          }, []);\n\n          var extentData = function extentData(series) {\n            var step = _grid_.width / series[0].data.length;\n            var stacks = [],\n                stackObj = {};\n\n            for (var i in series) {\n              if (stacks.indexOf(series[i].stack) == -1) {\n                stacks.push(series[i].stack);\n                stackObj[series[i].stack] = [];\n              }\n            }\n\n            ;\n\n            var renderBar = function renderBar(index, item, value, stackValue, length, mainInx, subInx, stackLength, color, barwidth) {\n              var w = step / stackLength * barwidth;\n              return {\n                x: _grid_.left + (index + (1 - barwidth) / 2) * step + mainInx * w,\n                y: _grid_.height * (1 - stackValue / max) + _grid_.top,\n                width: w,\n                height: value / max * _grid_.height,\n                color: color\n              };\n            };\n\n            var renderBar3D = function renderBar3D(index, item, value, stackValue, length, mainInx, subInx, stackLength, color, barwidth, degree, isTop, isBottom) {\n              var w = step / stackLength * barwidth;\n              var rs = {\n                x: _grid_.left + (index + (1 - barwidth) / 2) * step + mainInx * w,\n                y: max > 0 ? _grid_.height * (1 - stackValue / max) + _grid_.top : _grid_.height + _grid_.top,\n                width: w,\n                height: max > 0 ? value / max * _grid_.height : 0,\n                stackHeight: max > 0 ? stackValue / max * _grid_.height : 0,\n                color: color,\n                degree: degree,\n                isTop: isTop,\n                isBottom: isBottom,\n                value: stackValue,\n                label: {\n                  normal: {\n                    show: false\n                  }\n                }.$extension(item.label || {})\n              };\n\n              if (max) {// ;\n                // ;\n              }\n\n              ; //\n\n              return rs;\n            };\n\n            var ser = {\n              line: [],\n              bar: []\n            };\n\n            var prepareBarData = function prepareBarData(i, item) {\n              var inx = 0;\n              var barwidth = item.barwidth || .6;\n              var filter = series.filter(function (elem) {\n                return elem.stack == item.stack;\n              });\n              var mainInx = stacks.indexOf(item.stack);\n              var subInx = filter.indexOf(item);\n              Array.prototype.push.apply(ser['bar'], item.data.map(function (elem) {\n                if (!stackObj[item.stack][inx]) {\n                  stackObj[item.stack][inx] = 0;\n                }\n\n                stackObj[item.stack][inx] += elem;\n                var color = item.$attr(\"itemStyle/normal/color\") || colors[i];\n                var rs = renderBar(inx, elem, stackObj[item.stack][inx], item.data.length, mainInx, subInx, stacks.length, color, barwidth);\n                inx++;\n                return rs;\n              }));\n            };\n\n            var prepare3DBarData = function prepare3DBarData(i, item) {\n              var inx = 0;\n              var barwidth = item.barwidth || .6;\n              var degree = item.degree || 8;\n              var filter = series.filter(function (elem) {\n                return elem.stack == item.stack;\n              });\n              var mainInx = stacks.indexOf(item.stack);\n              var subInx = filter.indexOf(item);\n              Array.prototype.push.apply(ser['bar'], item.data.map(function (elem) {\n                if (!stackObj[item.stack][inx]) {\n                  stackObj[item.stack][inx] = 0;\n                }\n\n                stackObj[item.stack][inx] += parseInt(elem);\n                var rest = series.slice(i, -1);\n                var before = i > 0 ? series.slice(0, i) : [];\n                var isTop = rest.every(function (elem) {\n                  return elem.stack != item.stack;\n                });\n                var isBottom = before.every(function (elem) {\n                  return elem.stack != item.stack;\n                });\n                var cols = item.colors || [];\n                var color = item.$attr(\"itemStyle/normal/color\") || cols[inx] || colors[i];\n                var rs = renderBar3D(inx, item, elem, stackObj[item.stack][inx], item.data.length, mainInx, subInx, stacks.length, color, barwidth, degree, isTop, isBottom);\n                inx++;\n                return rs;\n              }));\n            };\n\n            var prepareLineData = function prepareLineData() {};\n\n            for (var i in series) {\n              if (series[i].type == 'bar') {\n                prepareBarData(i, series[i]);\n              } else if (series[i].type == '3dbar') {\n                prepare3DBarData(i, series[i]);\n              } else if (series[i].type == 'line') {\n                prepareLineData(i, series[i]);\n              }\n            }\n\n            return ser;\n          };\n\n          var data = extentData(series);\n\n          var renderBar = function renderBar() {\n            var update = seriesDom.selectAll(\"rect#bar\").data(data.bar);\n            update.transition().duration(DURATION).attr(\"width\", function (d) {\n              return d.width + \"px\";\n            }).attr(\"fill\", function (d) {\n              return d.color;\n            }).attr(\"height\", function (d) {\n              return d.height;\n            }).attr(\"transform\", function (d) {\n              return \"translate(\" + d.x + \",\" + d.y + \")\";\n            });\n            var enter = seriesDom.selectAll(\"rect#bar\").data(data.bar).enter().append(\"rect\").attr(\"id\", \"bar\").attr(\"width\", function (d) {\n              return d.width + \"px\";\n            }).attr(\"fill\", function (d) {\n              return d.color;\n            }).attr(\"height\", function (d) {\n              return 0;\n            }).attr(\"transform\", function (d) {\n              return \"translate(\" + d.x + \",\" + (_grid_.height + _grid_.top) + \")\";\n            });\n            enter.transition().duration(DURATION).attr(\"height\", function (d) {\n              return d.height;\n            }).attr(\"transform\", function (d) {\n              return \"translate(\" + d.x + \",\" + d.y + \")\";\n            });\n            var exit = seriesDom.selectAll(\"rect#bar\").data(data.bar).exit();\n            exit.transition().duration(DURATION).attr(\"height\", function (d) {\n              return 0;\n            }).attr(\"transform\", function (d) {\n              return \"translate(\" + d.x + \",\" + (_grid_.height + _grid_.top) + \")\";\n            });\n          };\n\n          var render3DBar = function render3DBar() {\n            var renderInstruction = function renderInstruction() {\n              var update = seriesDom.selectAll(\"text#instruction\").data(data.bar);\n              update.transition().duration(DURATION).attr(\"fill\", function (d) {\n                return d.$attr(\"label/normal/color\") || \"#fff\";\n              }).attr(\"x\", function (d) {\n                return d.x + 10;\n              }).attr(\"y\", function (d) {\n                return d.y - 10;\n              }).style(\"display\", function (d) {\n                return d.$attr(\"label/normal/show\") != false;\n              });\n              var enter = seriesDom.selectAll(\"text#instruction\").data(data.bar).enter().append(\"text\").attr(\"id\", \"instruction\").attr(\"fill\", function (d) {\n                return d.$attr(\"label/normal/color\") || \"#fff\";\n              }).style(\"font-weight\", \"bold\").style(\"display\", function (d) {\n                return d.$attr(\"label/normal/show\") != false ? \"block\" : \"none\";\n              }).text(function (d) {\n                return d.value;\n              }).attr(\"x\", function (d) {\n                return d.x + 10;\n              }).attr(\"y\", function (d) {\n                return _grid_.height + _grid_.top;\n              });\n              enter.transition().duration(DURATION).attr(\"x\", function (d) {\n                return d.x + 10;\n              }).attr(\"y\", function (d) {\n                return d.y - 10;\n              });\n              var exit = seriesDom.selectAll(\"text#instruction\").data(data.bar).exit();\n              exit.transition().duration(DURATION).attr(\"x\", function (d) {\n                return d.x + 10;\n              }).attr(\"y\", function (d) {\n                return _grid_.height + _grid_.top;\n              });\n            };\n\n            var createShadowLeft = function createShadowLeft() {\n              var updateShadow = seriesDom.selectAll(\"path#threeDbarShadowLeft\").data(data.bar);\n              updateShadow.transition().duration(DURATION).attr(\"d\", function (d) {\n                return createShadowShapeLeft(d.width, d.stackHeight, d.degree);\n              }).attr(\"transform\", function (d) {\n                return \"translate(\" + (d.x + d.width / 2) + \",\" + d.y + \")\";\n              });\n              var enterShadow = seriesDom.selectAll(\"path#threeDbarShadowLeft\").data(data.bar).enter().append(\"path\").attr(\"id\", \"threeDbarShadowLeft\").attr(\"d\", function (d) {\n                return createShadowShapeLeft(d.width, 0, d.degree);\n              }).style(\"fill\", function (d) {\n                return \"url(#shadowGradientLeft)\";\n              }).attr(\"opacity\", function (d) {\n                return 1;\n              }).attr(\"transform\", function (d) {\n                return \"translate(\" + (d.x + d.width / 2) + \",\" + (d.y + d.stackHeight) + \")\";\n              }).style(\"display\", function (d) {\n                return d.isTop ? \"display\" : \"none\";\n              });\n              enterShadow.transition().duration(DURATION).attr(\"transform\", function (d) {\n                return \"translate(\" + (d.x + d.width / 2) + \",\" + d.y + \")\";\n              }).attr(\"d\", function (d) {\n                return createShadowShapeLeft(d.width, d.stackHeight, d.degree);\n              });\n              var exitShadow = seriesDom.selectAll(\"path#threeDbarShadowLeft\").data(data.bar).exit();\n              exitShadow.transition().duration(DURATION);\n            };\n\n            var createShadowRight = function createShadowRight() {\n              var updateShadow = seriesDom.selectAll(\"path#threeDbarShadowRight\").data(data.bar);\n              updateShadow.transition().duration(DURATION).attr(\"d\", function (d) {\n                return createShadowShapeRight(d.width, d.stackHeight, d.degree);\n              }).attr(\"transform\", function (d) {\n                return \"translate(\" + (d.x + d.width / 2) + \",\" + d.y + \")\";\n              });\n              var enterShadow = seriesDom.selectAll(\"path#threeDbarShadowRight\").data(data.bar).enter().append(\"path\").attr(\"id\", \"threeDbarShadowRight\").attr(\"d\", function (d) {\n                return createShadowShapeRight(d.width, 0, d.degree);\n              }).attr(\"fill\", function (d) {\n                return \"url(#shadowGradientRight)\";\n              }).attr(\"transform\", function (d) {\n                return \"translate(\" + (d.x + d.width / 2) + \",\" + (d.y + d.stackHeight) + \")\";\n              }).style(\"display\", function (d) {\n                return d.isTop ? \"display\" : \"none\";\n              });\n              enterShadow.transition().duration(DURATION).attr(\"transform\", function (d) {\n                return \"translate(\" + (d.x + d.width / 2) + \",\" + d.y + \")\";\n              }).attr(\"d\", function (d) {\n                return createShadowShapeRight(d.width, d.stackHeight, d.degree);\n              });\n              var exitShadow = seriesDom.selectAll(\"path#threeDbarShadowRight\").data(data.bar).exit();\n              exitShadow.transition().duration(DURATION);\n            };\n\n            var createTop = function createTop() {\n              var updateTop = seriesDom.selectAll(\"path#threeDbar\").data(data.bar);\n              updateTop.transition().duration(DURATION).attr(\"d\", function (d) {\n                return createDiamond(d.width, d.degree);\n              }).attr(\"fill\", function (d) {\n                return d.color;\n              }).attr(\"transform\", function (d) {\n                return \"translate(\" + d.x + \",\" + d.y + \")\";\n              });\n              var enterTop = seriesDom.selectAll(\"path#threeDbar\").data(data.bar).enter().append(\"path\").attr(\"id\", \"threeDbar\").attr(\"d\", function (d) {\n                return createDiamond(d.width, d.degree);\n              }).attr(\"fill\", function (d) {\n                return d.color;\n              }).attr(\"transform\", function (d) {\n                return \"translate(\" + d.x + \",\" + (_grid_.height + _grid_.top) + \")\";\n              }).style(\"display\", function (d) {\n                return d.isTop ? \"display\" : \"none\";\n              });\n              enterTop.transition().duration(DURATION).attr(\"transform\", function (d) {\n                return \"translate(\" + d.x + \",\" + d.y + \")\";\n              });\n              var exitTop = seriesDom.selectAll(\"path#threeDbar\").data(data.bar).exit();\n              exitTop.transition().duration(DURATION).attr(\"transform\", function (d) {\n                return \"translate(\" + d.x + \",\" + (_grid_.height + _grid_.top) + \")\";\n              });\n            };\n\n            var createBottom = function createBottom() {\n              var updateBottom = seriesDom.selectAll(\"path#threeDbarTop\").data(data.bar);\n              updateBottom.transition().duration(DURATION).attr(\"d\", function (d) {\n                return createDiamond(d.width, d.degree);\n              }).attr(\"fill\", function (d) {\n                return d.color;\n              }).attr(\"transform\", function (d) {\n                return \"translate(\" + d.x + \",\" + (d.y + d.height) + \")\";\n              });\n              var enterBottom = seriesDom.selectAll(\"path#threeDbarTop\").data(data.bar).enter().append(\"path\").attr(\"id\", \"threeDbarTop\").attr(\"d\", function (d) {\n                return createDiamond(d.width, d.degree);\n              }).attr(\"fill\", function (d) {\n                return d.color;\n              }).attr(\"transform\", function (d) {\n                return \"translate(\" + d.x + \",\" + (_grid_.height + _grid_.top) + \")\";\n              });\n              enterBottom.transition().duration(DURATION).attr(\"transform\", function (d) {\n                return \"translate(\" + d.x + \",\" + (d.y + d.height) + \")\";\n              });\n              var exitBottom = seriesDom.selectAll(\"path#threeDbarTop\").data(data.bar).exit();\n              exitBottom.transition().duration(DURATION).attr(\"transform\", function (d) {\n                return \"translate(\" + d.x + \",\" + (_grid_.height + _grid_.top) + \")\";\n              });\n            };\n\n            var createBottomContain = function createBottomContain() {\n              var updateBottom = seriesDom.selectAll(\"path#threeDbarBC\").data(data.bar);\n              updateBottom.transition().duration(DURATION).attr(\"d\", function (d) {\n                return createDiamond(d.width * 1.4, d.degree);\n              }).attr(\"transform\", function (d) {\n                return \"translate(\" + (d.x - d.width * .2) + \",\" + (d.y + d.height) + \")\";\n              });\n              var enterBottom = seriesDom.selectAll(\"path#threeDbarBC\").data(data.bar).enter().append(\"path\").attr(\"id\", \"threeDbarBC\").attr(\"d\", function (d) {\n                return createDiamond(d.width * 1.4, d.degree);\n              }).style(\"display\", function (d) {\n                return d.isBottom ? \"display\" : \"none\";\n              }).attr(\"fill\", function (d) {\n                return \"url(#container)\";\n              }).attr(\"transform\", function (d) {\n                return \"translate(\" + (d.x - d.width * .2) + \",\" + (_grid_.height + _grid_.top) + \")\";\n              });\n              enterBottom.transition().duration(DURATION).attr(\"transform\", function (d) {\n                return \"translate(\" + (d.x - d.width * .2) + \",\" + (d.y + d.height) + \")\";\n              });\n              var exitBottom = seriesDom.selectAll(\"path#threeDbarBC\").data(data.bar).exit();\n              exitBottom.transition().duration(DURATION).attr(\"transform\", function (d) {\n                return \"translate(\" + d.x + \",\" + (_grid_.height + _grid_.top) + \")\";\n              });\n            };\n\n            var createBody = function createBody() {\n              var updateBody = seriesDom.selectAll(\"rect#threeDbarBottom\").data(data.bar);\n              updateBody.transition().duration(DURATION).attr(\"width\", function (d) {\n                return d.width + \"px\";\n              }).attr(\"fill\", function (d) {\n                return d.color;\n              }).attr(\"height\", function (d) {\n                return d.height;\n              }).attr(\"transform\", function (d) {\n                return \"translate(\" + d.x + \",\" + d.y + \")\";\n              });\n              var enterBody = seriesDom.selectAll(\"rect#threeDbarBottom\").data(data.bar).enter().append(\"rect\").attr(\"id\", \"threeDbarBottom\").attr(\"width\", function (d) {\n                return d.width + \"px\";\n              }).attr(\"fill\", function (d) {\n                return d.color;\n              }).attr(\"height\", function (d) {\n                return 0;\n              }).attr(\"transform\", function (d) {\n                return \"translate(\" + d.x + \",\" + (_grid_.height + _grid_.top) + \")\";\n              });\n              enterBody.transition().duration(DURATION).attr(\"height\", function (d) {\n                return d.height;\n              }).attr(\"transform\", function (d) {\n                return \"translate(\" + d.x + \",\" + d.y + \")\";\n              });\n              var exitBody = seriesDom.selectAll(\"rect#threeDbarBottom\").data(data.bar).exit();\n              exitBody.transition().duration(DURATION).attr(\"height\", function (d) {\n                return 0;\n              }).attr(\"transform\", function (d) {\n                return \"translate(\" + d.x + \",\" + (_grid_.height + _grid_.top) + \")\";\n              });\n            };\n\n            createBottomContain();\n            createBody();\n            createBottom();\n            createShadowRight();\n            createShadowLeft();\n            createTop();\n            renderInstruction();\n          };\n\n          if (types.indexOf(\"bar\") != -1) {\n            renderBar();\n          } else if (types.indexOf(\"3dbar\") != -1) {\n            render3DBar();\n          }\n\n          ;\n        };\n\n        createAxis();\n        createSeries(options.series);\n      };\n\n      var refresh = function refresh() {};\n\n      var setGrid = function setGrid(gd) {\n        var grid = {\n          top: \"10%\",\n          left: \"10%\",\n          width: \"80%\",\n          height: \"80%\"\n        }.$extension(gd);\n        var t = calculate(height, grid.top);\n        var w = calculate(width, grid.width);\n        var h = calculate(height, grid.height);\n        var l = calculate(width, grid.left);\n        _grid_ = {\n          top: t,\n          width: w,\n          height: h,\n          left: l\n        };\n      };\n\n      var svgchart = function svgchart(dom, options) {\n        setTimeout(function () {\n          setSize();\n\n          if (options) {\n            setGrid(options.grid);\n            setOption(options);\n          }\n\n          ;\n        });\n      };\n\n      svgchart.prototype.setOption = setOption;\n      svgchart.prototype.refresh = refresh;\n      AxisDom.attr(\"id\", \"axis\");\n      seriesDom.attr(\"id\", \"series\");\n      $(window).on(\"resize\", resize);\n      creatGradient('shadowGradientLeft', {\n        color1: \"rgba(0,0,0,.1)\",\n        color2: \"rgba(0,0,0,0)\",\n        x1: \"0%\",\n        y1: \"0%\",\n        x2: \"0%\",\n        y2: \"1000%\"\n      });\n      creatGradient('shadowGradientRight', {\n        color1: \"rgba(0,0,0,.5)\",\n        color2: \"rgba(0,0,0,.3)\"\n      });\n      creatGradient('container', {\n        color1: \"#aaa\",\n        color2: \"#ddd\"\n      });\n      creatGradient('base', {\n        color1: \"rgba(250,250,250,0)\",\n        color2: \"rgba(250,250,250,.5)\",\n        x1: \"0%\",\n        y1: \"0%\",\n        x2: \"0%\",\n        y2: \"100%\"\n      });\n      return new svgchart(dom, _options_);\n    }\n  };\n}"],"sourceRoot":"/source/"}