{"version":3,"sources":["app-editor/js/toolkit/codeMirror.js"],"names":["define","$","CodeMirror","editor","cm","init","value","dom","document","body","getElementsByTagName","map","keyMap","sublime","key","val","test","commands","joinLines","toString","replace","lineNumbers","mode","name","json","autoCloseBrackets","matchBrackets","showCursorWhenSelecting","theme","tabSize","setValue","JSON","stringify","setTimeout","refresh","getValue"],"mappings":"AAAAA,OAAO,CAAC,SAAU,+CAAgD,0DAA2D,oDAAqD,oDAAqD,yDAA0D,yDAA0D,sDAAuD,oDAAqD,oDAAqD,sDAAuD,2DAA4D,gDAAiD,SAAUC,EAAGC,GAC3qB,IACIC,EADAC,EAAK,GA+CT,OA7CAA,EAAGC,KAIH,WACE,IAAIC,EAAQ,oFACRC,EAAMC,SAASC,KAAKC,qBAAqB,cAAc,GACvDC,EAAMT,EAAWU,OAAOC,QAE5B,IAAK,IAAIC,KAAOH,EAAK,CACnB,IAAII,EAAMJ,EAAIG,GACH,eAAPA,GAA+B,OAAPC,GAAkB,OAAOC,KAAKD,KAAQ,YAAYC,KAAKD,KAAOT,GAAS,MAASQ,EAAM,OAAWC,EAAM,QAGrIT,GAAS,4CACTA,GAASJ,EAAWe,SAASC,UAAUC,WAAWC,QAAQ,iBAAkB,uBAAuBA,QAAQ,QAAS,MAAQ,KAC5HjB,EAASD,EAAWK,EAAK,CACvBD,MAAOA,EACPe,aAAa,EACbC,KAAM,CACJC,KAAM,aACNC,MAAM,GAERZ,OAAQ,UACRa,mBAAmB,EACnBC,eAAe,EACfC,yBAAyB,EACzBC,MAAO,UACPC,QAAS,KA3BbzB,EAAG0B,SA+BH,SAAkBxB,GAChBH,EAAO2B,SAASC,KAAKC,UAAU1B,EAAO,KAAM,IAC5C2B,WAEA,WACE9B,EAAO+B,aAnCX9B,EAAG+B,SAuCH,WACE,OAAOhC,EAAOgC,YAGT/B","file":"app-editor/js/toolkit/codeMirror.js","sourcesContent":["define([\"jquery\", '../../node_modules/codemirror/lib/codemirror', '../../node_modules/codemirror/addon/search/searchcursor', '../../node_modules/codemirror/addon/search/search', '../../node_modules/codemirror/addon/dialog/dialog', '../../node_modules/codemirror/addon/edit/matchbrackets', '../../node_modules/codemirror/addon/edit/closebrackets', '../../node_modules/codemirror/addon/comment/comment', '../../node_modules/codemirror/addon/wrap/hardwrap', '../../node_modules/codemirror/addon/fold/foldcode', '../../node_modules/codemirror/addon/fold/brace-fold', '../../node_modules/codemirror/mode/javascript/javascript', '../../node_modules/codemirror/keymap/sublime'], function ($, CodeMirror) {\n  var cm = {};\n  var editor;\n  cm.init = init;\n  cm.setValue = setValue;\n  cm.getValue = getValue;\n\n  function init() {\n    var value = \"// The bindings defined specifically in the Sublime Text mode\\nvar bindings = {\\n\";\n    var dom = document.body.getElementsByTagName(\"codemirror\")[0];\n    var map = CodeMirror.keyMap.sublime;\n\n    for (var key in map) {\n      var val = map[key];\n      if (key != \"fallthrough\" && val != \"...\" && (!/find/.test(val) || /findUnder/.test(val))) value += \"  \\\"\" + key + \"\\\": \\\"\" + val + \"\\\",\\n\";\n    }\n\n    value += \"}\\n\\n// The implementation of joinLines\\n\";\n    value += CodeMirror.commands.joinLines.toString().replace(/^function\\s*\\(/, \"function joinLines(\").replace(/\\n  /g, \"\\n\") + \"\\n\";\n    editor = CodeMirror(dom, {\n      value: value,\n      lineNumbers: true,\n      mode: {\n        name: \"javascript\",\n        json: true\n      },\n      keyMap: \"sublime\",\n      autoCloseBrackets: true,\n      matchBrackets: true,\n      showCursorWhenSelecting: true,\n      theme: \"monokai\",\n      tabSize: 2\n    });\n  }\n\n  function setValue(value) {\n    editor.setValue(JSON.stringify(value, null, 2));\n    setTimeout(delay);\n\n    function delay() {\n      editor.refresh();\n    }\n  }\n\n  function getValue() {\n    return editor.getValue();\n  }\n\n  return cm;\n});"],"sourceRoot":"/source/"}