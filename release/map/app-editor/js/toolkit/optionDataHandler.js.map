{"version":3,"sources":["app-editor/js/toolkit/optionDataHandler.js"],"names":["define","type","dataType","formatStr","event","option","unitslist","series_data","option_clone","series","legend","axis","oPclone","nodes","units","kpis","ctype","value","category","format","JSON","parse","stringify","model","data","i","find","nodeId","j","kpiId","push","group","xa","setTimeFormat","time","name","cilabel","dimensionalData_byTime","series_a","legend_v","polar","label","kpilabel","dimensionalData_byCi","series_v","records","record","length","unit","formatUnit","linearData_byTime","kpiname","linearData_byCi","polarData","ser","my_nunit","clone","this","xAxis","yAxis","axisLabel","undefined","formatter","apply","oriData","len","max","v","bindDataToBar","bindDataToPie","itemStyle","normal","position","params","percent","toFixed","labelLine","show","bindDataToPie_2Chart","bindDataToGauge","bindDataToScatter","bindDataToK","tmp","indicator","text","bindDataToRader","matrix","bindDataToChord","bindDataToFunnel","bindDataToTreemap","toUpperCase","unitCode","unitName","result","date","split","mytime","year","month","day","hour","minute","second","dateFormat","timeFormat"],"mappings":"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","file":"app-editor/js/toolkit/optionDataHandler.js","sourcesContent":["define([], function () {\n  function optionDataHandler(type, dataType, formatStr, event, option, unitslist) {\n    var nodes = event.nodes;\n    var units = unitslist;\n    var kpis = event.kpis;\n    var type = type;\n    var ctype = dataType.series.value;\n    var category = dataType.category;\n    var series = [];\n    var series_data = [];\n    var legend = [];\n    var legend_data = [];\n    var axis = [];\n    var axis_data = [];\n    var format = formatStr;\n    var polar = [];\n    var polar_data = [];\n    var option_clone = JSON.parse(JSON.stringify(option));\n\n    if (dataType.series.model == \"dimensional\") {\n      if (category == \"time\") {\n        series_data = dimensionalData_byTime(ctype, event.data);\n      } else if (category == \"ci\") {\n        series_data = dimensionalData_byCi(ctype, event.data);\n      }\n    } else if (dataType.series.model == \"linear\") {\n      if (category == \"time\") {\n        series_data = linearData_byTime(event.data);\n      } else if (category == \"ci\") {\n        series_data = linearData_byCi(event.data);\n      }\n    } else if (dataType.series.model == \"polar\") {\n      series_data = polarData(ctype, event.data);\n    }\n\n    switch (type) {\n      case \"line\":\n        bindDataToLine.apply(option_clone, [series_data]);\n        break;\n\n      case \"line_2d\":\n        bindDataToLine_2d.apply(option_clone, [series_data]);\n        break;\n\n      case \"line_2axis\":\n        option_clone = bindDataToLine_2axis(series_data, JSON.parse(JSON.stringify(option_clone)));\n        break;\n\n      case \"line_log\":\n        //option_clone = bindDataToLine_log(series_data, JSON.parse(JSON.stringify(option_clone)));\n        bindDataToLine_log.apply(option_clone, [series_data]);\n        break;\n\n      case \"bar\":\n        option_clone = bindDataToBar(series_data, JSON.parse(JSON.stringify(option_clone)));\n        break;\n\n      case \"pie\":\n        option_clone = bindDataToPie(series_data, JSON.parse(JSON.stringify(option_clone)));\n        break;\n\n      case \"pie_2chart\":\n        option_clone = bindDataToPie_2Chart(series_data, JSON.parse(JSON.stringify(option_clone)));\n        break;\n\n      case \"gauge\":\n        option_clone = bindDataToGauge(series_data, JSON.parse(JSON.stringify(option_clone)));\n        break;\n\n      case \"scatter\":\n        option_clone = bindDataToScatter(series_data, JSON.parse(JSON.stringify(option_clone)));\n        break;\n\n      case \"k\":\n        option_clone = bindDataToK(series_data, JSON.parse(JSON.stringify(option_clone)));\n        break;\n\n      case \"radar\":\n        option_clone = bindDataToRader(series_data, JSON.parse(JSON.stringify(option_clone)));\n        break;\n\n      case \"chord\":\n        option_clone = bindDataToChord(series_data, JSON.parse(JSON.stringify(option_clone)));\n        break;\n\n      case \"funnel\":\n        option_clone = bindDataToFunnel(series_data, JSON.parse(JSON.stringify(option_clone)));\n        break;\n\n      case \"treemap\":\n        option_clone = bindDataToTreemap(series_data, JSON.parse(JSON.stringify(option_clone)));\n        break;\n\n      default:\n        break;\n    }\n\n    return {\n      option: option_clone\n    };\n\n    function formatUnit(unit) {\n      for (var i in units) {\n        if (unit.toUpperCase() == units[i].unitCode.toUpperCase()) {\n          return units[i].unitName;\n        }\n      }\n\n      return '';\n    }\n\n    ;\n\n    function bindDataToLine(series_data) {\n      var ser = [];\n      var series = series_data.series_v;\n      var my_nunit = series_data.unit;\n      var legend = series_data.legend_v;\n      var axis = series_data.axis;\n\n      for (var i in series) {\n        var clone = JSON.parse(JSON.stringify(option_clone.series[0]));\n        clone.data = series[i].data;\n        clone.name = series[i].name;\n        ser.push(clone);\n      }\n\n      this.series = ser;\n      this.legend.data = legend;\n      this.xAxis[0].data = axis[0];\n\n      if (my_nunit != \"Amount\" && my_nunit != undefined) {\n        this.yAxis[0].axisLabel = {\n          formatter: \"{value} \" + my_nunit + \"\"\n        };\n      } else {\n        this.yAxis[0].axisLabel = {\n          formatter: \"{value}\"\n        };\n      }\n    }\n\n    function bindDataToLine_log(series_data) {\n      var oPclone = JSON.parse(JSON.stringify(this));\n      this.series = [];\n      var series = series_data.series_v;\n      var my_nunit = formatUnit(series_data.unit);\n      var legend = series_data.legend_v;\n      var axis = series_data.axis;\n\n      for (var i in series) {\n        var clone = JSON.parse(JSON.stringify(oPclone.series[0]));\n        clone.data = series[i].data;\n        clone.name = series[i].name;\n        this.series.push(clone);\n      }\n\n      this.legend.data = legend;\n      this.xAxis[0].data = axis[0];\n    }\n\n    function bindDataToLine_2d(series_data) {\n      var series = series_data.series;\n\n      for (var i in series) {\n        this.series[i].data = series[i].data;\n      }\n\n      this.legend.data = legend;\n    }\n\n    function bindDataToLine_2axis(series_data, option_clone) {\n      var series = series_data.series_v;\n      var legend = series_data.legend_v;\n      var axis = series_data.axis;\n      var oPclone = JSON.parse(JSON.stringify(option_clone));\n      oPclone.series[0].data = series[0].data;\n      oPclone.series[0].name = series[0].name;\n\n      oPclone.series[1].data = function () {\n        var oriData = series[1].data;\n        var len = oriData.length;\n\n        while (len--) {\n          oriData[len] *= -1;\n        }\n\n        return oriData;\n      }();\n\n      oPclone.series[1].name = series[1].name;\n      oPclone.legend.data = legend;\n      oPclone.xAxis[0].data = axis[0];\n      oPclone.yAxis[0].max = 100;\n      oPclone.yAxis[0].name = legend[0];\n      delete oPclone.yAxis[1].max;\n      oPclone.yAxis[1].name = legend[1];\n      oPclone.yAxis[1].axisLabel = {\n        formatter: function formatter(v) {\n          return -v;\n        }\n      };\n      return oPclone;\n    }\n\n    function bindDataToBar(series_data, option_clone) {\n      var oPclone = JSON.parse(JSON.stringify(option_clone));\n      oPclone.series = [];\n      var series = series_data.series;\n      var legend = series_data.legend;\n      var axis = series_data.axis;\n\n      for (var i in series) {\n        var clone = JSON.parse(JSON.stringify(option_clone.series[0]));\n        clone.data = series[i].data;\n        clone.name = series[i].name;\n        oPclone.series.push(clone);\n      }\n\n      oPclone.legend.data = legend;\n      oPclone.xAxis[0].data = axis[0];\n      return oPclone;\n    }\n\n    function bindDataToPie(series_data, option_clone) {\n      var oPclone = JSON.parse(JSON.stringify(option_clone));\n      oPclone.series = [];\n      var series = series_data.series;\n      var legend = series_data.legend;\n      var axis = series_data.axis;\n\n      for (var i in series) {\n        var clone = JSON.parse(JSON.stringify(option_clone.series[0]));\n        clone.data = series[i].data;\n        clone.name = series[i].name;\n        oPclone.series.push(clone);\n      }\n\n      oPclone.legend.data = legend;\n      delete oPclone.xAxis;\n      return oPclone;\n    }\n\n    function bindDataToPie_2Chart(series_data, option_clone) {\n      var oPclone = JSON.parse(JSON.stringify(option_clone));\n      var series = series_data.series;\n      oPclone.legend.data = [];\n\n      for (var i in series) {\n        oPclone.series[i].data = series[i].value;\n\n        if (i == 0) {\n          oPclone.series[i].itemStyle = {\n            normal: {\n              label: {\n                position: 'inner',\n                formatter: function formatter(params) {\n                  return (params.percent - 0).toFixed(0) + '%';\n                }\n              },\n              labelLine: {\n                show: false\n              }\n            }\n          };\n        } else {\n          oPclone.series[i].itemStyle = {\n            normal: {\n              label: {\n                formatter: function formatter(params) {\n                  return (params.percent - 0).toFixed(0) + '%';\n                }\n              },\n              labelLine: {\n                show: false\n              }\n            }\n          };\n        }\n\n        for (var j in series[i].value) {\n          oPclone.legend.data.push(series[i].value[j].name);\n        }\n      }\n\n      delete oPclone.xAxis;\n      return oPclone;\n    }\n\n    function bindDataToGauge(series_data, option_clone) {\n      var oPclone = JSON.parse(JSON.stringify(option_clone));\n      var series = series_data.series;\n      var legend = series_data.legend;\n      var axis = series_data.axis;\n\n      for (var i in oPclone.series) {\n        if (series[0].data[i]) {\n          oPclone.series[0].data[i] = {\n            name: series[0].data[i].kpiname,\n            value: series[0].data[i].value\n          };\n        }\n      }\n\n      delete oPclone.legend;\n      delete oPclone.xAxis;\n      return oPclone;\n    }\n\n    function bindDataToScatter(series_data, option_clone) {\n      var oPclone = JSON.parse(JSON.stringify(option_clone));\n      oPclone.series = [];\n      var series = series_data.series;\n      var legend = series_data.legend;\n      var axis = series_data.axis;\n\n      for (var i in series) {\n        var clone = JSON.parse(JSON.stringify(option_clone.series[0]));\n        clone.data = series[i].data;\n        clone.name = series[i].name;\n        oPclone.series.push(clone);\n      }\n\n      oPclone.legend.data = legend;\n      /*\n       oPclone.dataZoom = {\n       show : true,\n       realtime : true\n       }\n       */\n\n      return oPclone;\n    }\n\n    function bindDataToK(series_data, option_clone) {\n      var oPclone = JSON.parse(JSON.stringify(option_clone));\n      oPclone.series = [];\n      var series = series_data.series;\n      var legend = series_data.legend;\n      var axis = series_data.axis;\n\n      for (var i in series) {\n        var clone = JSON.parse(JSON.stringify(option_clone.series[0]));\n        clone.data = series[i].data;\n        clone.name = series[i].name;\n        oPclone.series.push(clone);\n      }\n\n      oPclone.legend.data = legend;\n      oPclone.xAxis[0].data = axis[0];\n      /*\n       oPclone.dataZoom = {\n       show : true,\n       realtime : true\n       }\n       */\n\n      return oPclone;\n    }\n\n    function bindDataToRader(series_data, option_clone) {\n      var oPclone = JSON.parse(JSON.stringify(option_clone));\n      oPclone.series = [];\n      oPclone.series[0] = {};\n      oPclone.series[0].type = \"radar\";\n      var series = series_data.series;\n      var legend = series_data.legend;\n      var polar = series_data.polar;\n      var tmp = [];\n\n      for (var i in series[0]) {\n        var clone = JSON.parse(JSON.stringify(option_clone.series[0].data[0]));\n        clone.value = series[0][i].data;\n        clone.name = series[0][i].name;\n        tmp.push(clone);\n      }\n\n      oPclone.polar = [];\n      oPclone.polar[0] = {};\n      oPclone.polar[0].indicator = [];\n\n      for (var j in polar) {\n        oPclone.polar[0].indicator.push({\n          text: polar[j].label,\n          max: 100\n        });\n      }\n\n      oPclone.series[0].data = tmp;\n      oPclone.legend.data = legend;\n      delete oPclone.xAxis;\n      return oPclone;\n    }\n\n    function bindDataToChord(series_data, option_clone) {\n      var oPclone = JSON.parse(JSON.stringify(option_clone));\n      var series = series_data.series_a;\n      var legend = series_data.legend;\n      oPclone.series[0].data = [];\n      oPclone.series[0].matrix = [];\n\n      for (var i in series) {\n        oPclone.series[0].data.push({\n          name: series[i].label\n        });\n        oPclone.series[0].matrix.push(series[i].value);\n      }\n\n      oPclone.legend.data = legend;\n      delete oPclone.xAxis;\n      return oPclone;\n    }\n\n    function bindDataToFunnel(series_data, option_clone) {\n      var oPclone = JSON.parse(JSON.stringify(option_clone));\n      var series = series_data.series;\n      var legend = series_data.legend_v;\n\n      for (var i in series) {\n        oPclone.series[i].data = [];\n\n        for (var j in series[i].value) {\n          oPclone.series[i].data.push({\n            name: legend[j],\n            value: series[i].value[j]\n          });\n        }\n\n        oPclone.series[i].name = series[i].name;\n      }\n\n      oPclone.legend.data = legend;\n      return oPclone;\n    }\n\n    function bindDataToTreemap(series_data, option_clone) {\n      var oPclone = JSON.parse(JSON.stringify(option_clone));\n      oPclone.series = [];\n      var series = series_data.series;\n      var legend = series_data.legend;\n      var axis = series_data.axis;\n\n      for (var i in series) {\n        var clone = JSON.parse(JSON.stringify(option_clone.series[0]));\n        var tmp = [];\n\n        for (var j in series[i].data) {\n          tmp.push({\n            name: series[i].data[j].kpiname,\n            value: series[i].data[j].value\n          });\n        }\n\n        clone.data = tmp;\n        clone.name = series[i].name;\n        oPclone.series.push(clone);\n      }\n\n      delete oPclone.legend;\n      delete oPclone.xAxis;\n      return oPclone;\n    }\n\n    function linearData_byTime(data) {\n      var series = [];\n      var series_v = [];\n      var legend = [];\n      var legend_v = [];\n      var axis = [];\n\n      for (var i in data) {\n        (function (records) {\n          var group = [];\n          var xa = [];\n\n          for (var i in records.data) {\n            (function (record) {\n              if (record) {\n                group.push(record.value);\n                xa.push(setTimeFormat(record.time, format));\n              }\n            })(records.data[i]);\n          }\n\n          ;\n\n          if (group.length) {\n            axis.push(xa);\n\n            if (nodes.length == 1) {\n              series.push({\n                name: records.label,\n                data: group\n              });\n              series_v.push({\n                name: records.label,\n                data: group\n              });\n              legend.push(records.label);\n              legend_v.push(records.label);\n            } else if (kpis.length == 1) {\n              series.push({\n                name: records.cilabel,\n                data: group\n              });\n              series_v.push({\n                name: records.cilabel,\n                data: group\n              });\n              legend.push(records.cilabel);\n              legend_v.push(records.cilabel);\n            } else {\n              series.push({\n                name: records.label,\n                data: group\n              });\n              series_v.push({\n                name: records.label,\n                data: group\n              });\n              legend.push(records.label);\n              legend_v.push(records.label);\n            }\n          }\n        })(data[i]);\n      }\n\n      return {\n        series: series,\n        series_v: series_v,\n        legend: legend,\n        legend_v: legend_v,\n        axis: axis,\n        unit: data[0] ? formatUnit(data[0].unit) : ''\n      };\n    }\n\n    function linearData_byCi(data) {\n      var series = [];\n      var legend = [];\n      var axis = [];\n      axis[0] = [];\n      series[0] = {};\n\n      if (data.length > 0) {\n        series[0].name = data[0].cilabel;\n      }\n\n      series[0].data = [];\n\n      for (var i in data) {\n        if (nodes.length == 1) {\n          series[0].data.push({\n            name: data[i].kpilabel,\n            kpiname: data[i].kpilabel,\n            value: data[i].value ? data[i].value : 0\n          });\n          legend.push(data[i].kpilabel);\n          axis[0].push(data[i].kpilabel);\n        } else if (kpis.length == 1) {\n          series[0].data.push({\n            name: data[i].cilabel,\n            kpiname: data[i].cilabel,\n            value: data[i].value ? data[i].value : 0\n          });\n          legend.push(data[i].cilabel);\n          axis[0].push(data[i].cilabel);\n        } else {\n          series[0].data.push({\n            name: data[i].label,\n            kpiname: data[i].kpilabel,\n            value: data[i].value ? data[i].value : 0\n          });\n          legend.push(data[i].label);\n          axis[0].push(data[i].label);\n        }\n      }\n\n      return {\n        series: series,\n        legend: legend,\n        axis: axis\n      };\n    }\n\n    function dimensionalData_byTime(type, data) {\n      var series = [];\n      var legend = [];\n      var axis = [];\n\n      for (var i in data) {\n        var find = false;\n\n        if (type == \"ci\") {\n          find = function (nodeId) {\n            for (var j in series) {\n              if (series[j].nodeId == nodeId) {\n                return series[j];\n              }\n            }\n\n            return false;\n          }(data[i].nodeId);\n        } else if (type == \"kpi\") {\n          find = function (kpiId) {\n            for (var j in series) {\n              if (series[j].kpiId == kpiId) {\n                return series[j];\n              }\n            }\n\n            return false;\n          }(data[i].kpiId);\n        }\n\n        if (find) {\n          for (var j in find.data) {\n            if (data[i].data[j]) {\n              find.data[j].push(data[i].data[j].value);\n            } else {\n              find.data[j].push(0);\n            }\n          }\n        } else {\n          var group = [];\n          var xa = [];\n\n          for (var j in data[i].data) {\n            group.push([data[i].data[j].value]);\n            xa.push(setTimeFormat(data[i].data[j].time, format));\n          }\n\n          axis.push(xa);\n          series.push({\n            nodeId: data[i].nodeId,\n            kpiId: data[i].kpiId,\n            name: data[i].cilabel,\n            data: group\n          });\n          legend.push(data[i].cilabel);\n        }\n      }\n\n      return {\n        series: series,\n        legend: legend,\n        axis: axis\n      };\n    }\n\n    function dimensionalData_byCi(type, data) {\n      var series = [];\n      var series_a = [];\n      var legend = [];\n      var legend_v = [];\n      var polar = [];\n\n      for (var i in data) {\n        var find = false;\n\n        find = function (nodeId) {\n          for (var j in series) {\n            if (series[j].nodeId == nodeId) {\n              return {\n                series: series[j],\n                series_a: series_a[j]\n              };\n            }\n          }\n\n          return false;\n        }(data[i].nodeId);\n\n        if (find) {\n          find.series.value.push({\n            name: data[i].label,\n            value: data[i].value ? data[i].value : 0\n          });\n          find.series_a.value.push(data[i].value ? data[i].value : 0);\n        } else {\n          var group = [];\n          series.push({\n            label: data[i].cilabel,\n            nodeId: data[i].nodeId,\n            kpiId: data[i].kpiId,\n            name: data[i].label,\n            value: [{\n              name: data[i].label,\n              value: data[i].value ? data[i].value : 0\n            }]\n          });\n          series_a.push({\n            label: data[i].cilabel,\n            nodeId: data[i].nodeId,\n            kpiId: data[i].kpiId,\n            name: data[i].label,\n            value: [data[i].value ? data[i].value : 0]\n          });\n          legend.push(data[i].cilabel);\n        }\n      }\n\n      for (var i in data) {\n        var find = false;\n\n        find = function (kpiId) {\n          for (var j in polar) {\n            if (polar[j].kpiId == kpiId) {\n              return true;\n            }\n          }\n\n          return false;\n        }(data[i].kpiId);\n\n        if (!find) {\n          polar.push({\n            kpiId: data[i].kpiId,\n            label: data[i].kpilabel\n          });\n          legend_v.push(data[i].kpilabel);\n        }\n      }\n\n      return {\n        series: series,\n        legend: legend,\n        legend_v: legend_v,\n        series_a: series_a,\n        polar: polar\n      };\n    }\n\n    function polarData(type, data) {\n      var series = [];\n      var legend = [];\n      var polar = [];\n\n      for (var i in data) {\n        var find = false;\n\n        find = function (nodeId) {\n          for (var j in series[0]) {\n            if (series[0][j].nodeId == nodeId) {\n              return series[0][j];\n            }\n          }\n\n          return false;\n        }(data[i].nodeId);\n\n        if (find) {\n          find.data.push(data[i].value ? data[i].value : 0);\n        } else {\n          series[0] = series[0] ? series[0] : [];\n          series[0].push({\n            label: data[i].cilabel,\n            nodeId: data[i].nodeId,\n            kpiId: data[i].kpiId,\n            name: data[i].cilabel,\n            data: [data[i].value ? data[i].value : 0]\n          });\n          legend.push(data[i].cilabel);\n        }\n      }\n\n      for (var i in data) {\n        var find = false;\n\n        find = function (kpiId) {\n          for (var j in polar) {\n            if (polar[j].kpiId == kpiId) {\n              return true;\n            }\n          }\n\n          return false;\n        }(data[i].kpiId);\n\n        if (!find) {\n          polar.push({\n            kpiId: data[i].kpiId,\n            label: data[i].kpilabel\n          });\n        }\n      }\n\n      return {\n        series: series,\n        legend: legend,\n        polar: polar\n      };\n    }\n\n    function setTimeFormat(time, format) {\n      var result = '';\n      var date = time.split(\" \")[0];\n      var mytime = time.split(\" \")[1];\n      var year = date.split(\"/\")[0];\n      var month = date.split(\"/\")[1];\n      var day = date.split(\"/\")[2];\n      var hour = mytime.split(\":\")[0];\n      var minute = mytime.split(\":\")[1];\n      var second = mytime.split(\":\")[2] ? mytime.split(\":\")[2] : \"00\";\n      var dateFormat = format.split(\"-\")[0].split(\"/\");\n      var timeFormat = format.split(\"-\")[1].split(\":\");\n\n      for (var i in dateFormat) {\n        switch (dateFormat[i]) {\n          case \"yy\":\n            result += year + \"年\";\n            break;\n\n          case \"mm\":\n            result += month + \"月\";\n            break;\n\n          case \"dd\":\n            result += day + \"日\";\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      if (dateFormat.length > 1) {\n        result += \",\";\n      }\n\n      for (var i in timeFormat) {\n        switch (timeFormat[i]) {\n          case \"hh\":\n            result += hour > 9 ? hour : \"0\" + hour;\n            break;\n\n          case \"mm\":\n            result += minute > 9 ? minute : \"0\" + minute;\n            break;\n\n          case \"ss\":\n            result += second > 9 ? second : \"0\" + second;\n            break;\n\n          default:\n            break;\n        }\n\n        if (i < timeFormat.length - 1) {\n          result += \":\";\n        }\n      }\n\n      return result;\n    }\n  }\n\n  return optionDataHandler;\n});"],"sourceRoot":"/source/"}