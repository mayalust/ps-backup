{"version":3,"sources":["app-editor/js/services/authservice.js"],"names":["define","services","factory","$http","$rootScope","serviceProxy","loginService","version","loginPath","user","isAuthenticated","roles","viewLoadFinished","viewlist","changeAuth","loggedIn","$broadcast","getCurrentUser","callback","error","get","result","login","account","password","logout","redirectToLogin"],"mappings":"AAAAA,OAAO,CAAC,OAAQ,SAAUC,GACxB,aAEAA,EAASC,QAAQ,cAAe,CAAC,QAAS,aAAc,eAAgB,SAAUC,EAAOC,EAAYC,GACnG,IAAIC,EAAuC,MAAxBD,EAAaE,QAAkB,kBAAoB,qBAClEL,EAAU,CACZM,UAAW,SACXC,KAAM,CACJC,iBAAiB,EACjBC,MAAO,MAETC,kBAAkB,EAClBC,SAAU,IAsDZ,SAASC,EAAWC,GAClBb,EAAQO,KAAKC,gBAAkBK,EAC/BX,EAAWY,WAAW,qBAAsBD,GAI9C,OAzDAb,EAAQe,eAAiB,SAAUC,EAAUC,GAC3Cd,EAAae,IAAId,EAAc,iBAAkB,KAAM,SAAUe,GAC3DH,GACFA,EAASG,GAGG,MAAVA,GAA4B,IAAVA,GACpBnB,EAAQO,KAAOY,EAEfP,EADAZ,EAAQO,KAAKC,iBAAkB,IAG/BI,GAAW,IAEZK,IAGLjB,EAAQoB,MAAQ,SAAUC,EAASC,EAAUN,EAAUC,GACrDd,EAAae,IAAId,EAAc,QAAS,CAACiB,EAASC,GAAW,SAAUH,GACvD,MAAVA,IACFnB,EAAQO,KAAOY,EAEfP,EADAZ,EAAQO,KAAKC,iBAAkB,IAIjCQ,EAASG,IACRF,IAGLjB,EAAQuB,OAAS,SAAUP,EAAUC,GACnCd,EAAae,IAAId,EAAc,SAAU,KAAM,SAAUe,GACvDnB,EAAQO,KAAO,GAEfK,EADAZ,EAAQO,KAAKC,iBAAkB,GAE/BQ,EAASG,IACRF,IAaLjB,EAAQwB,gBAAkB,WACxBtB,EAAWY,WAAW,kBAAmB,OASpCd","file":"app-editor/js/services/authservice.js","sourcesContent":["define(['app'], function (services) {\n  'use strict';\n\n  services.factory('authService', ['$http', '$rootScope', 'serviceProxy', function ($http, $rootScope, serviceProxy) {\n    var loginService = serviceProxy.version == 'V1' ? 'userFlexService' : 'userLoginUIService';\n    var factory = {\n      loginPath: '/login',\n      user: {\n        isAuthenticated: false,\n        roles: null\n      },\n      viewLoadFinished: false,\n      viewlist: []\n    };\n\n    factory.getCurrentUser = function (callback, error) {\n      serviceProxy.get(loginService, 'getCurrentUser', null, function (result) {\n        if (callback) {\n          callback(result);\n        }\n\n        if (result != null && result != \"\") {\n          factory.user = result;\n          factory.user.isAuthenticated = true;\n          changeAuth(true);\n        } else {\n          changeAuth(false);\n        }\n      }, error);\n    };\n\n    factory.login = function (account, password, callback, error) {\n      serviceProxy.get(loginService, 'login', [account, password], function (result) {\n        if (result != null) {\n          factory.user = result;\n          factory.user.isAuthenticated = true;\n          changeAuth(true);\n        }\n\n        callback(result);\n      }, error);\n    };\n\n    factory.logout = function (callback, error) {\n      serviceProxy.get(loginService, 'logout', null, function (result) {\n        factory.user = {};\n        factory.user.isAuthenticated = false;\n        changeAuth(false);\n        callback(result);\n      }, error);\n      /*\n      var deferred = $http.post(loginService + 'api/rest/post' + '/logout');\n      return deferred.then(\n      \tfunction(results) {\n      \t\tvar loggedIn = !results.data.status;\n      \t\tchangeAuth(loggedIn);\n      \t\tcallback(result);\n      \t\treturn loggedIn;\n      \t});\n      */\n    };\n\n    factory.redirectToLogin = function () {\n      $rootScope.$broadcast('redirectToLogin', null);\n    };\n\n    function changeAuth(loggedIn) {\n      factory.user.isAuthenticated = loggedIn;\n      $rootScope.$broadcast('loginStatusChanged', loggedIn);\n    } //factory.getCurrentUser();\n\n\n    return factory;\n  }]);\n});"],"sourceRoot":"/source/"}