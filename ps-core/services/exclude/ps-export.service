<config injector="$rootScope,$timeout,$compile" type="factory"
></config>
<script type="text/javascript">
import XLSX from 'xlsx';

export default function () {

  // 将指定的自然数转换为26进制表示。映射关系：[0-25] -> [A-Z]。
  function getCharCol (n) {
    let temCol = '';
    let s = '';
    let m = 0;
    while (n > 0) {
      m = n % 26 + 1;
      s = String.fromCharCode(m + 64) + s;
      n = (n - m) / 26;
    }
    return s;
  }

  //字符串转字符流
  function s2ab (s) {
    let buf = new ArrayBuffer(s.length);
    let view = new Uint8Array(buf);
    for (let i = 0; i != s.length; ++i) {
      view[i] = s.charCodeAt(i) & 0xFF;
    }
    return buf;
  }

  function downloadExl (json, type) {
    var tmpdata = json[0];
    json.unshift({});
    let keyMap = []; //获取keys
    for (let k in tmpdata) {
      keyMap.push(k);
      json[0][k] = k;
    }
    var tmpdata = []; //用来保存转换好的json
    json.map(function (v, i) {
      return keyMap.map(function (k, j) {
        return Object.assign({}, {
          v: v[k],
          position: (j > 25 ? getCharCol(j) : String.fromCharCode(65 + j)) + (i + 1)
        });
      });
    }).reduce(function (prev, next) {
      return prev.concat(next);
    }).forEach(function (v, i) {
      tmpdata[v.position] = {
        v: v.v
      };
    });
    let outputPos = Object.keys(tmpdata); //设置区域,比如表格从A1到D10
    let tmpWB = {
      SheetNames: ['Sheet0'], //保存的表标题
      Sheets: {
        'Sheet0': Object.assign({}, tmpdata, {
          '!ref': outputPos[0] + ':' + outputPos[outputPos.length - 1] //设置填充区域
        })
      }
    };
    let tmpDown = new Blob([s2ab(XLSX.write(tmpWB, {
        bookType: (type == undefined ? 'xlsx' : type),
        bookSST: false,
        type: 'binary'
      } //这里的数据是用来定义导出的格式类型
    ))], {
      type: "csv"
    }); //创建二进制对象写入转换好的字节流
    var href = URL.createObjectURL(tmpDown);
    return href; //创建对象超链接
  }

  return {
    downloadExl: downloadExl
  }

}
</script>