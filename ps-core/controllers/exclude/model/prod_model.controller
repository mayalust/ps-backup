<config injector="$scope,ajax,$location,growl,userUIService">
</config>
<template>
  <ps-table config="config"></ps-table>
</template>
<script type="text/javascript">

  export default function (scope, ajax, location,growl,userUIService) {
    //------- 数据模板 -------
    ajax.config({
      allModels: {
        url: "modelDefinitionService.findAllDataModels",
        param: [{}]
      },
      domains: {
        url: "resourceUIService.getDomainsByFilter"
      },
      models: {
        url: "resourceUIService.getModels"
      },
      sparePartsType: {
        url: "dictionaryService.getDictValues"
      }
    });
    scope.config = {
      title: "数据模板",
      attributes: {
        "label": ["模板名称", "text"],
        "desc": ["模板描述", "text"],
        "createTime": ["创建时间", "text"],
        "modelType": ["产品系列", "text"],
      },
      grid: {
        body: [ {
          name : "label",
          inquery: true,
          composory: true,
          asDefaultQuery: true
        },"desc",{
          name: "modelType",
          bind: function (row) {
            return row.values.modelType;
          },
          inquery: true
        },{
            name : "createTime",
            gridType : "date",
        },{
          name: "modelType",
          bind: function (row) {
            let rs = row.values.modelType;
            try {
              rs = JSON.parse(row.values.modelType);
              rs = rs.map((n) => {
                return n.value;
              }).join(",");
            } catch(e) {

            } finally {
              return rs;
            }
          },
          inquery: true
        }],
        buttons: {
          outGrid: [{
            label: "添加模板",
            class: "primary",
            icon: "fa fa-plus",
            on : {
              click : function () {
                  location.path("prod_addModel/" + 0);
              }
            }
          },{
            label: "复制模板",
            class: "default",
            icon: "proudsmart  ps-copy",
            on : {
                click : function(){
                    if(this.getSelected().length>0){
                        growl.info("复制模板处理中,请耐心等待...");
                        debugger;
                        ajax.post("resourceUIService.copyModelDefinition",this.getSelected()[0].id).then((d)=>{
                            growl.success("复制模板成功");
                        });
                    }else{
                        growl.warning("请选择一个模板！");
                    }
                }
            }
          },{
            label: "导入模板",
            class: "default",
            icon: "fa fa-arrow-circle-o-up",
            symbol: "import",
            param: {
              url: 'resourceUIService.importModel',
              before: function (file) {
                return {
                  config: "deviceModel",
                  file: file
                }
              },
              after: function (d) {
                if (d.code == 0) {
                  growl.success('导入成功！');
                } else {
                  growl.warning(d.message || d);
                }
              }
            }
          },{
            label: "导出模板",
            class: "default",
            icon: " fa fa-arrow-circle-o-down",
              on:{
                  click:function(){
                       
                      if(this.getSelected().length>0){
                          window.location.href='' + userUIService.uploadFileUrl + '/api/rest/export/resourceUIService/exportModel/' + this.getSelected()[0].id+ '.xlsx/' + this.getSelected()[0].id + '/deviceModel/';
                      }else{
                          growl.warning("请选择一个模板！");
                      }
                  }
              }
          }],
          inGrid: [{
            label: "管理",
            class: "btn btn-primary",
            on : {
              click : function(e){
                location.path("prod_addModel/" + e.$row.id);
              }
            }
          }, {
              label: "删除",
              on : {
                  click : function(e){
                      e.remove({
                          url : "modelDefinitionService.deleteDataModel",
                          before: function (row) {
                              return e.$row.id;
                          }
                      });
                  }
              }
          }]
        },
        config: {
          url: 'allModels',
          parameter: {},
          showIndex: false,
          showSelector: true,
          multipleSelect: false,
          showSearch: true,
          sortBy : {
              value : "createTime",
              direction : "desc"
          }
        },
        options: []
      }
    };
  };
</script>
<style type="less">
</style>