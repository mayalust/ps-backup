<config injector="$scope,ajax,$location,growl">
    </config>
    <template>
    <ps-table config="config"></ps-table>
    </template>
    <script type="text/javascript">
export default function (scope, ajax,location,growl) {
    scope.config = {
        title: "状态维护标准",
        attributes: {
            domainPath: ["状态维护标准编号", "dict", {
                name: "resource",
                from: "domainPath",
                to: "domainPath",
                parameter: {
                    modelId: 300,
                    category: "Domain"
                }
            }],
            "customerId": {
                label:"状态项目维护名称",
                type:"dict",
                format: "label:customerName",
                relate:{
                    name: "customer",
                    to:"id",
                    label:"customerName"
                }
            },
            "projectId":  {
                label:"设备状态",
                type:"dict",
                format: "label:projectName",
                relate:{
                    name: "project",
                    label:"projectName"
                }
            },
            "modelId": ["实施方", "dict", {
                name: "modelDefinition"
            }],
            "label": ["安全挂牌","text"],
            "sn": ["周期单位", "text"],
            "online": ["周期间隔", "text", {
                name: "online",
                label: "value"
            }],
            "state": ["是否启用", "text", {
                name: "state",
                label: "value"
            }],
            "startTime": ["开始时间", "date", {
                name: "startT",
                label: "value"
            }],
            "produceMan": ["制定人", "text", {
                name: "produceMan",
                label: "value"
            }]
        },
        search: {
            body: [{
                name: "domainPath",
                searchType: "tree",

            }, {
                name: "customerId",
                format: "label:customerName",
                upper: [ {
                    name: "domainPath",
                    from: "domainPath"
                }]
            }, {
                name: "projectId",
                format: "label:projectName",
                upper: [{
                    name: 'customerId'
                }, {
                    name: "domainPath",
                    from: "domainPath"
                }]
            },"modelId" , {
                name: "orCondition",
                label:"设备名称/编码"

            }],
            beforeSearch:function(a,b){
                var item=getTreeItem(b.domainPathOptions,a.domainPath)
                if(item!=null){
                    a.domainPath= item.domainPath;
                }

            }
        },
        grid: {
            body: ["domainPath","customerId", "projectId", "modelId", "label", "sn", {
                name: "online",
                gridType: "status",
                bind: function (row, relateStr) {
                    let severityStr = "无数据";
                    let severityBg = "bg-gray";
                    if (row.alertSwitchOn === false) {
                        severityStr = "检修";
                        severityBg = "label-danger";
                    } else {
                        if (relateStr === 0 || relateStr === '0') {
                            severityStr = "离线";
                            severityBg = "label-warning";
                        } else if (relateStr === 1 || relateStr === '1') {
                            severityStr = "在线";
                            severityBg = "label-primary";
                        }
                    }
                    return [severityStr, severityBg];
                }
            }, {
                name: "state",
                gridType: "status",
                bind: function (row, relateStr) {
                    var severityStr = "无数据";
                    var severityBg = "bg-gray";
                    if (relateStr == 4 || relateStr == "4") {
                        severityStr = "严重";
                        severityBg = "bg-alarm-critical";
                    } else if (relateStr == 3 || relateStr == "3") {
                        severityStr = "重要";
                        severityBg = "bg-alarm-major";
                    } else if (relateStr == 2 || relateStr == "2") {
                        severityStr = "次要";
                        severityBg = "bg-alarm-minor";
                    } else if (relateStr == 1 || relateStr == "1") {
                        severityStr = "警告";
                        severityBg = "bg-alarm-warning";
                    } else if (relateStr < 1) {
                        severityStr = "正常";
                        severityBg = "progress-bar-success";
                    }
                    return [severityStr, severityBg];
                }
            },"startTime","produceMan"],
            buttons: {
                outGrid: [{
                    label: "添加设备",
                    class: "primary",
                    icon: "fa fa-plus",
                    on: {
                        click: function () {
                            location.path("/prod_device_property/0");
                        }
                    }
                },{
                    label: "导入设备",
                    class: "default",
                    icon: "fa fa-arrow-circle-o-up",
                    symbol: "import",
                    param: {
                        url: 'resourceUIService.importDeviceByModel',
                        before: function (file) {
                            return {
                                config: "deviceInfo",
                                file: file
                            }
                        },
                        after: function (d) {
                            if (d.code == 0) {
                                growl.success('导入成功！');
                            } else {
                                growl.warning(d.message || d);
                            }
                        }
                    }
                }
                /*, {
                    label: "删除设备",
                    on: {
                        click: function (e) {
                            //
                            // e.update({
                            //     url:"resourceUIService.upateDevice",
                            //     template:""
                            // }
                            // )
                        }
                    }
                }*/],
                inGrid: [["编辑",
                    function (e) {
                        location.path("/prod_device_property/" + e.$row.id);
                    }],
                    ["接入设置",
                    function (e) {
                        location.path("/prod_deviceAccess/" + (e.$row.gatewayId ? e.$row.gatewayId : 0 ) + "/" + e.$row.id);
                        //openView("/deviceConnect/" + row.id);
                    }],
                    ["数据检测",
                        function (e) {
                            location.path("/emcsView/"+e.$row.id+"/true" );

                        }], ["设备档案",
                        function (e) {
                            location.path("/facility_archives/" + e.$row.id);
                        }], ["删除",
                        function (e) {
                            e.remove({
                                message:"是否删除此项",
                                url:"resourceUIService.unregisterDevice",
                                before:function(){
                                    return e.$row.id;
                                }
                            });
                        }]]

            },
            config: {
                url: "resourceUIService.getDevicesByConditionWithPage",
                parameter: {"conditionField":["sn","label"]},
                showIndex: false,
                showSelector: false,
                showSearch: false
            },
            options: []
        }
    };

    function getTreeItem(items,findId){
        if(items==null){
            return null;
        }
        for (var i =0 ;i<items.length ;i++){
            if(items[i].id==findId){
                return items[i];
            }
           var childItem= getTreeItem(items[i].children,findId);
            if(childItem!=null){
                return childItem;
            }
        }
    }
};
</script>
<style type="less">
    </style>