<config injector="psScope, psEvent, psUltility, $timeout"
></config>
<template>
  <div>
    <button class="btn btn-sm"
        ng-class="setClass(config.class)"
            ng-disabled = "disabled"
            ng-click="onclick($event)">
      <i ng-class="config.icon"></i>
      <span ng-bind="config.label"></span>
    </button>
  </div>
</template>
<script type="text/javascript">
  export default function(psScope, psEvent, psUltility, timeout){
    return {
      scope : {
        config : "="
      },
      link(scope, element, attr, ngModel) {
        let evt = psEvent({}, scope), clickFn;
        function getScope(scope){
          let parent = scope;
          while(!parent.$$customParentScope){
            parent = parent.$parent;
          };
          return parent ? parent.$$customParentScope : null;
        }
        if(scope.config.validCheck){
          evt.checkValidateByScope = psUltility.checkValidateByScope(scope, function(d){
            scope.disabled = !d;
          }, scope.config.validCheck);
        }
          scope.onclick = clickFn = function(e){
              scope.onclick = null;
              timeout(()=>{
                  scope.onclick = clickFn;
              }, 3000);
            let fn = scope.config.click || scope.config.on && scope.config.on.click,
                evt = psEvent(e, scope);
            evt.$scope = getScope(scope);
            evt.$config = scope.config;
            fn && fn(evt);
        };
        scope.setClass = function(cls){
          if(cls){
            if(typeof cls === "function"){
              return cls(scope.config);
            } else {
              return cls;
            }
          } else {
            return "btn-default"
          }
        }
      }
    }
  }
</script>
<style type="less" scoped="true">
  .btn {
    margin : 0;
  }
</style>