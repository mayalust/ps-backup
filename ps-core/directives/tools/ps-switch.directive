<config injector=""
></config>
<template>
  <div>
    <div class="range">
      <div class="swh"></div>
    </div>
  </div>
</template>
<script type="text/javascript">
    export default function(){
        return {
            restrict: 'E',
            require: '?ngModel',
            scope: {
                ngModel: '=',
                config: '='
            },
            replace: true,
            link: function (scope, element, attr, ngModel) {
                var range = element[0].children[0],
                    switchBtn = range.children[0],
                    defaultConfig ={};
                scope.config = angular.extend({},defaultConfig,scope.config||{});
                function renderSwitch(bool) {
                    if(bool) {
                        switchBtn.style.float = 'right';
                        switchBtn.style.backgroundColor = '#00c6ff';
                        range.style.borderColor = '#00c6ff';
                    } else {
                        switchBtn.style.float = 'left';
                        switchBtn.style.backgroundColor = '#cacaca';
                        range.style.borderColor = '#cacaca';
                    }
                }
                range.onclick = function (e){
                  if(scope.config.disabled) {
                    return;
                  }
                    ngModel.$setViewValue(!ngModel.$viewValue);
                    ngModel.$render();
                };
                scope.$on('destroy',function () {
                    range = null;
                    switchBtn = null;
                    scope.config = null;
                    range.onclick = null;
                })
                ngModel.$render = function(){
                    renderSwitch(ngModel.$viewValue);
                };
                Array.prototype.push.call(ngModel.$parsers, function (n,o) {
                    if(typeof n === "undefined"){
                        return;
                    }else {
                        return n;
                    }
                });
                Array.prototype.push.call(ngModel.$formatters, function (n,o) {
                    if(typeof n === "undefined"){
                        return;
                    }else {
                        return n;
                    }
                });
            }
        }
    }
</script>
<style type="less" scoped="true">
  /**{
      margin: 0;
      padding: 0;
      -webkit-box-sizing: border-box;
      -moz-box-sizing: border-box;
      box-sizing: border-box;
  }*/
  .range {
    width: 80px;
    height: 20px;
    border-radius: 10px;
    border: 1px solid #cacaca;
    cursor: pointer;
    padding: 2px;
    overflow: hidden;
    .swh {
      width: 55%;
      height: 100%;
      float: left;
      background-color: #cacaca;
      -webkit-border-radius: 8px;
      -moz-border-radius: 8px;
      border-radius: 8px;
    }

  }

</style>