{"version":3,"sources":["app-sc/js/directives/machine-dom.js"],"names":["define","directives","echarts","epuipmentEchart_directive","timeout","directive","restrict","scope","chart","link","element","attr","$watch","n","o","s","dom","$","find","height","width","target","init","setOption","window","on","$randomString","resize","dragIcon_directive","preview","canvas","canvasDom","loadComplete","evt","$apply","icon","result","css","append","addEventListener","e","preventDefault","files","dataTransfer","length","file","FileReader","type","indexOf","reader","onload","readAsDataURL","registerDirective","$inject"],"mappings":"AAAAA,OAAO,CAAC,wBAAyB,UAAW,YAAa,SAAU,SAAUC,EAAYC,GACvF,aAKA,SAASC,EAA0BC,GACjC,IAAIC,EAAY,CAChBC,SAAqB,IACrBC,MAAkB,CAChBC,MAAO,KAGTC,KAAiB,SAAUF,EAAOG,EAASC,GACzCP,EAAQ,WACNG,EAAMK,OAAO,QAAS,SAAUC,EAAGC,EAAGC,GACpC,GAAIF,EAAG,CACL,IAAIG,EAAMC,EAAEP,GAASQ,KAAK,UAAU,GACpCD,EAAEP,GAASS,OAA4B,GAArBF,EAAEP,GAASU,SAC7B,IAAIC,EAASnB,EAAQoB,KAAKN,EAAK,YAC/BK,EAAOE,UAAUV,GACjBI,EAAEO,QAAQC,GAAG,UAAYC,gBAAiB,WACxCT,EAAEP,GAASS,OAA4B,GAArBF,EAAEP,GAASU,SAC7BC,EAAOM,kBAOjB,OAAOtB,EAMT,SAASuB,EAAmBxB,GAC1B,IAAIC,EAAY,CAChBC,SAAqB,IACrBC,MAAkB,CAChBC,MAAO,IACPqB,QAAS,KAGXpB,KAAiB,SAAUF,EAAOG,EAASC,GACzCP,EAAQ,WACN,IAAI0B,EAASb,EAAE,sCACXc,EAAYD,EAAO,GAwBvB,SAASE,EAAaC,GACpB1B,EAAM2B,OAAO,WACX3B,EAAMsB,QAAQM,KAAOF,EAAIZ,OAAOe,SAzBpCN,EAAOO,IAAI,CACTjB,MAAO,OACPD,OAAQ,SAEVF,EAAEP,GAAS4B,OAAOR,GAClBC,EAAUQ,iBAAiB,WAAY,SAAUC,GAC/CA,EAAEC,mBACD,GACHV,EAAUQ,iBAAiB,OAAQ,SAAUN,GAC3CA,EAAIQ,iBACJ,IAAIC,EAAQT,EAAIU,aAAaD,MAE7B,GAAmB,EAAfA,EAAME,OAAY,CACpB,IAAIC,EAAOH,EAAM,GAEjB,GAA0B,oBAAfI,aAA6D,GAA/BD,EAAKE,KAAKC,QAAQ,SAAgB,CACzE,IAAIC,EAAS,IAAIH,WACjBG,EAAOC,OAASlB,EAChBiB,EAAOE,cAAcN,OAGxB,OAUP,OAAOxC,EA5ETJ,EAAWmD,kBAAkB,kBAAmBjD,GAChDA,EAA0BkD,QAAU,CAAC,YA6BrCpD,EAAWmD,kBAAkB,WAAYxB,GACzCA,EAAmByB,QAAU,CAAC","file":"app-sc/js/directives/machine-dom.js","sourcesContent":["define(['directives/directives', \"echarts\", \"jquery-ui\", \"Array\"], function (directives, echarts) {\n  'use strict';\n\n  directives.registerDirective('epuipmentEchart', epuipmentEchart_directive);\n  epuipmentEchart_directive.$inject = ['$timeout'];\n\n  function epuipmentEchart_directive(timeout) {\n    var directive = {};\n    directive.restrict = \"A\";\n    directive.scope = {\n      chart: \"=\"\n    };\n\n    directive.link = function (scope, element, attr) {\n      timeout(function () {\n        scope.$watch(\"chart\", function (n, o, s) {\n          if (n) {\n            var dom = $(element).find(\".inner\")[0];\n            $(element).height($(element).width() * .5);\n            var target = echarts.init(dom, \"macarons\");\n            target.setOption(n);\n            $(window).on(\"resize.\" + $randomString(), function () {\n              $(element).height($(element).width() * .5);\n              target.resize();\n            });\n          }\n        });\n      });\n    };\n\n    return directive;\n  }\n\n  directives.registerDirective('dragIcon', dragIcon_directive);\n  dragIcon_directive.$inject = ['$timeout'];\n\n  function dragIcon_directive(timeout) {\n    var directive = {};\n    directive.restrict = \"A\";\n    directive.scope = {\n      chart: \"=\",\n      preview: \"=\"\n    };\n\n    directive.link = function (scope, element, attr) {\n      timeout(function () {\n        var canvas = $(\"<canvas id='uploadImage'></canvas>\");\n        var canvasDom = canvas[0];\n        canvas.css({\n          width: '80px',\n          height: '80px'\n        });\n        $(element).append(canvas);\n        canvasDom.addEventListener('dragover', function (e) {\n          e.preventDefault();\n        }, false);\n        canvasDom.addEventListener(\"drop\", function (evt) {\n          evt.preventDefault();\n          var files = evt.dataTransfer.files;\n\n          if (files.length > 0) {\n            var file = files[0];\n\n            if (typeof FileReader !== \"undefined\" && file.type.indexOf(\"image\") != -1) {\n              var reader = new FileReader();\n              reader.onload = loadComplete;\n              reader.readAsDataURL(file);\n            }\n          }\n        }, false);\n\n        function loadComplete(evt) {\n          scope.$apply(function () {\n            scope.preview.icon = evt.target.result;\n          });\n        }\n      });\n    };\n\n    return directive;\n  }\n});"],"sourceRoot":"/source/"}