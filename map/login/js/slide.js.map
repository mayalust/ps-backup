{"version":3,"sources":["login/js/slide.js"],"names":["$","fn","ckSlide","opts","extend","this","each","slidewrap","find","slide","count","length","that","index","time","startAtuoPlay","inum","autoPlay","setInterval","old","change","call","data","on","cindex","clearInterval","css","opacity","interval","box","margin-left","width","dir","float","position","wrap","show","height","margin-top","slideChange","nextSlide","test","navigator","userAgent","hide","x","stop","animate","y","eq","removeClass","addClass","isAnimate","jQuery"],"mappings":"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","file":"login/js/slide.js","sourcesContent":["(function ($) {\n  $.fn.ckSlide = function (opts) {\n    //.extend() 扩展jQuery类，添加ckSlide方法，参数是对象类型{}\n    opts = $.extend({}, $.fn.ckSlide.opts, opts);\n    this.each(function () {\n      var slidewrap = $(this).find('.ck-slide-wrapper'); //轮播元素父对象\n\n      var slide = slidewrap.find('li'); //获取<li>对象集\n\n      var count = slide.length; //计算对象集长度\n\n      var that = this; //存放父对象\n\n      var index = 0; //起始位置\n\n      var time = null;\n      $(this).data('opts', opts); //给轮播对象添加参数 数据\n      // next\n\n      $(this).find('.ck-next').on('click', function () {\n        if (opts['isAnimate'] == true) {\n          return;\n        }\n\n        var old = index;\n\n        if (index >= count - 1) {\n          index = 0;\n        } else {\n          index++;\n        }\n\n        change.call(that, index, old); //调用图片切换方法，.call() 每个JS函数都包含的一个非继承而来的方法，主要用来指定函数的作用域 that ，通常不严谨写法是change()，有可能会函数冲突。\n      }); // prev\n\n      $(this).find('.ck-prev').on('click', function () {\n        if (opts['isAnimate'] == true) {\n          return;\n        }\n\n        var old = index;\n\n        if (index <= 0) {\n          index = count - 1;\n        } else {\n          index--;\n        }\n\n        change.call(that, index, old);\n      }); //点击切换相应序号的图片\n\n      $(this).find('.ck-slidebox li').each(function (cindex) {\n        $(this).on('click.slidebox', function () {\n          change.call(that, cindex, index);\n          index = cindex;\n        });\n      }); //自己添加——鼠标移入小圆点切换轮播图片\n\n      $(this).find('.ck-slidebox li').each(function (cindex) {\n        $(this).on('mouseover.slidebox', function () {\n          change.call(that, cindex, index);\n          index = cindex;\n        });\n      }); // 鼠标悬停停止自动播放，显示左右切换按钮\n\n      $(this).on('mouseover', function () {\n        if (opts.autoPlay) {\n          clearInterval(time);\n        }\n\n        $(this).find('.ctrl-slide').css({\n          opacity: 0.6\n        });\n      }); //  鼠标离开轮播界面，开始自动播放，同时隐藏按钮\n\n      $(this).on('mouseleave', function () {\n        if (opts.autoPlay) {\n          startAtuoPlay(opts.interval);\n        }\n\n        $(this).find('.ctrl-slide').css({\n          opacity: 0.1\n        });\n      });\n      startAtuoPlay(opts.interval); // 自动滚动播放\n\n      function startAtuoPlay(inum) {\n        if (opts.autoPlay) {\n          time = setInterval(function () {\n            var old = index;\n\n            if (index >= count - 1) {\n              index = 0;\n            } else {\n              index++;\n            }\n\n            change.call(that, index, old);\n          }, inum); //2秒\n        }\n      } // 修正box  标记居中\n\n\n      var box = $(this).find('.ck-slidebox');\n      box.css({\n        'margin-left': -(box.width() / 2)\n      }); // dir  移动方向参数\n\n      switch (opts.dir) {\n        case \"x\":\n          opts['width'] = $(this).width();\n          slidewrap.css({\n            'width': count * opts['width']\n          });\n          slide.css({\n            'float': 'left',\n            'position': 'relative',\n            'margin-left': '0px'\n          }); //.wrap()包裹页面已经定义的.ck-slide-wrapper以及子元素\n\n          slidewrap.wrap('<div class=\"ck-slide-dir\"></div>');\n          slide.show();\n          break;\n\n        case \"y\":\n          //添加垂直移动参数\n          opts['height'] = $(this).height();\n          slidewrap.css({\n            'height': count * opts['height']\n          });\n          slide.css({\n            'float': 'left',\n            'position': 'relative',\n            'margin-top': '0px'\n          });\n          slidewrap.wrap('<div class=\"ck-slide-dir\"></div>');\n          slide.show();\n          break;\n      }\n    });\n  };\n\n  var slideChange = function slideChange(nextSlide) {\n    if (/(iPhone|iPod|iOS|android)/i.test(navigator.userAgent)) {\n      $(\".content\").css(\"background-color\", \"#3ab4fd\");\n    } else {\n      if (nextSlide == 0) {\n        $(\".content\").css(\"background-color\", \"#eaeaea\");\n      } else if (nextSlide == 1) {\n        $(\".content\").css(\"background-color\", \"#3ab4fd\");\n      } else if (nextSlide == 2) {\n        $(\".content\").css(\"background-color\", \"#15789c\");\n      } else if (nextSlide == 3) {\n        $(\".content\").css(\"background-color\", \"#3b7884\");\n      }\n    }\n  };\n\n  function change(show, hide) {\n    slideChange(show); //获取之前设置在ckSlide对象上的参数 数据\n\n    var opts = $(this).data('opts'); //水平移动\n\n    if (opts.dir == 'x') {\n      var x = show * opts['width']; //animate() 与css()执行结果相同，但是过程不同，前者有渐变动画效果\n\n      $(this).find('.ck-slide-wrapper').stop().animate({\n        'margin-left': -x\n      }, function () {\n        opts['isAnimate'] = false;\n      });\n      opts['isAnimate'] = true; //图片在移动过程中设置按钮点击不可用，确保每一次轮播视觉上执行完成，\n    } else if (opts.dir == 'y') {\n      //垂直移动——自己添加\n      var y = show * opts['height'];\n      $(this).find('.ck-slide-wrapper').stop().animate({\n        'margin-top': -y\n      }, function () {\n        opts['isAnimate'] = false;\n      });\n      opts['isAnimate'] = true;\n    } else {\n      //默认的淡隐淡出效果\n      $(this).find('.ck-slide-wrapper li').eq(hide).stop().animate({\n        opacity: 0\n      });\n      $(this).find('.ck-slide-wrapper li').eq(show).show().css({\n        opacity: 0\n      }).stop().animate({\n        opacity: 1\n      });\n    } //切换对应标记的颜色\n\n\n    $(this).find('.ck-slidebox li').removeClass('current');\n    $(this).find('.ck-slidebox li').eq(show).addClass('current');\n  }\n\n  $.fn.ckSlide.opts = {\n    autoPlay: false,\n    //默认不自动播放\n    dir: null,\n    //默认淡隐淡出效果\n    isAnimate: false,\n    //默认按钮可用\n    interval: 1000 //默认自动2秒切换 \n\n  };\n})(jQuery);"],"sourceRoot":"/source/"}