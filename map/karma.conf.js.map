{"version":3,"sources":["karma.conf.js"],"names":["gulp","require","_paths","files","fls","pattern","included","served","watched","nocache","i","push","console","log","module","exports","config","set","basePath","frameworks","exclude","plugins","preprocessors","speculation/**/*.js","babelPreprocessor","options","presets","sourceMap","filename","file","originalPath","replace","sourceFileName","reporters","port","colors","logLevel","LOG_INFO","autoWatch","browsers","customLaunchers","Chrome_without_security","base","flags","singleRun","concurrency","Infinity"],"mappings":"AAEA,IAAIA,KAAOC,QAAQ,QAEfC,OAASD,QAAQ,cAEjBE,MAAQ,WACV,IAAIC,EAAM,CACV,4DAA6D,CAC3DC,QAAS,WACTC,UAAU,EACVC,QAAQ,EACRC,SAAS,EACTC,SAAS,GAKX,CACEJ,QAAS,kBACTC,UAAU,EACVC,QAAQ,EACRC,SAAS,EACTC,SAAS,GAKX,CACEJ,QAAS,yBACTC,UAAU,EACVC,QAAQ,EACRC,SAAS,EACTC,SAAS,GACR,CACDJ,QAAS,wBACTC,UAAU,EACVC,QAAQ,EACRC,SAAS,EACTC,SAAS,GACR,CACDJ,QAAS,sBACTC,UAAU,EACVC,QAAQ,EACRC,SAAS,EACTC,SAAS,GAEX,CACEJ,QAAS,YACTC,UAAU,EACVC,QAAQ,EACRC,SAAS,EACTC,SAAS,IAGX,IAAK,IAAIC,KAAKR,OACZE,EAAIO,KAAK,CACPN,QAASH,OAAOQ,GAAK,MACrBJ,UAAU,EACVC,QAAQ,EACRC,SAAS,EACTC,SAAS,IAKb,OAAOL,EA5DG,GA+DZQ,QAAQC,IAAIV,OAEZW,OAAOC,QAAU,SAAUC,GACzBA,EAAOC,IAAI,CAETC,SAAU,KAGVC,WAAY,CAAC,UAAW,aAExBhB,MAAOA,MAEPiB,QAAS,CAAC,eAGVC,QAAS,CAAC,wBAAyB,yBAA0B,2BAA4B,gBAAiB,mBAG1GC,cAAe,CACbC,sBAAuB,CAAC,UAE1BC,kBAAmB,CACjBC,QAAS,CACPC,QAAS,CAAC,UACVC,UAAW,UAEbC,SAAU,SAAkBC,GAC1B,OAAOA,EAAKC,aAAaC,QAAQ,QAAS,YAE5CC,eAAgB,SAAwBH,GACtC,OAAOA,EAAKC,eAMhBG,UAAW,CAAC,YAEZC,KAAM,KAENC,QAAQ,EAGRC,SAAUpB,EAAOqB,SAEjBC,WAAW,EAGXC,SAAU,CAAC,SAAU,2BACrBC,gBAAiB,CACfC,wBAAyB,CACvBC,KAAM,SACNC,MAAO,CAAC,4BAKZC,WAAW,EAGXC,YAAaC,EAAAA,EACb9C,KAAMA","file":"karma.conf.js","sourcesContent":["// Karma configuration\n// Generated on Sat Mar 03 2018 12:57:38 GMT+0800 (CST)\nvar gulp = require('gulp');\n\nvar _paths = require(\"./files.js\");\n\nvar files = function () {\n  var fls = [//\"speculation/event.test.js\"\n  \"speculation/js/services/websocket-service-baogang.test.js\", {\n    pattern: 'files.js',\n    included: false,\n    served: true,\n    watched: false,\n    nocache: true\n  }, //{pattern: 'js/**/app-bridge-ctrl.js', included: false, served: true, watched: false, nocache: true},\n  //{pattern: 'js/**/controllers.js', included: false, served: true, watched: false, nocache: true},\n  //{pattern: 'js/**/services.js', included: false, served: true, watched: false, nocache: true},\n  //{pattern: 'js/**/directives.js', included: false, served: true, watched: false, nocache: true},\n  {\n    pattern: 'toolkit/**/*.js',\n    included: false,\n    served: true,\n    watched: false,\n    nocache: true\n  }, //{pattern: 'app-oc/js/controllers/permission_ctrl.js', included: true, served: true, watched: false, nocache: true},\n  //{pattern: 'app-oc/js/services/*.js', included: true, served: true, watched: false, nocache: true},\n  //{pattern: 'app-oc/js/directives/*.js', included: true, served: true, watched: false, nocache: true},\n  //{pattern: 'app-sc/**/*.js', included: false, served: true, watched: false, nocache: true},\n  {\n    pattern: 'js/controllers/**/*.js',\n    included: false,\n    served: true,\n    watched: false,\n    nocache: true\n  }, {\n    pattern: 'js/directives/**/*.js',\n    included: false,\n    served: true,\n    watched: false,\n    nocache: true\n  }, {\n    pattern: 'js/services/**/*.js',\n    included: false,\n    served: true,\n    watched: false,\n    nocache: true\n  }, //{pattern: 'app-freeboard/**/*.js', included: false, served: true, watched: false, nocache: true},\n  {\n    pattern: '**/**.map',\n    included: false,\n    served: true,\n    watched: false,\n    nocache: true\n  }];\n\n  for (var i in _paths) {\n    fls.push({\n      pattern: _paths[i] + \".js\",\n      included: false,\n      served: true,\n      watched: false,\n      nocache: true\n    });\n  }\n\n  ;\n  return fls;\n}();\n\nconsole.log(files);\n\nmodule.exports = function (config) {\n  config.set({\n    // base path that will be used to resolve all patterns (eg. files, exclude)\n    basePath: './',\n    // frameworks to use\n    // available frameworks: https://npmjs.org/browse/keyword/karma-adapter\n    frameworks: ['jasmine', 'requirejs'],\n    // list of files / patterns to load in the browser\n    files: files,\n    // list of files to exclude\n    exclude: [\"**jasmine**\"],\n\n    /** 所有加载的文件必须要在PLUGINS里面添加，官方文档都不写，坑！！！ */\n    plugins: ['karma-chrome-launcher', 'karma-sourcemap-loader', 'karma-babel-preprocessor', 'karma-jasmine', 'karma-requirejs'],\n    // preprocess matching files before serving them to the browser\n    // available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor\n    preprocessors: {\n      \"speculation/**/*.js\": ['babel']\n    },\n    babelPreprocessor: {\n      options: {\n        presets: ['es2015'],\n        sourceMap: 'inline'\n      },\n      filename: function filename(file) {\n        return file.originalPath.replace(/\\.js$/, '.es5.js');\n      },\n      sourceFileName: function sourceFileName(file) {\n        return file.originalPath;\n      }\n    },\n    // test results reporter to use\n    // possible values: 'dots', 'progress'\n    // available reporters: https://npmjs.org/browse/keyword/karma-reporter\n    reporters: ['progress'],\n    // web server port\n    port: 9876,\n    // enable / disable colors in the output (reporters and logs)\n    colors: true,\n    // level of logging\n    // possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG\n    logLevel: config.LOG_INFO,\n    // enable / disable watching file and executing tests whenever any file changes\n    autoWatch: true,\n    // start these browsers\n    // available browser launchers: https://npmjs.org/browse/keyword/karma-launcher\n    browsers: ['Chrome', 'Chrome_without_security'],\n    customLaunchers: {\n      Chrome_without_security: {\n        base: 'Chrome',\n        flags: ['--disable-web-security']\n      }\n    },\n    // Continuous Integration mode\n    // if true, Karma captures browsers, runs the tests and exits\n    singleRun: false,\n    // Concurrency level\n    // how many browser should be started simultaneous\n    concurrency: Infinity,\n    gulp: gulp\n  });\n};"],"sourceRoot":"/source/"}