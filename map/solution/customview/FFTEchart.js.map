{"version":3,"sources":["solution/customview/FFTEchart.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","define","on","init","event","target","global","color","kpi","LENGTH","$getCurrentResource","resource","sensor","getValue","time","ci","id","renderFFTEchart","dateHandler","params","kpiCodes","includeInstance","queryInstances","instance","isRealTimeData","nodeIds","startTime","getUTCDateString","endTime","transformerType","showLoading","hideNoData","postService","returnData","hideLoading","data","length","eval","valueList","map","n","i","render","sub","type","x0","x1","markLine","undefined","markPoint","animation","symbol","silent","lineStyle","normal","width","label","show","position","formatter","elem","v","toFixed","rs","item","xAxis","push","symbolSize","itemStyle","borderColor","yData","yAxis","parseFloat","snap","parseInt","j","temp","pop","console","log","option","grid","top","left","height","tooltip","alwaysShowContent","triggerOn","toolbox","feature","dataZoom","yAxisIndex","restore","saveAsImage","name","backgroundColor","iconStyle","emphasis","axisPointer","val","seriesData","setValue","trigger","handle","size","margin","gridIndex","splitLine","realtime","start","end","xAxisIndex","series","showSymbol","opacity","showNoData","getAttrsByModelId","modelId","attrs","getArr","sourceValue","k","find","dItem","accessConfigValues","physicalConfig","accessConfigs","subaccessConfigValues","filter","dataItemId","kpiId","warn","prototype","call"],"mappings":"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","file":"solution/customview/FFTEchart.js","sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\ndefine({\n  on: {\n    init: function init(event) {\n      var target = event.target;\n      var global = event.global;\n      var color = \"#ffe400\";\n      var kpi;\n      var LENGTH = 50;\n      target.$getCurrentResource(function (resource) {\n        var sensor = target.getValue(\"global/sensor\") || {};\n        var time = target.getValue(\"global/time\") || 0;\n        var ci = [resource.id];\n\n        var renderFFTEchart = function renderFFTEchart(ci, kpi, time) {\n          time = time || target.dateHandler();\n          var params = {\n            time: 0,\n            kpiCodes: kpi || [],\n            includeInstance: sensor ? true : false,\n            queryInstances: sensor ? sensor.instance : null,\n            isRealTimeData: false,\n            nodeIds: ci || [],\n            startTime: time.getUTCDateString(),\n            endTime: time.getUTCDateString(),\n            transformerType: \"FFT\"\n          };\n          target.showLoading();\n          target.hideNoData();\n          event.target.postService(\"kpiDataFlexService\", \"getKpiValueList\", [\"kpi\", params], function (returnData) {\n            target.hideLoading();\n\n            if (returnData.data.length > 0) {\n              var data = eval(returnData.data[0].value);\n              var valueList = data[0].map(function (n, i) {\n                return [n, data[1][i]];\n              });\n\n              var render = function render(init, sub) {\n                var type = target.getValue(\"type\") || 0;\n                var x0 = target.getValue(\"x0\") || 0;\n                var x1 = target.getValue(\"x1\") || 180;\n\n                if (type == 0) {\n                  var markLine = undefined;\n                  var markPoint = undefined;\n                } else if (type == 1) {\n                  var markLine = {\n                    animation: false,\n                    symbol: 'none',\n                    silent: false,\n                    lineStyle: {\n                      normal: {\n                        width: 1,\n                        color: \"#436fff\",\n                        type: 'solid'\n                      }\n                    },\n                    label: {\n                      normal: {\n                        show: true,\n                        position: 'end',\n                        formatter: function formatter(elem) {\n                          var v = elem.data.value - 0;\n                          return (typeof v === \"number\" && v === v ? v.toFixed(2) : \"-\") + \"Hz\";\n                        }\n                      }\n                    },\n                    data: function () {\n                      var rs = [];\n\n                      for (i = 0; i < 10; i++) {\n                        var item = {\n                          xAxis: x0 * (i + 2) + ''\n                        };\n                        rs.push(item);\n                      }\n\n                      return rs;\n                    }()\n                  };\n                  var markPoint = {\n                    symbol: \"circle\",\n                    symbolSize: 8,\n                    animation: false,\n                    silent: false,\n                    label: {\n                      normal: {\n                        show: false //                        formatter: '{b}: {d}'\n\n                      }\n                    },\n                    itemStyle: {\n                      normal: {\n                        color: \"#fff\",\n                        borderColor: \"blue\"\n                      }\n                    },\n                    data: function () {\n                      var rs = [];\n\n                      for (i = 0; i < 10; i++) {\n                        var yData = data[x0 / 1 * (i + 2)];\n\n                        if (yData) {\n                          var item = {\n                            xAxis: x0 * (i + 2) + '',\n                            yAxis: yData[1]\n                          };\n                          rs.push(item);\n                        }\n                      }\n\n                      return rs;\n                    }()\n                  };\n                } else if (type == 2) {\n                  var markLine = {\n                    animation: false,\n                    symbol: 'none',\n                    silent: false,\n                    lineStyle: {\n                      normal: {\n                        color: \"red\",\n                        type: 'solid'\n                      }\n                    },\n                    label: {\n                      normal: {\n                        show: true,\n                        position: 'end',\n                        formatter: function formatter(elem) {\n                          var v = elem.data.value - 0;\n                          return (typeof v === \"number\" && v === v ? v.toFixed(2) : \"-\") + \"Hz\";\n                        }\n                      }\n                    },\n                    data: function () {\n                      var rs = [];\n\n                      for (var i = -5; i < 7; i++) {\n                        rs.push({\n                          xAxis: parseFloat(x1) + i * (parseFloat(x0) - parseFloat(x1))\n                        });\n                      }\n\n                      ;\n                      return rs;\n                    }()\n                  };\n                  var markPoint = {\n                    symbol: \"circle\",\n                    symbolSize: 8,\n                    snap: true,\n                    animation: false,\n                    silent: false,\n                    label: {\n                      normal: {\n                        show: false\n                      }\n                    },\n                    itemStyle: {\n                      normal: {\n                        color: \"#fff\",\n                        borderColor: \"red\"\n                      }\n                    },\n                    data: function () {\n                      var rs = [];\n\n                      for (var i = -5; i < 5; i++) {\n                        rs.push({\n                          xAxis: parseInt(x1) + i * (parseInt(x0) - parseInt(x1)),\n                          yAxis: valueList[parseInt(x1) + i * (parseInt(x0) - parseInt(x1))]\n                        });\n                      }\n\n                      ;\n                      return rs;\n                    }()\n                  };\n                } else if (type == 3) {\n                  var markLine = {\n                    animation: false,\n                    symbol: 'none',\n                    silent: false,\n                    lineStyle: {\n                      normal: {\n                        color: \"red\",\n                        type: 'solid'\n                      }\n                    },\n                    label: {\n                      normal: {\n                        show: true,\n                        position: 'end',\n                        formatter: function formatter(elem) {\n                          var v = elem.data.value - 0;\n                          return (typeof v === \"number\" && v === v ? v.toFixed(2) : \"-\") + \"Hz\";\n                        }\n                      }\n                    },\n                    data: function () {\n                      var rs = [],\n                          i,\n                          j,\n                          temp;\n\n                      for (i = 0; i < valueList.length; i++) {\n                        j = rs.push(valueList[i]);\n\n                        while (--j > 0) {\n                          if (rs[j][1] > rs[j - 1][1]) {\n                            temp = rs[j];\n                            rs[j] = rs[j - 1];\n                            rs[j - 1] = temp;\n                          }\n                        }\n\n                        if (rs.length > 10) {\n                          rs.pop();\n                        }\n\n                        console.log(\"===\", rs);\n                      }\n\n                      return rs.map(function (n) {\n                        return {\n                          xAxis: n[0]\n                        };\n                      });\n                    }()\n                  };\n                  var markPoint = {\n                    symbol: \"circle\",\n                    symbolSize: 8,\n                    snap: true,\n                    animation: false,\n                    silent: false,\n                    label: {\n                      normal: {\n                        show: false\n                      }\n                    },\n                    itemStyle: {\n                      normal: {\n                        color: \"#fff\",\n                        borderColor: \"red\"\n                      }\n                    },\n                    data: function () {\n                      var rs = [];\n\n                      for (var i = -5; i < 5; i++) {\n                        rs.push({\n                          xAxis: parseInt(x1) + i * (parseInt(x0) - parseInt(x1)),\n                          yAxis: valueList[parseInt(x1) + i * (parseInt(x0) - parseInt(x1))]\n                        });\n                      }\n\n                      ;\n                      return rs;\n                    }()\n                  };\n                }\n\n                ;\n                var option = {\n                  grid: [{\n                    \"top\": \"10%\",\n                    \"width\": \"90%\",\n                    \"left\": \"5%\",\n                    \"height\": \"65%\"\n                  }, {\n                    \"top\": \"10%\",\n                    \"width\": \"90%\",\n                    \"left\": \"5%\",\n                    \"height\": \"65%\"\n                  }],\n                  tooltip: {\n                    \"alwaysShowContent\": true,\n                    triggerOn: 'none'\n                  },\n                  toolbox: {\n                    feature: {\n                      dataZoom: {\n                        yAxisIndex: false\n                      },\n                      restore: {},\n                      saveAsImage: {\n                        type: \"png\",\n                        name: \"振动分析-时域分析图\",\n                        backgroundColor: \"#0b2232\"\n                      }\n                    },\n                    iconStyle: {\n                      normal: {\n                        borderColor: \"#fff\"\n                      },\n                      emphasis: {\n                        borderColor: \"#e6e2e2\"\n                      }\n                    }\n                  },\n                  xAxis: [{\n                    type: \"value\",\n                    axisPointer: {\n                      label: {\n                        show: true,\n                        formatter: function formatter(val) {\n                          if (val.seriesData[0]) {\n                            target.setValue(\"x0\", val.value);\n                            target.setValue(\"y0\", val.seriesData[0].data[1]);\n                            target.trigger(\"handleChange1\");\n\n                            if (type == 1) {\n                              if (init == false) {\n                                render();\n                              }\n\n                              ;\n                              init = false;\n                            }\n\n                            ;\n                          }\n\n                          var v = val.value - 0;\n                          return typeof v === \"number\" && v === v ? v.toFixed(2) : null;\n                        },\n                        backgroundColor: \"#666\"\n                      },\n                      lineStyle: {\n                        color: \"blue\",\n                        width: 2\n                      },\n                      handle: {\n                        show: true,\n                        size: 30,\n                        margin: 40\n                      },\n                      \"value\": x0,\n                      snap: false\n                    }\n                  }, {\n                    axisPointer: _defineProperty({\n                      snap: true,\n                      label: {\n                        formatter: function formatter(val) {\n                          if (val.seriesData[0]) {\n                            target.setValue(\"x1\", val.value);\n                            target.setValue(\"y1\", val.seriesData[0].data[1]);\n                            target.trigger(\"handleChange1\");\n\n                            if (type == 2) {\n                              if (init == false) {\n                                render();\n                              }\n\n                              ;\n                              init = false;\n                            }\n\n                            ;\n                          }\n\n                          var v = val.value - 0;\n                          return typeof v === \"number\" && v === v ? v.toFixed(2) : null;\n                        },\n                        backgroundColor: \"#666\"\n                      },\n                      lineStyle: {\n                        color: \"red\",\n                        width: 2\n                      },\n                      handle: {\n                        show: true,\n                        size: 30,\n                        margin: 40\n                      },\n                      \"value\": x1\n                    }, \"snap\", false),\n                    gridIndex: 1\n                  }],\n                  yAxis: [{\n                    splitLine: {\n                      show: true\n                    }\n                  }, {\n                    splitLine: {\n                      show: false\n                    },\n                    gridIndex: 1\n                  }],\n                  dataZoom: [{\n                    show: true,\n                    realtime: true,\n                    start: 0,\n                    end: 100,\n                    xAxisIndex: [0, 1]\n                  }],\n                  series: [{\n                    type: 'line',\n                    showSymbol: false,\n                    data: valueList,\n                    markLine: markLine,\n                    markPoint: markPoint\n                  }, {\n                    type: 'line',\n                    showSymbol: false,\n                    lineStyle: {\n                      normal: {\n                        opacity: 0\n                      }\n                    },\n                    data: valueList,\n                    xAxisIndex: 1,\n                    yAxisIndex: 1\n                  }]\n                };\n                target.render(option);\n              };\n\n              render();\n              target.on(\"renderChart\", function () {\n                render(undefined, \"renderChart\");\n              });\n            } else {\n              target.showNoData();\n            }\n          });\n        };\n\n        resource ? target.getAttrsByModelId(resource.modelId, function (attrs) {\n          var getArr = function getArr(sourceValue) {\n            var rs = [];\n\n            for (var i in sourceValue) {\n              for (var j in sourceValue[i]) {\n                for (var k in sourceValue[i][j]) {\n                  rs.push(sourceValue[i][j][k]);\n                }\n              }\n            }\n\n            ;\n            return rs;\n          },\n              sourceValue = (sourceValue = attrs.find(function (elem) {\n            return elem.name == \"MeasurePointLocate\";\n          }), sourceValue = sourceValue ? eval(sourceValue.sourceValue) : null, getArr(sourceValue)),\n              dItem = sourceValue.find(function (elem) {\n            return sensor ? sensor.instance == elem.name : false;\n          }) || sourceValue[0],\n              accessConfigValues = resource.physicalConfig.accessConfigs,\n              subaccessConfigValues = accessConfigValues.filter(function (value) {\n            return value.instance == dItem.name;\n          }),\n              kpi = subaccessConfigValues.find(function (elem) {\n            return sensor ? elem.dataItemId == sensor.kpiId : false;\n          }) || subaccessConfigValues[0];\n\n          kpi ? null : console.warn(\"kpi is \" + Object.prototype.call(kpi));\n          renderFFTEchart(ci, [kpi.dataItemId], time);\n        }) : renderFFTEchart();\n      });\n    }\n  }\n});"],"sourceRoot":"/source/"}