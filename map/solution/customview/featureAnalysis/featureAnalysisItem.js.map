{"version":3,"sources":["solution/customview/featureAnalysis/featureAnalysisItem.js"],"names":["define","width","on","init","event","target","id","global","$state","params","startDate","startdate","Date","getTime","endDate","enddate","getResourceById","resource","getValue","dateRangeTime","triggerEvent","sel","accessConfigValues","filter","elem","select","nextTick","trigger","kpi","type","navigateTo","main","sub","physicalConfig","accessConfigs","types","label","setTimeout","render","ctrlGroups","value","style","textAlign","class","change","i","some","values","kpiId","options","format","icon","getDateString","success"],"mappings":"AAAAA,OAAO,CACLC,MAAO,OACPC,GAAI,CACFC,KAAM,SAAcC,GAClB,IAAIC,EAASD,EAAMC,OAEfC,GADSF,EAAMG,OACVF,EAAOG,OAAOC,OAAOH,IAM1BI,EAAYL,EAAOG,OAAOC,OAAOE,UAAY,IAAIC,KAAKP,EAAOG,OAAOC,OAAOE,WAAa,IAAIC,MAAK,IAAIA,MAAOC,UAAY,MACxHC,EAAUT,EAAOG,OAAOC,OAAOM,QAAU,IAAIH,KAAKP,EAAOG,OAAOC,OAAOM,SAAW,IAAIH,KAC1FP,EAAOW,gBAAgBV,EAAI,SAAUW,GACtBZ,EAAOa,SAAS,iBAA7B,IAEIC,EAAgB,CAACT,EAAWI,GAwI5BG,GAtIU,WACZ,IAAIG,EAAe,WACjB,IAAIC,EAAMC,EAAmBC,OAAO,SAAUC,GAC5C,OAAOA,EAAKC,SAEdpB,EAAOqB,SAAS,WACdrB,EAAOsB,QAAQ,6BAA8B,CAC3CC,IAAKP,EACLQ,KAAMA,EACNV,cAAeA,OAKhBF,GACHZ,EAAOyB,WAAW,QAAS,CACzBC,KAAM,EACNC,IAAK,GACJ,QAGL,IAAIV,EAAqBL,EAASgB,eAAiBhB,EAASgB,eAAeC,cAAgB,GAE3F,GAAIZ,EAAoB,CACtBA,EAAmB,GAAGG,QAAS,EAC/B,IAAIU,EAAQ,CAAC,CACX7B,GAAI,EACJ8B,MAAO,MACN,CACD9B,GAAI,EACJ8B,MAAO,OACN,CACD9B,GAAI,EACJ8B,MAAO,QAELP,EAAO,EACXQ,WAAW,WACTjB,KACC,KAEU,SAASkB,IACpB,IAAIC,EAAa,CAAC,CAAC,CACjBV,KAAM,QACNW,MAAO,KACPC,MAAO,CACLxC,MAAO,OACPyC,UAAW,WAEZ,CACDb,KAAM,cACNc,MAAO,WACPzC,GAAI,CACF0C,OAAQ,SAAgBpB,GACtB,IAAK,IAAIqB,KAAKvB,EAAoB,CAChC,IAAIwB,EAAOtB,EAAKuB,OAAOD,KAAK,SAAUtB,GACpC,OAAOA,EAAKwB,OAAS1B,EAAmBuB,GAAGG,QAE7C1B,EAAmBuB,GAAGpB,OAASqB,EAGjC1B,IACAkB,MAGJW,QAAS3B,EACT4B,OAAQ,CACN5C,GAAM,aACNkC,MAAS,SACTJ,MAAS,YAEV,CACDP,KAAM,QACNW,MAAO,OACPC,MAAO,CACLxC,MAAO,OACPyC,UAAW,WAEZ,CACDb,KAAM,SACNc,MAAO,WACPH,MAAOX,EACP3B,GAAI,CACF0C,OAAQ,SAAgBpB,GACtBK,EAAOL,EAAKgB,MAAMlC,GAClBc,IACAkB,MAGJW,QAASd,GACR,CACD7B,GAAI,EACJ6C,KAAM,OACNX,MAAO9B,EACPmB,KAAM,iBACNY,MAAO,CACLxC,MAAO,SAETC,GAAI,CACF0C,OAAQ,SAAgBpB,GAEtBL,EAAc,GAAKK,EAAKgB,MAAMY,cAC9BhC,OAGH,CACDS,KAAM,QACNW,MAAO,IACPC,MAAO,CACLC,UAAW,SACXzC,MAAO,SAER,CACDK,GAAI,EACJ6C,KAAM,OACNX,MAAO1B,EACPe,KAAM,iBACNY,MAAO,CACLxC,MAAO,SAETC,GAAI,CACF0C,OAAQ,SAAgBpB,GACtBV,EAAUU,EAAKgB,MAAMY,cACrBjC,EAAc,GAAKL,EACnBM,SAINf,EAAOiC,OAAOC,GAGhBD,IAKFe","file":"solution/customview/featureAnalysis/featureAnalysisItem.js","sourcesContent":["define({\n  width: \"auto\",\n  on: {\n    init: function init(event) {\n      var target = event.target;\n      var global = event.global;\n      var id = target.$state.params.id;\n      /**\n       * 判断是不是时间是不是告警带过来的时间 前二后一\n       * 默认是往前推两个小时\n       */\n\n      var startDate = target.$state.params.startdate ? new Date(target.$state.params.startdate) : new Date(new Date().getTime() - 2 * 60 * 60 * 1000);\n      var endDate = target.$state.params.enddate ? new Date(target.$state.params.enddate) : new Date();\n      target.getResourceById(id, function (resource) {\n        var sensor = target.getValue(\"global/sensor\") || {}; // 获取设备的测点\n\n        var dateRangeTime = [startDate, endDate];\n\n        var success = function success() {\n          var triggerEvent = function triggerEvent() {\n            var sel = accessConfigValues.filter(function (elem) {\n              return elem.select;\n            });\n            target.nextTick(function () {\n              target.trigger(\"drawDiagnoseFeatureEchart1\", {\n                kpi: sel,\n                type: type,\n                dateRangeTime: dateRangeTime\n              });\n            });\n          };\n\n          if (!resource) {\n            target.navigateTo(\"index\", {\n              main: 2,\n              sub: 0\n            }, \"self\");\n          }\n\n          var accessConfigValues = resource.physicalConfig ? resource.physicalConfig.accessConfigs : \"\";\n\n          if (accessConfigValues) {\n            accessConfigValues[0].select = true;\n            var types = [{\n              id: 0,\n              label: \"实时\"\n            }, {\n              id: 1,\n              label: \"时平均\"\n            }, {\n              id: 2,\n              label: \"天平均\"\n            }];\n            var type = 0;\n            setTimeout(function () {\n              triggerEvent();\n            }, 3000);\n\n            var render = function render() {\n              var ctrlGroups = [[{\n                type: \"label\",\n                value: \"指标\",\n                style: {\n                  width: \"40px\",\n                  textAlign: \"center\"\n                }\n              }, {\n                type: \"multiSelect\",\n                class: \"col-md-2\",\n                on: {\n                  change: function change(elem) {\n                    for (var i in accessConfigValues) {\n                      var some = elem.values.some(function (elem) {\n                        return elem.kpiId == accessConfigValues[i].kpiId;\n                      });\n                      accessConfigValues[i].select = some;\n                    }\n\n                    triggerEvent();\n                    render();\n                  }\n                },\n                options: accessConfigValues,\n                format: {\n                  \"id\": \"dataItemId\",\n                  \"value\": \"select\",\n                  \"label\": \"kpiName\"\n                }\n              }, {\n                type: \"label\",\n                value: \"分析类型\",\n                style: {\n                  width: \"40px\",\n                  textAlign: \"center\"\n                }\n              }, {\n                type: \"select\",\n                class: \"col-md-2\",\n                value: type,\n                on: {\n                  change: function change(elem) {\n                    type = elem.value.id;\n                    triggerEvent();\n                    render();\n                  }\n                },\n                options: types\n              }, {\n                id: 1,\n                icon: \"none\",\n                value: startDate,\n                type: \"dateTimePicker\",\n                style: {\n                  width: \"200px\"\n                },\n                on: {\n                  change: function change(elem) {\n                    // startDate = target.dateHandler();\n                    dateRangeTime[0] = elem.value.getDateString;\n                    triggerEvent();\n                  }\n                }\n              }, {\n                type: \"label\",\n                value: \"至\",\n                style: {\n                  textAlign: \"center\",\n                  width: \"30px\"\n                }\n              }, {\n                id: 2,\n                icon: \"none\",\n                value: endDate,\n                type: \"dateTimePicker\",\n                style: {\n                  width: \"200px\"\n                },\n                on: {\n                  change: function change(elem) {\n                    endDate = elem.value.getDateString;\n                    dateRangeTime[1] = endDate;\n                    triggerEvent();\n                  }\n                }\n              }]];\n              target.render(ctrlGroups);\n            };\n\n            render();\n          }\n        };\n\n        if (resource) {\n          success();\n        }\n      });\n    }\n  }\n});"],"sourceRoot":"/source/"}