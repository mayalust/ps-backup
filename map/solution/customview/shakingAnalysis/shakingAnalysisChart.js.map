{"version":3,"sources":["solution/customview/shakingAnalysis/shakingAnalysisChart.js"],"names":["define","on","init","event","kpiName","instance","target","endDate","global","getEndDate","startDate","getStartDate","endTime","getUTCDateString","startTime","$getCurrentResource","resource","callback","condition","dateRangeTime","ci","id","kpi","dataItemId","push","label","setValue","hasSingnal","getValue","showLoading","hideNoData","length","extension","isRealTimeData","includeInstance","queryInstances","getKpiValueList","returnData","hideLoading","xAxisData","kpiId","kpiCode","dateHandler","arisingTime","etTime","forEach","ele","tmp","minus","getDateString","seriesData","i","item","name","data","map","elem","value","option","title","textStyle","color","tooltip","triggerOn","position","pt","param","dataIndex","dt","legend","grid","top","height","toolbox","feature","dataZoom","restore","saveAsImage","type","backgroundColor","iconStyle","normal","borderColor","emphasis","xAxis","boundaryGap","axisPointer","snap","lineStyle","opacity","width","show","handle","shadowBlur","shadowColor","yAxis","max","toFixed","series","symbolSize","render","showNoData","renderEchart","off","dblclick","ui","trigger"],"mappings":"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","file":"solution/customview/shakingAnalysis/shakingAnalysisChart.js","sourcesContent":["define({\n  on: {\n    init: function init(event) {\n      var target = event.target,\n          global = event.global,\n          color = \"#ffe400\",\n          LENGTH = 50,\n          kpiName,\n          instance,\n          endDate = target.getEndDate(),\n          startDate = target.getStartDate(),\n          endTime = endDate.getUTCDateString(),\n          startTime = startDate.getUTCDateString(); // 渲染echart图\n\n      target.$getCurrentResource(function (resource) {\n        var renderEchart = function renderEchart(ci, kpi, instance) {\n          // 扩展参数\n          var hasSingnal = target.getValue(\"global/hasSingnal\") || [];\n          target.showLoading();\n          target.hideNoData();\n\n          if (ci.length > 0 && kpi.length > 0 && instance) {\n            var extension = {\n              isRealTimeData: false,\n              startTime: startTime,\n              endTime: endTime,\n              includeInstance: true,\n              queryInstances: instance\n            };\n\n            if (hasSingnal.length < 1) {\n              extension.hasSingnal = true;\n            }\n\n            var xAxis = [];\n            target.getKpiValueList(ci, kpi, 0, function (returnData) {\n              if (returnData.length > 0) {\n                target.hideLoading();\n                var xAxisData = [];\n                target.setValue(\"global/sensor\", {\n                  kpiId: returnData[0].kpiCode,\n                  instance: returnData[0].instance\n                });\n                target.setValue(\"echarts/data\", returnData); //缓存返回的KPI\n\n                target.setValue(\"global/dt\", returnData[0]);\n                target.setValue(\"global/time\", target.dateHandler(returnData[0].arisingTime));\n                var etTime = target.dateHandler(returnData[returnData.length - 1].arisingTime);\n                var edTimeInx = 0;\n                returnData.forEach(function (ele) {\n                  var tmp = target.dateHandler(ele.arisingTime);\n\n                  if (etTime.minus(tmp) > 4 * 3600 * 1000) {\n                    edTimeInx++;\n                  }\n\n                  xAxisData.push(tmp.getDateString(\"yy/MM/dd,hh:mm:ss\"));\n                });\n                var seriesData = [];\n\n                if (returnData) {\n                  for (var i in kpi) {\n                    var item = {\n                      name: kpiName,\n                      data: returnData.map(function (elem) {\n                        return elem.value;\n                      })\n                    };\n                    seriesData.push(item);\n                  }\n                }\n\n                var option = {\n                  title: {\n                    textStyle: {\n                      color: \"#fff\"\n                    }\n                  },\n                  tooltip: {\n                    triggerOn: 'none',\n                    position: function position(pt, param) {\n                      var dataIndex = param[0].dataIndex;\n                      var dt = returnData[dataIndex];\n                      target.setValue(\"global/sensor\", {\n                        kpiId: dt.kpiCode,\n                        instance: dt.instance\n                      });\n                      target.setValue(\"global/dt\", dt);\n                      target.setValue(\"global/time\", target.dateHandler(dt.arisingTime));\n                    }\n                  },\n                  legend: {\n                    data: seriesData.map(function (elem) {\n                      return elem.name;\n                    })\n                  },\n                  grid: {\n                    top: \"5%\",\n                    height: \"70%\"\n                  },\n                  toolbox: {\n                    feature: {\n                      dataZoom: {},\n                      restore: {},\n                      saveAsImage: {\n                        type: \"png\",\n                        name: \"振动分析-特征趋势图\",\n                        backgroundColor: \"#0b2232\"\n                      }\n                    },\n                    iconStyle: {\n                      normal: {\n                        borderColor: \"#fff\"\n                      },\n                      emphasis: {\n                        borderColor: \"#e6e2e2\"\n                      }\n                    }\n                  },\n                  xAxis: {\n                    boundaryGap: false,\n                    type: 'category',\n                    data: xAxisData,\n                    axisPointer: {\n                      value: xAxisData[0],\n                      snap: false,\n                      lineStyle: {\n                        color: '#126296',\n                        opacity: 0.5,\n                        width: 2\n                      },\n                      label: {\n                        show: true,\n                        backgroundColor: '#126296'\n                      },\n                      handle: {\n                        shadowBlur: 0,\n                        shadowColor: \"#fff\",\n                        show: true,\n                        color: '#126296'\n                      }\n                    }\n                  },\n                  yAxis: {\n                    type: 'value',\n                    max: function max(value) {\n                      return (value.max * 1.2).toFixed(3);\n                    }\n                  },\n\n                  /**\n                   dataZoom: [{\n                    show: false,\n                    realtime: true,\n                    startValue: edTimeInx,\n                    end: 100,\n                  }],*/\n                  series: seriesData.map(function (elem) {\n                    elem.type = \"line\";\n                    elem.symbolSize = 8;\n                    elem.data = elem.data;\n                    return elem;\n                  })\n                };\n                var ins = target.render(option);\n              } else {\n                target.showNoData();\n              }\n            }, extension);\n          } else {\n            target.showNoData();\n          }\n        };\n\n        var callback = function callback(condition) {\n          startTime = condition.dateRangeTime[0].getUTCDateString();\n          endTime = condition.dateRangeTime[1].getUTCDateString();\n          var ci = [resource.id];\n          var kpi = [];\n\n          if (condition.kpi.dataItemId) {\n            kpi.push(condition.kpi.dataItemId);\n            kpiName = condition.kpi.label;\n            instance = condition.kpi.instance;\n          }\n\n          target.setValue(\"featureEchart\", null);\n          renderEchart(ci, kpi, instance);\n        };\n\n        var condition = target.getValue(\"featureEchart\");\n\n        if (condition) {\n          callback(condition);\n        }\n\n        target.off(\"drawDiagnoseFeatureEchart1\");\n        target.on(\"drawDiagnoseFeatureEchart1\", function (condition) {\n          callback(condition);\n        });\n      });\n    },\n    dblclick: function dblclick(event) {\n      var target = event.target;\n      var returnData = target.getValue(\"echarts/data\"); //如果双击的index在数据里有\n\n      if (returnData && returnData[event.ui.dataIndex]) {\n        var dt = returnData[event.ui.dataIndex];\n        target.setValue(\"global/sensor\", {\n          kpiId: dt.kpiCode,\n          instance: dt.instance\n        });\n        target.setValue(\"global/dt\", dt);\n        target.setValue(\"global/time\", target.dateHandler(dt.arisingTime));\n        target.trigger(\"analysisShakeNavigateTo\", 2);\n      }\n    }\n  }\n});"],"sourceRoot":"/source/"}