{"version":3,"sources":["js/controllers/app-energy-ctrl.js"],"names":["define","controllers","BootstrapDialog","controller","$scope","ngDialog","$location","Info","alertService","userLoginUIService","viewFlexService","unitService","resourceUIService","dictionaryService","route","timeout","$rootScope","growl","dialogInstance","criticalCount","myOptions","myOptionDic","myDicts","provinces","citys","districts","cityDics","districtDics","alertView","designView","enterpriseType","treeviewIndex","oldTreeviewIndex","currentMenuCode","firstMenuCode","localMenuCode","showMenu","menuitems","$on","rootHandler","current","params","mode","detailshow","closeDialog","close","get","info","kpiIconList","kpiIcon","gotoHomePage","user","enterprise","logoStatus","location","href","gotoAppPage","showMenuFun","logout","onViewLoad","console","log","initUserObjects","initMenus","getAllUnits","returnObj","code","i","units","data","unitCode","unitName","unitDics","getAllDicts","dicts","dic","obj","dictCode","push","items","hasOwnProperty","getSimpleDistricts","forEach","province","id","children","city","getAllDataTypes","allDataTypes","getAllMyViews","v","viewList","length","view","description","test","JSON","parse","viewType","viewmenus","title","viewTitle","split","url","viewId","status","statusBg","statusLab","icon","splice","viewLoadFinished","$broadcast","getRootDomain","rootCi","error","getKpiTypeByFilter","newObj","text","label","defaultKpiList","menusFilter","item","functionCode","charAt","publicTableSearch","tabelname","value","name","evt","d","isAuthenticated","userInfo","lastLoginTime","newDateJson","Format","GetDateCategoryStrByLabel"],"mappings":"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","file":"js/controllers/app-energy-ctrl.js","sourcesContent":["define(['controllers/controllers', 'bootstrap-dialog'], function (controllers, BootstrapDialog) {\n  'use strict';\n\n  controllers.controller('AppDenuoCtrl', ['$scope', 'ngDialog', '$location', 'Info', 'alertService', 'userLoginUIService', 'viewFlexService', 'unitService', 'resourceUIService', 'dictionaryService', '$route', '$timeout', '$rootScope', 'growl', function ($scope, ngDialog, $location, Info, alertService, userLoginUIService, viewFlexService, unitService, resourceUIService, dictionaryService, route, timeout, $rootScope, growl) {\n    var dialogInstance; // 弹出框实例\n\n    var localmodel = false; // 本地测试模式\n\n    var menuDisplayAlertCount = false; //菜单是否显示告警数量\n\n    $scope.criticalCount = 0; // 菜单栏严重告警个数\n\n    $scope.myOptions; // 单位对象\n\n    $scope.myOptionDic = {}; //单位字典\n\n    $scope.myDicts; // 配置项字典\n\n    $scope.provinces; // 省级区域\n\n    $scope.citys; // 市级区域\n\n    $scope.districts; // 县级区域\n\n    $scope.cityDics; // 市级区域\n\n    $scope.districtDics; // 县级区域\n    //    $scope.powers = {}; // 权限列表\n\n    $scope.alertView = []; //告警视图集合\n\n    $scope.designView = []; //性能视图集合\n\n    $scope.enterpriseType = 0; // 企业类型\n\n    $scope.treeviewIndex = \"\";\n    $scope.oldTreeviewIndex = \"\";\n    $scope.currentMenuCode = null; //当前的菜单编码\n\n    $scope.firstMenuCode = null; //第一层的菜单编码\n\n    $scope.localMenuCode = \"F01\"; //判断使用哪一个服务中心，用来替代localIndex\n\n    $scope.showMenu = false;\n    $scope.menuitems = {}; // 路由跳转成功后触发\n\n    $scope.$on('$routeChangeSuccess', function () {\n      userLoginUIService.rootHandler($scope, $location);\n\n      if (route.current.params.mode == 'detail') {\n        $scope.detailshow = true;\n      } else {\n        $scope.detailshow = false;\n      }\n    }); //弹出框的关闭事件\n\n    $scope.closeDialog = function () {\n      ngDialog.close();\n    };\n    /**\n     * 判断未登录后如何处理\n     * localmodel＝true 本地测试使用\n     */\n\n\n    var showLogin = function showLogin() {\n      if (!localmodel) {\n        return;\n      }\n\n      dialogInstance = BootstrapDialog.show({\n        title: '欢迎来到普奥的世界',\n        closable: false,\n        //size:BootstrapDialog.SIZE_WIDE,\n        message: function message(dialog) {\n          var $message = $('<div></div>');\n          var pageToLoad = dialog.getData('pageToLoad');\n          $message.load(pageToLoad);\n          return $message;\n        },\n        data: {\n          'pageToLoad': 'partials/login.html'\n        },\n        buttons: [{\n          label: '登录',\n          cssClass: 'btn-success',\n          action: function action(dialogRef) {\n            var userInput = document.getElementById('username');\n            var psdInput = document.getElementById('password');\n            userLoginUIService.login(userInput.value, psdInput.value);\n          }\n        }, {\n          label: '退出',\n          action: function action(dialogRef) {\n            dialogRef.close();\n            location.href = \"../index.html\";\n          }\n        }]\n      });\n    };\n    /**\n     * 获得基础配置(暂不使用)\n     */\n\n\n    Info.get(\"../localdb/info.json\", function (info) {//      $scope.messages = info.messages;\n      //      $scope.tasks = info.tasks;\n      //      $scope.alerts = info.alerts;\n      //      $scope.menuitems = info.menuitems;\n    });\n    /**\n     * 获得KPI的图片配置\n     */\n\n    Info.get(\"../localdb/icon.json\", function (info) {\n      $scope.kpiIconList = info.kpiIcon;\n    });\n\n    $scope.gotoHomePage = function () {\n      if (userLoginUIService.user.enterprise.logoStatus != '0') {\n        location.href = \"http://www.proudsmart.com\";\n      }\n    };\n\n    $scope.gotoAppPage = function () {\n      location.href = \"index.html\";\n    };\n\n    $scope.showMenuFun = function () {\n      $scope.showMenu = !$scope.showMenu;\n    };\n\n    $scope.logout = function () {\n      userLoginUIService.logout();\n    };\n\n    $scope.onViewLoad = function () {\n      console.log('view changed');\n    };\n\n    function initUnit() {\n      unitService.getAllUnits(function (returnObj) {\n        if (returnObj.code == 0) {\n          unitService.units = returnObj.data;\n          $scope.myOptions = returnObj.data;\n\n          for (var i in $scope.myOptions) {\n            $scope.myOptionDic[$scope.myOptions[i].unitCode] = $scope.myOptions[i].unitName;\n            if ($scope.myOptions[i].unitCode == \"NA\" || $scope.myOptions[i].unitCode == \"Number\") $scope.myOptionDic[$scope.myOptions[i].unitCode] = \"\";\n          }\n\n          unitService.unitDics = $scope.myOptionDic;\n        }\n      });\n      dictionaryService.getAllDicts(function (returnObj) {\n        if (returnObj.code == 0) {\n          dictionaryService.dicts = returnObj.data;\n          $scope.myDicts = returnObj.data;\n          var dic = {};\n\n          for (var i in returnObj.data) {\n            var obj = returnObj.data[i];\n\n            if (dic[obj.dictCode]) {\n              dic[obj.dictCode].push(obj);\n            } else {\n              dic[obj.dictCode] = [];\n              dic[obj.dictCode].push(obj);\n            }\n          }\n\n          for (var items in dic) {\n            $scope.myDicts[items] = dic[items];\n          }\n        }\n      });\n\n      if (!resourceUIService.hasOwnProperty(\"provinces\")) {\n        resourceUIService.getSimpleDistricts(function (returnObj) {\n          if (returnObj.code == 0) {\n            resourceUIService.provinces = returnObj.data;\n            $scope.provinces = returnObj.data;\n            $scope.cityDics = {};\n            $scope.districtDics = {};\n            $scope.provinces.forEach(function (province) {\n              $scope.cityDics[province.id] = province.children;\n              province.children.forEach(function (city) {\n                $scope.districtDics[city.id] = city.children;\n              });\n            });\n          }\n        });\n      }\n\n      ;\n      resourceUIService.getAllDataTypes(function (returnObj) {\n        if (returnObj.code == 0) {\n          $scope.allDataTypes = returnObj.data;\n        }\n      });\n    }\n\n    ;\n\n    function initRootDomain() {\n      resourceUIService.getRootDomain(function (returnObj) {\n        if (returnObj.code == 0) {\n          if (returnObj.data) {\n            $scope.rootCi = returnObj.data.id;\n          } else {\n            growl.error(\"当前用户不存在rootCi，请联系客服处理。\", {});\n          }\n        }\n      });\n    } //    var setPower = function(pow, len) {\n    //      pow = pow.substring(0, len);\n    //      $scope.powers[pow] = true;\n    //      if (len > 5) {\n    //        setPower(pow, len - 2);\n    //      }\n    //    };\n    //\n    //    var initPower = function() {\n    //      for (var i in userLoginUIService.user.functionCodeSet) {\n    //        var funCode = userLoginUIService.user.functionCodeSet[i];\n    //        $scope.powers[funCode] = true;\n    //        if (funCode.length > 5) {\n    //          setPower(funCode, funCode.length - 2);\n    //        }\n    //      }\n    //    };\n\n\n    var initCount = function initCount() {\n      if (menuDisplayAlertCount) {\n        var params = {};\n        params.states = \"0\";\n        alertService.countFromCache(params, function (returnObj) {\n          if (returnObj.code == 0) {\n            $scope.criticalCount = returnObj.data.criticalCount;\n          }\n        });\n      }\n    };\n\n    function initViews() {\n      $scope.alertView = [];\n      $scope.designView = [];\n      viewFlexService.getAllMyViews(function (returnObj) {\n        if (returnObj.code == 0) {\n          var v = returnObj.data;\n          var viewList = [];\n\n          for (var i = 0; i < v.length; i++) {\n            var view = v[i];\n\n            if (view) {\n              viewList.push(view);\n              var description = {};\n\n              if (typeof view.description == \"string\") {\n                var objectLike = /^\\{(.|\\n)*\\}$/;\n                var reg = objectLike.test(view.description);\n\n                if (reg) {\n                  description = JSON.parse(view.description);\n                }\n              }\n\n              if (view.viewType == \"designView\") {\n                var viewmenus = {\n                  \"title\": view.viewTitle.split(\"?\")[0],\n                  \"url\": \"#/\" + view.viewType + \"/\" + view.viewId,\n                  \"viewId\": view.viewId,\n                  \"view\": view,\n                  \"status\": description['status'],\n                  \"statusBg\": description[\"status\"] == 1 ? 'bg-red' : description[\"status\"] == 2 ? 'bg-green' : '',\n                  \"statusLab\": description[\"status\"] == 1 ? '授权' : description[\"status\"] == 2 ? '购买' : '',\n                  \"icon\": \"fa fa-area-chart\"\n                };\n                $scope.designView.push(viewmenus);\n              } else if (view.viewType == \"configAlert\") {\n                var viewmenus = {\n                  \"title\": view.viewTitle.split(\"?\")[0],\n                  \"url\": \"#/\" + view.viewType + \"/\" + view.viewId,\n                  \"viewId\": view.viewId,\n                  \"view\": view,\n                  \"status\": description[\"status\"],\n                  \"statusBg\": description[\"status\"] == 1 ? 'bg-red' : description[\"status\"] == 2 ? 'bg-green' : '',\n                  \"statusLab\": description[\"status\"] == 1 ? '授权' : description[\"status\"] == 2 ? '购买' : '',\n                  \"icon\": \"fa fa-warning\"\n                };\n\n                if (viewmenus.title == \"全部告警\") {\n                  $scope.alertView.splice(0, 0, viewmenus);\n                } else {\n                  $scope.alertView.push(viewmenus);\n                }\n              }\n            }\n          }\n\n          for (var i = 0; i < 20; i++) {\n            var viewmenus = {\n              \"title\": \"viewmenus\" + i,\n              \"url\": \"#\",\n              \"viewId\": i,\n              \"icon\": \"fa fa-warning\",\n              \"view\": {\n                \"viewId\": 123\n              }\n            };\n            $scope.alertView.push(viewmenus);\n          }\n\n          viewFlexService.viewLoadFinished = true;\n          viewFlexService.viewList = viewList;\n          $scope.viewList = viewList;\n          $scope.$broadcast('viewLoadFinished');\n        }\n      });\n    }\n\n    ;\n\n    var initDefaultKpis = function initDefaultKpis() {\n      resourceUIService.getKpiTypeByFilter({}, function (returnObj) {\n        if (returnObj.code == 0) {\n          var newObj = [];\n          returnObj.data.forEach(function (obj) {\n            obj.text = obj.label;\n            newObj.push(obj);\n          });\n          $scope.defaultKpiList = newObj;\n        }\n      });\n    };\n\n    $scope.menusFilter = function (item) {\n      return item.functionCode.charAt(0) === \"S\";\n    };\n\n    $scope.publicTableSearch = function (tabelname, value) {\n      $scope.$broadcast('table-search-handle', {\n        name: tabelname,\n        value: value\n      });\n    };\n\n    function initUserObjects() {\n      userLoginUIService.initMenus($scope, $location);\n      initUnit();\n      initViews();\n      initRootDomain();\n      initCount(); //      initPower();\n\n      initDefaultKpis();\n    }\n\n    ; // 监听用户登录状态\n\n    $scope.$on('loginStatusChanged', function (evt, d) {\n      if (userLoginUIService.user.isAuthenticated) {\n        if (dialogInstance) {\n          dialogInstance.close();\n        }\n\n        $scope.userInfo = userLoginUIService.user;\n        $scope.lastLoginTime = newDateJson(userLoginUIService.user.lastLoginTime).Format(GetDateCategoryStrByLabel());\n        if (userLoginUIService.user.enterprise) $scope.enterpriseType = userLoginUIService.user.enterprise.enterpriseType;\n        initUserObjects();\n      } else {\n        $scope.userInfo = {};\n        $scope.lastLoginTime = \"\";\n        showLogin();\n      }\n    });\n  }]);\n});"],"sourceRoot":"/source/"}