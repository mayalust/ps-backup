{"version":3,"sources":["js/controllers/view-maps-ctrl.js"],"names":["define","controllers","controller","$scope","kpiDataService","SwSocket","Info","alertService","userLoginUIService","resourceUIService","baseoption","dashboardOption","backgroundColor","title","text","subtext","sublink","left","textStyle","color","tooltip","trigger","formatter","obj","seriesName","value","bmap","center","zoom","roam","mapStyle","styleJson","series","name","type","coordinateSystem","data","symbolSize","val","label","normal","position","show","emphasis","itemStyle","showEffectOn","rippleEffect","brushType","hoverAnimation","shadowBlur","shadowColor","zlevel","get","info","styleJson_dark","statDeviceByStandardAddress","returnObj","citys","code","city","arr","split","indexOf","length","geoCoord","push","topcount","topCount","$broadcast","Event","ECHARTMAPINFOSINIT","option"],"mappings":"AAAAA,OAAO,CAAC,2BAA4B,SAAUC,GAC5C,aAEAA,EAAYC,WAAW,eAAgB,CAAC,SAAU,iBAAkB,WAAY,OAAQ,eAAgB,qBAAsB,oBAAqB,SAAUC,EAAQC,EAAgBC,EAAUC,EAAMC,EAAcC,EAAoBC,GACrO,IAAIC,EACAC,EAAkB,CACpBC,gBAAiB,UACjBC,MAAO,CACLC,KAAM,GACNC,QAAS,GACTC,QAAS,GACTC,KAAM,SACNC,UAAW,CACTC,MAAO,SAGXC,QAAS,CACPC,QAAS,OACTC,UAAW,SAAmBC,GAC5B,OAAOA,EAAIC,WAAa,IAAMD,EAAIE,MAAM,KAG5CC,KAAM,CACJC,OAAQ,CAAC,WAAY,WACrBC,KAAM,EACNC,MAAM,EACNC,SAAU,CACRC,UAAW,KAGfC,OAAQ,CAAC,CACPC,KAAM,QACNC,KAAM,UACNC,iBAAkB,OAClBC,KAAM,GACNC,WAAY,SAAoBC,GAC9B,OAAIA,EAAqB,GAATA,EAAI,GAAU,GAAKA,EAAI,GAAK,GAAK,GAAKA,EAAI,GAAe,GAE3EC,MAAO,CACLC,OAAQ,CACNlB,UAAW,MACXmB,SAAU,QACVC,MAAM,GAERC,SAAU,CACRD,MAAM,IAGVE,UAAW,CACTJ,OAAQ,CACNrB,MAAO,aAGV,CACDc,KAAM,QACNC,KAAM,gBACNC,iBAAkB,OAClBC,KAAM,GACNC,WAAY,SAAoBC,GAC9B,OAAIA,EAAqB,GAATA,EAAI,GAAU,GAAKA,EAAI,GAAK,GAAK,GAAKA,EAAI,GAAe,GAE3EO,aAAc,SACdC,aAAc,CACZC,UAAW,UAEbC,gBAAgB,EAChBT,MAAO,CACLC,OAAQ,CACNlB,UAAW,MACXmB,SAAU,QACVC,MAAM,IAGVE,UAAW,CACTJ,OAAQ,CACNrB,MAAO,UACP8B,WAAY,GACZC,YAAa,SAGjBC,OAAQ,KAgDD7C,EAAK8C,IAAI,8BAA+B,SAAUC,GAC3D3C,EAAa2C,EACb1C,EAAgBe,KAAKI,SAASC,UAAYrB,EAAW4C,eA7CrD7C,EAAkB8C,4BAA4B,SAAUC,GACtD,IAAIC,EAAQ,GAGZ,GAAsB,GAAlBD,EAAUE,KAAW,CACvB,IAAK,IAAIC,KAAQH,EAAUpB,KACzB,GAAIuB,EAAM,CACR,IAAIC,EAAMD,EAAKE,MAAM,MAEM,EAAvBD,EAAI,GAAGE,QAAQ,KACbL,EAAMG,EAAI,IAAKH,EAAMG,EAAI,IAAMH,EAAMG,EAAI,IAAMJ,EAAUpB,KAAKuB,GAAWF,EAAMG,EAAI,IAAMJ,EAAUpB,KAAKuB,GACtF,EAAbC,EAAIG,SACbN,EAAMG,EAAI,IAAMJ,EAAUpB,KAAKuB,IAMrC,IAAK,IAAIA,KAAQF,EAAO,CACtB,IAAIlC,EAAM,GACVA,EAAIU,KAAO0B,EACXpC,EAAIE,MAAQf,EAAWsD,SAASL,GAE5BpC,EAAIE,OACNF,EAAIE,MAAMwC,KAAKR,EAAME,IAGvBhD,EAAgBqB,OAAO,GAAGI,KAAK6B,KAAK1C,GACpC,IAAI2C,EAAW,EACXxD,EAAWyD,WAAUD,EAAWxD,EAAWyD,UAE3CxD,EAAgBqB,OAAO,GAAGI,KAAK2B,QAAUG,GAC3CvD,EAAgBqB,OAAO,GAAGI,KAAK6B,KAAK1C,GAIxCpB,EAAOiE,WAAWC,MAAMC,mBAAoB,CAC1CC,OAAU5D","file":"js/controllers/view-maps-ctrl.js","sourcesContent":["define(['controllers/controllers'], function (controllers) {\n  'use strict';\n\n  controllers.controller('ViewMapsCtrl', ['$scope', 'kpiDataService', 'SwSocket', 'Info', 'alertService', 'userLoginUIService', 'resourceUIService', function ($scope, kpiDataService, SwSocket, Info, alertService, userLoginUIService, resourceUIService) {\n    var baseoption;\n    var dashboardOption = {\n      backgroundColor: '#404a59',\n      title: {\n        text: '',\n        subtext: '',\n        sublink: '',\n        left: 'center',\n        textStyle: {\n          color: '#fff'\n        }\n      },\n      tooltip: {\n        trigger: 'item',\n        formatter: function formatter(obj) {\n          return obj.seriesName + ':' + obj.value[2];\n        }\n      },\n      bmap: {\n        center: [104.114129, 37.550339],\n        zoom: 5,\n        roam: true,\n        mapStyle: {\n          styleJson: []\n        }\n      },\n      series: [{\n        name: '运行设备数',\n        type: 'scatter',\n        coordinateSystem: 'bmap',\n        data: [],\n        symbolSize: function symbolSize(val) {\n          if (val) return val[2] > 20 ? 20 : val[2] < 10 ? 10 : val[2];else return 0;\n        },\n        label: {\n          normal: {\n            formatter: '{b}',\n            position: 'right',\n            show: false\n          },\n          emphasis: {\n            show: true\n          }\n        },\n        itemStyle: {\n          normal: {\n            color: '#ffffff'\n          }\n        }\n      }, {\n        name: '运行设备数',\n        type: 'effectScatter',\n        coordinateSystem: 'bmap',\n        data: [],\n        symbolSize: function symbolSize(val) {\n          if (val) return val[2] > 20 ? 20 : val[2] < 10 ? 10 : val[2];else return 0;\n        },\n        showEffectOn: 'render',\n        rippleEffect: {\n          brushType: 'stroke'\n        },\n        hoverAnimation: true,\n        label: {\n          normal: {\n            formatter: '{b}',\n            position: 'right',\n            show: true\n          }\n        },\n        itemStyle: {\n          normal: {\n            color: '#e1cd0a',\n            shadowBlur: 10,\n            shadowColor: '#333'\n          }\n        },\n        zlevel: 1\n      }]\n    };\n\n    var init = function init() {\n      resourceUIService.statDeviceByStandardAddress(function (returnObj) {\n        var citys = {//          \"北京市\": 0\n        };\n\n        if (returnObj.code == 0) {\n          for (var city in returnObj.data) {\n            if (city) {\n              var arr = city.split(\",\");\n\n              if (arr[0].indexOf(\"市\") > -1) {\n                if (citys[arr[0]]) citys[arr[0]] = citys[arr[0]] + returnObj.data[city];else citys[arr[0]] = returnObj.data[city];\n              } else if (arr.length > 1) {\n                citys[arr[1]] = returnObj.data[city];\n              }\n            } else {//              citys[\"北京市\"] = citys[\"北京市\"] + returnObj.data[\"\"]\n            }\n          }\n\n          for (var city in citys) {\n            var obj = {};\n            obj.name = city;\n            obj.value = baseoption.geoCoord[city];\n\n            if (obj.value) {\n              obj.value.push(citys[city]);\n            }\n\n            dashboardOption.series[0].data.push(obj);\n            var topcount = 5;\n            if (baseoption.topCount) topcount = baseoption.topCount;\n\n            if (dashboardOption.series[0].data.length <= topcount) {\n              dashboardOption.series[1].data.push(obj);\n            }\n          }\n\n          $scope.$broadcast(Event.ECHARTMAPINFOSINIT, {\n            \"option\": dashboardOption\n          });\n        }\n      });\n    };\n\n    var info = Info.get(\"../localdb/echarts-map.json\", function (info) {\n      baseoption = info;\n      dashboardOption.bmap.mapStyle.styleJson = baseoption.styleJson_dark;\n      init();\n    });\n  }]);\n});"],"sourceRoot":"/source/"}