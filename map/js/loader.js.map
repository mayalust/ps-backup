{"version":3,"sources":["js/loader.js"],"names":["define","dependencies","resolver","$q","$rootScope","defered","defer","require","$apply","resolve","promise"],"mappings":"AAAAA,OAAO,GAAI,WACT,OAAO,SAAUC,GAmBf,MAjBiB,CAEfC,SAAU,CAAC,KAAM,aAAc,SAAUC,EAAIC,GAE3C,IAAIC,EAAUF,EAAGG,QAUjB,OARAC,QAAQN,EAAc,WACpBG,EAAWI,OAAO,WAEhBH,EAAQI,cAKLJ,EAAQK","file":"js/loader.js","sourcesContent":["define([], function () {\n  return function (dependencies) {\n    // 返回路由的 resolve 定义， \n    var definition = {\n      // resolver 是一个函数， 返回一个 promise 对象；\n      resolver: ['$q', '$rootScope', function ($q, $rootScope) {\n        // 创建一个延迟执行的 promise 对象\n        var defered = $q.defer(); // 使用 requirejs 的 require 方法加载的脚本\n\n        require(dependencies, function () {\n          $rootScope.$apply(function () {\n            // 加载完脚本之后， 完成 promise 对象；\n            defered.resolve();\n          });\n        }); //返回延迟执行的 promise 对象， route 会等待 promise 对象完成\n\n\n        return defered.promise;\n      }]\n    };\n    return definition;\n  };\n});"],"sourceRoot":"/source/"}