{"version":3,"sources":["js/directives/echarts-dom.js"],"names":["define","directives","echarts","macarons","initDirective","$timeout","restrict","controller","$scope","$element","$attrs","myChart","domMain","option","$on","Event","ECHARTINFOSINIT","event","args","name","init","setOption","$","window","resize","ECHARTMAPINFOSINIT","maxZoom","require","bmap","initEcharts","on","payload","_model","eachComponent","bMapModel","getBMap","getCenter","getZoom","ECHARTMAPINFOSCHANGE","optionData","optionObj","gateways","gatewaysLink","categories","i","obj","id","symbolSize","attributes","modularity_class","parseInt","push","devices","length","devicesArr","j","devicesObj","source","target","lineStyle","normal","obj2","label","forEach","node","itemStyle","value","category","x","y","draggable","title","text","subtext","bottom","right","tooltip","formatter","legend","data","map","item","animation","series","type","layout","links","roam","position","force","repulsion","img","css","width","textAlign","top","fontWeight","color","append"],"mappings":"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","file":"js/directives/echarts-dom.js","sourcesContent":["define(['directives/directives', 'echarts', 'macarons'], function (directives, echarts, macarons) {\n  'use strict';\n\n  directives.initDirective('echarts3Dom', ['$timeout', function ($timeout) {\n    return {\n      restrict: 'AE',\n      controller: ['$scope', '$element', '$attrs', function ($scope, $element, $attrs) {\n        var myChart;\n        var domMain = $element[0];\n        var curTheme = 'macarons';\n        var option = \"\";\n\n        function initEcharts() {\n          myChart = echarts.init(domMain, curTheme);\n          myChart.setOption(option);\n          $(window).resize(function () {\n            myChart.resize();\n          });\n        }\n        /**\n         * 监听Echart数据初始化\n         */\n\n\n        $scope.$on(Event.ECHARTINFOSINIT, function (event, args) {\n          if (!$attrs.name || args.name == $attrs.name) {\n            option = args.option;\n            initEcharts();\n          }\n        });\n        /**\n         * 监听Echart数据变化\n         */\n\n        $scope.$on('OptionStatusChange', function (event, args) {\n          if (!$attrs.name || args.name == $attrs.name) {\n            option = args.option;\n            myChart.setOption(option);\n          }\n        });\n\n        function eConsole(param) {\n          var mes = '【' + param.type + '】'; //              if (typeof param.seriesIndex != 'undefined') {\n          //                  mes += '  seriesIndex : ' + param.seriesIndex;\n          //                  mes += '  dataIndex : ' + param.dataIndex;\n          //              }\n          //              if (param.type == 'hover') {\n          //                  document.getElementById('hover-console').innerHTML = 'Event Console : ' + mes;\n          //              }\n          //              else {\n          //                  document.getElementById('console').innerHTML = mes;\n          //              }\n          //              console.log(param);\n        }\n\n        function initEvent() {\n          var ecConfig = require('echarts/config');\n          /*\n           // -------全局通用\n           REFRESH: 'refresh',\n           RESTORE: 'restore',\n           RESIZE: 'resize',\n           CLICK: 'click',\n           DBLCLICK: 'dblclick',\n           HOVER: 'hover',\n           MOUSEOUT: 'mouseout',\n           // -------业务交互逻辑\n           DATA_CHANGED: 'dataChanged',\n           DATA_ZOOM: 'dataZoom',\n           DATA_RANGE: 'dataRange',\n           DATA_RANGE_HOVERLINK: 'dataRangeHoverLink',\n           LEGEND_SELECTED: 'legendSelected',\n           LEGEND_HOVERLINK: 'legendHoverLink',\n           MAP_SELECTED: 'mapSelected',\n           PIE_SELECTED: 'pieSelected',\n           MAGIC_TYPE_CHANGED: 'magicTypeChanged',\n           DATA_VIEW_CHANGED: 'dataViewChanged',\n           TIMELINE_CHANGED: 'timelineChanged',\n           MAP_ROAM: 'mapRoam',\n           */\n\n\n          myChart.on(ecConfig.EVENT.CLICK, eConsole); //            myChart.on(ecConfig.EVENT.DBLCLICK, eConsole);\n          //myChart.on(ecConfig.EVENT.HOVER, eConsole);\n          //            myChart.on(ecConfig.EVENT.DATA_ZOOM, eConsole);\n          //            myChart.on(ecConfig.EVENT.LEGEND_SELECTED, eConsole);\n          //            myChart.on(ecConfig.EVENT.MAGIC_TYPE_CHANGED, eConsole);\n          //            myChart.on(ecConfig.EVENT.DATA_VIEW_CHANGED, eConsole);\n          //myChart.on(ecConfig.EVENT.PIE_SELECTED, eConsole);\n        }\n      }]\n    };\n  }]);\n  directives.initDirective('echarts2Dom', ['$timeout', function ($timeout) {\n    return {\n      restrict: 'AE',\n      controller: ['$scope', '$element', '$attrs', function ($scope, $element, $attrs) {\n        var option;\n        var maxZoom = 15;\n        $scope.$on(Event.ECHARTMAPINFOSINIT, function (event, args) {\n          option = args.option;\n          if (args.maxZoom) maxZoom = args.maxZoom;\n        });\n\n        require(['bmap', 'baiduMap'], function (bmap) {\n          var myChart;\n          var domMain = $element[0];\n\n          function initEcharts() {\n            myChart = echarts.init(domMain);\n            myChart.setOption(option);\n            $(window).resize(function () {\n              myChart.resize();\n            });\n            myChart.on('bmapRoam', function (payload) {\n              myChart._model.eachComponent('bmap', function (bMapModel) {\n                var bmap = bMapModel.getBMap();\n                var center = bmap.getCenter();\n                var zoom = bmap.getZoom();\n              });\n            });\n          }\n\n          if (option) {\n            initEcharts();\n          } else {\n            $scope.$on(Event.ECHARTMAPINFOSINIT, function (event, args) {\n              option = args.option;\n              if (args.maxZoom) maxZoom = args.maxZoom;\n              initEcharts();\n            });\n          }\n\n          $scope.$on(Event.ECHARTMAPINFOSCHANGE, function (event, args) {\n            option = args.option; //          BMapExt.setOption(option, true)\n            //refresh();\n          });\n        });\n      }]\n    };\n  }]);\n  /*\n  *网关导向图\n  */\n\n  directives.initDirective('echarts2GexfDom', ['$timeout', function ($timeout) {\n    return {\n      restrict: 'AE',\n      controller: ['$scope', '$element', '$attrs', function ($scope, $element, $attrs) {\n        var myChart;\n        var domMain = $element[0];\n        var option = \"\";\n        var optionData = \"\";\n        var optionObj = \"\";\n        /**\n         * 监听Echart数据初始化\n         */\n\n        $scope.$on(Event.ECHARTINFOSINIT + \"_graph\", function (event, args) {\n          optionData = args.optionData;\n          optionObj = args.optionObj;\n        });\n\n        require(['bmap'], function (bmap) {\n          function initEcharts() {\n            myChart = echarts.init(domMain);\n            var arrList = [];\n            var gateways = [];\n            var gatewaysLink = [];\n            var categories = [];\n\n            for (var i in optionData) {\n              var obj = {\n                \"id\": optionData[i].id,\n                \"name\": optionData[i].name,\n                \"symbolSize\": i,\n                //用来存放设备数\n                \"attributes\": {\n                  \"modularity_class\": parseInt(i)\n                }\n              };\n              gateways.push(obj);\n\n              if (optionObj[optionData[i].id].devices.length > 0) {\n                var devicesArr = optionObj[optionData[i].id].devices;\n\n                for (var j in devicesArr) {\n                  //用来存放链接关系\n                  var devicesObj = {\n                    \"id\": \"\" + devicesArr[j].id + \"\",\n                    \"name\": null,\n                    \"source\": \"\" + devicesArr[j].id + \"\",\n                    //子id对应data的id\n                    \"target\": \"\" + optionData[i].id + \"\",\n                    //父id\n                    \"lineStyle\": {\n                      \"normal\": {}\n                    }\n                  };\n                  var obj2 = {\n                    \"id\": devicesArr[j].id,\n                    \"name\": devicesArr[j].label,\n                    \"symbolSize\": \"9\",\n                    //用来存放设备数\n                    \"attributes\": {\n                      \"modularity_class\": parseInt(i)\n                    }\n                  };\n                  gateways.push(obj2);\n                  gatewaysLink.push(devicesObj);\n                }\n              }\n\n              categories[i] = {\n                name: '' + optionData[i].name + ''\n              };\n            }\n\n            gateways.forEach(function (node) {\n              node.itemStyle = null;\n              node.symbolSize = 10;\n              node.value = \"tesr4\";\n              node.category = node.attributes.modularity_class; // Use random x, y\n\n              node.x = node.y = null;\n              node.draggable = true;\n            });\n\n            if (gateways.length > 0) {\n              option = {\n                title: {\n                  text: '',\n                  subtext: '默认布局',\n                  bottom: '5px',\n                  right: '10px'\n                },\n                tooltip: {\n                  \"formatter\": \"{a}\"\n                },\n                legend: [{\n                  // selectedMode: 'single',\n                  data: categories.map(function (item) {\n                    return item.name;\n                  })\n                }],\n                animation: false,\n                series: [{\n                  name: '',\n                  type: 'graph',\n                  layout: 'force',\n                  data: gateways,\n                  links: gatewaysLink,\n                  categories: categories,\n                  roam: true,\n                  label: {\n                    normal: {\n                      position: 'right'\n                    }\n                  },\n                  force: {\n                    repulsion: 100\n                  }\n                }]\n              };\n              myChart.setOption(option);\n              $(window).resize(function () {\n                myChart.resize();\n              });\n            } else {\n              var img = $(\"<img style='width: 100%;height: 100px;position: absolute;top: 35%;' src='../images/noData.svg'/>\");\n              var text = $(\"<h4>暂无数据</h4>\");\n              text.css({\n                width: '100%',\n                textAlign: 'center',\n                position: \"absolute\",\n                top: \"50%\",\n                fontWeight: \"400\",\n                color: '#bdbdbd'\n              });\n              $('.chart').append(img);\n              $('.chart').append(text);\n            }\n          }\n\n          if (optionData) {\n            initEcharts();\n          } else {\n            $scope.$on(Event.ECHARTINFOSINIT + \"_graph\", function (event, args) {\n              optionData = args.optionData;\n              optionObj = args.optionObj;\n              initEcharts();\n            });\n          }\n\n          $scope.$on(Event.ECHARTINFOSINIT + \"_graph\", function (event, args) {\n            optionData = args.optionData;\n            optionObj = args.optionObj;\n          });\n        });\n      }]\n    };\n  }]);\n});"],"sourceRoot":"/source/"}