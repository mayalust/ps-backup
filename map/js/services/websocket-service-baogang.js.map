{"version":3,"sources":["js/services/websocket-service-baogang.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","global","factory","define","require","window","wSocket","this","services","context","$timeout","growl","serviceProxy","ws","connected","protocol","host","connections","wsURL","init","url","WebSocket","Promise","resolve","reject","onopen","evnt","undefined","onmessage","str","d","data","RegExp","test","JSON","parse","uuid","nodeId","kpiCode","i","cb","onclose","event","console","log","onerror","register","params","webSocketVo","operation","type","param","send","stringify","unregister","getId","e","id","a","b","extend","connect","ci","kpi","callback","push","ciid","map","toString","then","disconnect","setTimeout","service"],"mappings":"AAAA,SAASA,QAAQC,GAAwT,OAAtOD,QAArD,mBAAXE,QAAoD,iBAApBA,OAAOC,SAAmC,SAAiBF,GAAO,cAAcA,GAA2B,SAAiBA,GAAO,OAAOA,GAAyB,mBAAXC,QAAyBD,EAAIG,cAAgBF,QAAUD,IAAQC,OAAOG,UAAY,gBAAkBJ,IAAyBA,IAExV,SAAWK,EAAQC,GACI,mBAAVC,QAA0C,mBAAXC,QACxCD,OAAO,CAAC,2BAA4BD,GAEhCD,GAAUI,SACZJ,EAAOK,QAAUJ,KALvB,CAQGK,KAAM,SAAUC,GACjB,aAEA,SAASC,EAAQC,EAAUC,EAAOC,GAChC,IAAIC,EAEAC,EACkBC,EAAUC,EAF5BC,EAAc,GAEdC,GAAkBH,EAQpBH,EAAaG,SARiBC,EAQPJ,EAAaI,KAPpCD,EAAWA,GAAY,MAEnBC,EACKD,EAAW,KAAOC,EAAO,qBAEzB,yCAoBX,SAASG,EAAKC,GACZF,EAAQE,GAAOF,EACfL,EAAK,IAAIQ,UAAUH,GACnBJ,EAAY,IAAIQ,QAAQ,SAAUC,EAASC,GACzCX,EAAGY,OAAS,SAAUC,GACpBZ,OAAYa,EACZJ,EAAQ,cAIZV,EAAGe,UAAY,SAAUF,GACvB,IArBYG,EAqBRC,GArBQD,EAqBGH,EAAKK,KApBR,IAAIC,OAAO,aAAc,KAE3BC,KAAKJ,GACRK,KAAKC,MAAMN,GAEX,MAgBHO,EAAON,EAAEM,KAGTL,GAFKD,EAAEO,OACDP,EAAEQ,QACDR,EAAEC,MAEb,IAAK,IAAIQ,KAAKtB,EAAYmB,GAAO,EAE/BI,EADSvB,EAAYmB,GAAMG,IACxBR,KAIPlB,EAAG4B,QAAU,SAAUC,GACrBC,QAAQC,IAAIF,IAGd7B,EAAGgC,QAAU,SAAUnB,GACrBiB,QAAQC,IAAIF,QAIhB,SAASpC,EAAQc,GACf,OAAO,IAAId,EAAQa,KAAKC,GAG1B,SAAS0B,EAASV,EAAMW,GACtB,IAAIC,EAAc,CAChBZ,KAAMA,EACNa,UAAW,WACXC,KAAM,MACNC,MAAOJ,GAETlC,EAAGuC,KAAKlB,KAAKmB,UAAUL,IAGzB,SAASM,EAAWlB,GAClB,IAAIY,EAAc,CAChBZ,KAAMA,EACNa,UAAW,cAEbpC,EAAGuC,KAAKlB,KAAKmB,UAAUL,IAGzB,SAASO,EAAMC,GACb,MAAkB,UAAd7D,QAAQ6D,GACHA,EAAEC,GAEFD,EA0CX,OApHA,SAAgBE,EAAGC,GACjB,IAAK,IAAIpB,KAAKoB,EACZD,EAAEnB,GAAKoB,EAAEpB,GA8GbqB,EADAtD,EAAQa,KAAOA,GACHnB,UAAW,CACrB6D,QAnCF,SAAiBzB,EAAM0B,EAAIC,EAAKC,IACnB/C,EAAYmB,GAAQnB,EAAYmB,IAAS,IAC/C6B,KAAKD,GACV,IAAIjB,EAAS,CACXmB,KAAMJ,EAAGK,IAAIZ,GAAOa,WACpBL,IAAKA,EAAII,IAAIZ,GAAOa,YAGI,UAAtBzE,QAAQmB,GACVA,EAAUuD,KAAK,WACbvB,EAASV,EAAMW,KAGjBD,EAASV,EAAMW,IAuBjBuB,WAnBF,SAAoBlC,GAClB,IAAK,IAAIG,KAAKtB,EAAYmB,UACjBnB,EAAYmB,GAAMG,UAGpBtB,EAAYmB,GAEO,UAAtBzC,QAAQmB,GACVA,EAAUuD,KAAK,WACbf,EAAWlB,KAGbkB,EAAWlB,MASR9B,EAGT,IAAIE,EAGF,OAAOC,EAAQ8D,WAAY,EAAM,CAC/BxD,SAAU,MACVC,KAAM,mBAJRR,EAASgE,QAAQ,kBAAmB,CAAC,WAAY,QAAS,eAAgB/D","file":"js/services/websocket-service-baogang.js","sourcesContent":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define == \"function\" && typeof require == \"function\") {\n    define(['../services/services.js'], factory);\n  } else {\n    if (global == window) {\n      global.wSocket = factory();\n    }\n  }\n})(this, function (services) {\n  'use strict';\n\n  function context($timeout, growl, serviceProxy) {\n    var ws,\n        connections = {},\n        connected,\n        wsURL = function (protocol, host) {\n      protocol = protocol || \"ws:\";\n\n      if (host) {\n        return protocol + \"//\" + host + \"/websocket/message\";\n      } else {\n        return \"wss://192.168.1.121/websocket/message\";\n      }\n    }(serviceProxy.protocol, serviceProxy.host);\n\n    function extend(a, b) {\n      for (var i in b) {\n        a[i] = b[i];\n      }\n    }\n\n    function toJSON(str) {\n      var objLike = new RegExp(\"^\\\\{.*\\\\}$\", \"g\");\n\n      if (objLike.test(str)) {\n        return JSON.parse(str);\n      } else {\n        return null;\n      }\n    }\n\n    function init(url) {\n      wsURL = url || wsURL;\n      ws = new WebSocket(wsURL);\n      connected = new Promise(function (resolve, reject) {\n        ws.onopen = function (evnt) {\n          connected = undefined;\n          resolve(\"success\");\n        };\n      });\n\n      ws.onmessage = function (evnt) {\n        var d = toJSON(evnt.data);\n        var uuid = d.uuid;\n        var ci = d.nodeId;\n        var kpi = d.kpiCode;\n        var data = d.data;\n\n        for (var i in connections[uuid]) {\n          var cb = connections[uuid][i];\n          cb(data);\n        }\n      };\n\n      ws.onclose = function (event) {\n        console.log(event);\n      };\n\n      ws.onerror = function (evnt) {\n        console.log(event);\n      };\n    }\n\n    function wSocket(url) {\n      return new wSocket.init(url);\n    }\n\n    function register(uuid, params) {\n      var webSocketVo = {\n        uuid: uuid,\n        operation: \"register\",\n        type: \"kpi\",\n        param: params\n      };\n      ws.send(JSON.stringify(webSocketVo));\n    }\n\n    function unregister(uuid) {\n      var webSocketVo = {\n        uuid: uuid,\n        operation: \"unRegister\"\n      };\n      ws.send(JSON.stringify(webSocketVo));\n    }\n\n    function getId(e) {\n      if (_typeof(e) == \"object\") {\n        return e.id;\n      } else {\n        return e;\n      }\n    }\n\n    function connect(uuid, ci, kpi, callback) {\n      var conn = connections[uuid] = connections[uuid] || [];\n      conn.push(callback);\n      var params = {\n        ciid: ci.map(getId).toString(),\n        kpi: kpi.map(getId).toString()\n      };\n\n      if (_typeof(connected) == \"object\") {\n        connected.then(function () {\n          register(uuid, params);\n        });\n      } else {\n        register(uuid, params);\n      }\n    }\n\n    function disconnect(uuid) {\n      for (var i in connections[uuid]) {\n        delete connections[uuid][i];\n      }\n\n      delete connections[uuid];\n\n      if (_typeof(connected) == \"object\") {\n        connected.then(function () {\n          unregister(uuid);\n        });\n      } else {\n        unregister(uuid);\n      }\n    }\n\n    wSocket.init = init;\n    extend(init.prototype, {\n      connect: connect,\n      disconnect: disconnect\n    });\n    return wSocket;\n  }\n\n  if (services) {\n    services.service('SwSocketBaogang', ['$timeout', 'growl', 'serviceProxy', context]);\n  } else {\n    return context(setTimeout, null, {\n      protocol: \"ws:\",\n      host: \"localhost:8082\"\n    });\n  }\n\n  ;\n});"],"sourceRoot":"/source/"}