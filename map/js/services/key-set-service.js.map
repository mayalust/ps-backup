{"version":3,"sources":["js/services/key-set-service.js"],"names":["define","services","factory","serviceProxy","rootScope","handler","condition","key","callback","result","keyObj","exec","name","class","$","window","off","on","event","$$","loadExternalJs","keyboardJS","keyCode","_locale","getKeyCodes","preventDefault","$apply","onCommandKeyWith","metaKey","ctrlKey","shiftKey","altKey","onCommandAndShiftKeyWith","offKeyWith"],"mappings":"AAAAA,OAAO,CAAC,2BAA4B,SAAUC,GAC5C,aAEAA,EAASC,QAAQ,SAAU,CAAC,eAAgB,aAAc,SAAUC,EAAcC,GAChF,IAAIF,EAAU,GAkBVG,EAAU,SAAiBC,GAC7B,OAAO,SAAUC,EAAKC,GACpB,IAhBEC,EAgBEC,EAdQ,OAFVD,EADS,eACOE,KAgBOJ,IANlB,KALA,CACLK,KAHSH,EAAO,GAIhBI,MAHQJ,EAAO,IAcbC,IACFI,EAAEC,QAAQC,IAAI,eAAiBN,EAAOE,KAAO,IAAMF,EAAOG,OAC1DC,EAAEC,QAAQE,GAAG,eAAiBP,EAAOE,KAAO,IAAMF,EAAOG,MAAO,SAAUK,GACxE,IAAWA,EAAOX,EAAPW,EAWRA,EAXeX,EAWRG,EAAOE,KAVfO,GAAGC,eAAe,CAAC,cAAe,SAAUC,GAC1C,IAAIC,EAAUD,EAAWE,QAAQC,YAAYjB,GAEzCD,EAAUY,EAAOI,KACnBJ,EAAMO,iBACNrB,EAAUsB,OAAO,WACflB,cAyBhB,OAbAN,EAAQyB,iBAAmBtB,EAAQ,SAAUa,EAAOI,GAClD,OAAyB,GAAjBJ,EAAMU,SAAoC,GAAjBV,EAAMW,UAAoBX,EAAMI,SAAWA,EAAQ,IAAwB,GAAlBJ,EAAMY,UAAqC,GAAhBZ,EAAMa,SAI7H7B,EAAQ8B,yBAA2B3B,EAAQ,SAAUa,EAAOI,GAC1D,OAAwB,GAAjBJ,EAAMU,SAAqC,GAAlBV,EAAMY,UAAoBZ,EAAMI,SAAWA,EAAQ,IAAsB,GAAhBJ,EAAMa,SAGjG7B,EAAQ+B,WAAa,SAAU1B,GAC7BO,EAAEC,QAAQC,IAAI,eAAiBT,IAG1BL","file":"js/services/key-set-service.js","sourcesContent":["define(['../services/services.js'], function (services) {\n  'use strict';\n\n  services.factory('keySet', ['serviceProxy', '$rootScope', function (serviceProxy, rootScope) {\n    var factory = {};\n\n    var separateKey = function separateKey(str) {\n      var regExp = /(\\w+).?(\\w*)/;\n      var result = regExp.exec(str);\n\n      if (result != null) {\n        var name = result[1];\n        var cls = result[2];\n        return {\n          name: name,\n          class: cls\n        };\n      } else {\n        return null;\n      }\n    };\n\n    var handler = function handler(condition) {\n      return function (key, callback) {\n        var keyObj = separateKey(key);\n\n        if (keyObj) {\n          $(window).off(\"keydown.key_\" + keyObj.name + \"_\" + keyObj.class);\n          $(window).on(\"keydown.key_\" + keyObj.name + \"_\" + keyObj.class, function (event) {\n            (function (event, key) {\n              $$.loadExternalJs([\"keyboardJS\"], function (keyboardJS) {\n                var keyCode = keyboardJS._locale.getKeyCodes(key);\n\n                if (condition(event, keyCode)) {\n                  event.preventDefault();\n                  rootScope.$apply(function () {\n                    callback();\n                  });\n                }\n              });\n            })(event, keyObj.name);\n          });\n        }\n      };\n    };\n    /**当COMMAND键与KEY同时按下时候执行*/\n\n\n    factory.onCommandKeyWith = handler(function (event, keyCode) {\n      return (event.metaKey == true || event.ctrlKey == true) && event.keyCode == keyCode[0] && event.shiftKey == false && event.altKey == false;\n    });\n    /**当COMMAND键与KEY，SHIFT三按键同时按下时候执行*/\n\n    factory.onCommandAndShiftKeyWith = handler(function (event, keyCode) {\n      return event.metaKey == true && event.shiftKey == true && event.keyCode == keyCode[0] && event.altKey == false;\n    });\n\n    factory.offKeyWith = function (key) {\n      $(window).off(\"keydown.key_\" + key);\n    };\n\n    return factory;\n  }]);\n});"],"sourceRoot":"/source/"}