{"version":3,"sources":["app-flowsheet/js/controllers/flow-process-ctrl.js"],"names":["define","controllers","keyboardJS","joint","controller","$scope","ticketLogService","ticketTaskService","workflowService","workflowDefinitionService","Info","$routeParams","$compile","$rootScope","userEnterpriseService","viewFlexService","resourceUIService","kpiDataService","SwSocket","growl","timeout","loc","paper","graph","paperScroller","stencil","selection","selectionView","commandManager","viewId","shiftHold","selectedView","backspaceHold","userGroupList","userList","userAryList","displayModeLink","arrowheadMarkup","toolMarkup","vertexMarkup","selectedItem","cell","userIds","userGroupIds","userType","bind","e","evenType","historyGo","state","workType","location","href","viewShow","scope","data","content","ticketNo","getTicket","order","code","treat","fill","finish","untreated","notExecute","i","cells","length","j","type","jQuery","extend","attrs","display","eventType","status","logType","id","workflowNodeId","desc","ticketTask","taskStatus","components","fromJSON","options","gridSize","width","height","bgimage","bgcolor","commander","setDimensions","setGrid","initialization","element","interactive","dia","Graph","Paper","perpendicularLinks","model","markAvailable","defaultLink","shapes","bpmn","Flow","validateConnection","cellViewS","magnetS","cellViewT","magnetT","end","linkView","LinkView","embeddingMode","frontParentOnly","validateEmbedding","childView","parentView","Pool","ui","PaperScroller","autoResizePaper","padding","$","append","el","scroller","layout","GridLayout","columnWidth","columns","rowHeight","resizeToFit","dy","dx","Stencil","dropAnimation","groups","search","on","render","_","each","groupName","load","getGraph","getPaper","fitToContent","Backbone","Collection","SelectionView","evt","x","y","startSelecting","cancelSelection","startPanning","cellView","ctrlKey","metaKey","Link","createSelectionBox","add","get","target","destroySelectionBox","findViewByModel","reset","without","oncontextmenu","preventDefault","contains","initBatchCommand","invoke","storeBatchCommand","is","inspector","updateCell","remove","sub","selectedTask","taskDefinitionId","split","flowOrder","Inspector","inputs","inputsList","flowStatus","k","group","label","index","textarea","class","ng-model","disabled","style","html","createInspector","openCellTools","CommandManager","undo","redo","baseWidth","baseHeight","$el","css","getGridBackgroundImage","color","canvas","context","getContext","beginPath","rect","fillStyle","toDataURL","save","val","doTask","returnObj",".body","success","save4Json","viewjson","toJSON","JSONstring","JSON","stringify","param","domainPath","name","viewContent","createTime","updateTime","saveWorkflowDefinition","err","alert","windowName","uniqueId","window","open","document","write","toFront","toBack","embed","parentCell","models","forEach","attributes","z","unembed","embeds","cellid","getCell","queryEnterpriseGroup","list","ary","groupID","push","queryEnterpriseUser","userID","userName","getTicketTaskById","returnObj1","getWorkflowById","processDefinitionId","parse","handerConfs","getHistoricActivityInstance","res","executed","arr","message","executeTime"],"mappings":"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","file":"app-flowsheet/js/controllers/flow-process-ctrl.js","sourcesContent":["define(['controllers/controllers', 'keyboardJS', 'rappid-joint'], function (controllers, keyboardJS, joint) {\n  'use strict';\n  /**\n   * 流程图编辑控制器\n   */\n\n  controllers.controller('flowProcessCtrl', ['$scope', 'ticketLogService', 'ticketTaskService', 'workflowService', 'workflowDefinitionService', 'Info', '$routeParams', '$compile', '$rootScope', 'userEnterpriseService', 'viewFlexService', 'resourceUIService', 'kpiDataService', 'SwSocket', 'growl', '$timeout', '$location', function ($scope, ticketLogService, ticketTaskService, workflowService, workflowDefinitionService, Info, $routeParams, $compile, $rootScope, userEnterpriseService, viewFlexService, resourceUIService, kpiDataService, SwSocket, growl, timeout, loc) {\n    var paper, graph, paperScroller, stencil, selection, inspector, selectionView, clipboard, commandManager, navigator;\n    var viewId = $routeParams.viewId;\n    $scope.selectedView = '';\n    var displayMode = true;\n    var shiftHold = false;\n    var backspaceHold = false;\n    $scope.userGroupList = '';\n    $scope.userList = '';\n    $scope.userAryList = '';\n    var displayModeLink = {\n      'arrowheadMarkup': '<g></g>',\n      'toolMarkup': '<g></g>',\n      'vertexMarkup': '<g></g>'\n    };\n    $scope.selectedItem = {\n      cell: null,\n      userIds: 0,\n      userGroupIds: 0,\n      userType: \"\"\n    };\n    keyboardJS.bind('shift', function (e) {\n      shiftHold = true;\n    }, function (e) {\n      shiftHold = false;\n    });\n    keyboardJS.bind('shift', null, function (e) {\n      shiftHold = false;\n    });\n    keyboardJS.bind('backspace', function (e) {\n      backspaceHold = true;\n    }, function (e) {\n      backspaceHold = false;\n    });\n    keyboardJS.bind('backspace', null, function (e) {\n      backspaceHold = false;\n    });\n    $scope.evenType = \"start\";\n    /**\n     * 获取用户\n     */\n\n    function getUser() {\n      userEnterpriseService.queryEnterpriseUser(function (returnObj) {\n        if (returnObj.code == 0) {\n          if (returnObj.data.length != 0) {\n            var list = {};\n            var ary = [];\n\n            for (var i in returnObj.data) {\n              list = {};\n              list[\"id\"] = returnObj.data[i].userID;\n              list[\"name\"] = returnObj.data[i].userName;\n              ary.push(list);\n            }\n\n            $scope.userAryList = ary;\n          } else {\n            $scope.userAryList = [];\n          }\n        }\n      });\n    }\n\n    $scope.historyGo = function () {\n      var state = $routeParams.state;\n\n      if ($scope.workType == 'task') {\n        location.href = \"index.html#/workOrderRecord/\" + state;\n      } else if ($scope.workType == 'alert') {\n        location.href = \"index.html#/configAlert\";\n      } else if ($scope.workType == 'manage') {\n        location.href = \"index.html#/workOrder/\" + state;\n      } else if ($scope.workType == 'message') {\n        location.href = \"../app-uc/index.html#/message\";\n      } else if ($scope.workType == 'read') {\n        location.href = \"../app-uc/index.html#/read\";\n      } else if ($scope.workType == 'unread') {\n        location.href = \"../app-uc/index.html#/unread\";\n      }\n    };\n    /**\n     * 获取用户组\n     */\n\n\n    function getUserGroup() {\n      userEnterpriseService.queryEnterpriseGroup(function (returnObj) {\n        if (returnObj.code == 0) {\n          if (returnObj.data.length != 0) {\n            var list = {};\n            var ary = [];\n\n            for (var i in returnObj.data) {\n              list[\"id\"] = returnObj.data[i].groupID;\n              list[\"name\"] = returnObj.data[i].groupName;\n              ary.push(list);\n            }\n\n            $scope.userGroupList = ary;\n          } else {\n            $scope.userGroupList = [];\n          }\n        }\n      });\n    }\n\n    $scope.viewShow = function (scope, data, content, ticketNo) {\n      ticketTaskService.getTicket(ticketNo, function (order) {\n        if (order.code == 0) {\n          var treat = {\n            \"fill\": \"#ff8040\" //正在执行的工单任务颜色\n\n          };\n          var finish = {\n            \"fill\": \"#13c865\" //执行完成的工单任务颜色\n\n          };\n          var untreated = {\n            \"fill\": \"#ffff00\" //未处理的工单任务颜色\n\n          };\n          var notExecute = {\n            \"fill\": \"#cccccc\" //不会执行的工单任务颜色\n\n          };\n\n          for (var i = content.cells.length - 1; i > -1; i--) {\n            if (content.cells[i].type == \"bpmn.Flow\") {\n              jQuery.extend(content.cells[i], displayModeLink);\n              content.cells[i].attrs['.connection-wrap'] = {\n                display: 'none'\n              };\n            }\n\n            if (content.cells[i].eventType == \"end\") {\n              if (order.data.status == 200) {\n                content.cells[i].attrs['.body'] = finish;\n              }\n            }\n\n            for (var j in data) {\n              if (data[j].logType == 'userTask') {\n                if (content.cells[i].id == data[j].workflowNodeId) {\n                  content.cells[i]['desc'] = data[j].desc;\n\n                  if (data[j].ticketTask.taskStatus == 100) {\n                    content.cells[i].attrs['.body'] = treat;\n                    break;\n                  } else if (data[j].ticketTask.taskStatus == 200) {\n                    content.cells[i].attrs['.body'] = finish;\n                    break;\n                  } else if (data[j].ticketTask.taskStatus == 10) {\n                    content.cells[i].attrs['.body'] = untreated;\n                    break;\n                  }\n                }\n              } else if (data[j].logType == 'startEvent') {\n                if (content.cells[i].id == data[j].workflowNodeId) {\n                  content.cells[i].attrs['.body'] = finish;\n                  break;\n                }\n              } else if (data[j].logType == 'exclusiveGateway') {\n                if (content.cells[i].id == data[j].workflowNodeId) {\n                  content.cells[i].attrs['.body'] = finish;\n                  break;\n                }\n              } else if (data[j].logType == 'serviceTask') {\n                if (content.cells[i].id == data[j].workflowNodeId) {\n                  content.cells[i].attrs['.body'] = finish;\n                  break;\n                }\n              } else if (data[j].logType == 'notExecute') {\n                if (content.cells[i].id == data[j].workflowNodeId) {\n                  content.cells[i].attrs['.body'] = notExecute;\n                  break;\n                }\n              }\n            }\n          }\n\n          scope.components.graph.fromJSON(content);\n          scope.components.paper.options.gridSize = content.gridSize;\n          scope.components.paper.options.width = content.width;\n          scope.components.paper.options.height = content.height;\n          scope.data.bgimage = content.bgimage;\n          scope.data.bgcolor = content.bgcolor;\n          scope.data.width = content.width;\n          scope.data.height = content.height;\n          scope.components.commander.setDimensions();\n          scope.components.commander.setGrid();\n        }\n      });\n    };\n\n    var showViewContent = function showViewContent(scope, viewId) {\n      //根据任务id查任务详情\n      ticketTaskService.getTicketTaskById(viewId, function (returnObj1) {\n        if (returnObj1.code == 0) {\n          scope.selectedTask = returnObj1.data; //通过流程id查流程任务详情\n\n          workflowService.getWorkflowById(returnObj1.data.processDefinitionId, function (returnObj) {\n            if (returnObj.code == 0) {\n              scope.selectedView = returnObj.data;\n              scope.data.viewContent = $scope.selectedView.viewContent;\n\n              if (returnObj.data.viewContent) {\n                var content = JSON.parse(returnObj.data.viewContent);\n                var len = returnObj.data.handerConfs.length;\n                ticketLogService.getHistoricActivityInstance(returnObj1.data.ticketNo, function (res) {\n                  if (res.code == 0 && res.data != \"\" && res.data != null) {\n                    var notExecute = res.data.notExecute; //不会执行的节点（背景为灰色）\n\n                    var executed = res.data.executed; //已经执行过的节点（背景为绿色）\n\n                    if (notExecute && notExecute.length > 0) {\n                      for (var i in notExecute) {\n                        var arr = {\n                          \"id\": 0,\n                          \"ticketNo\": \"\",\n                          \"message\": \"\",\n                          \"executeTime\": \"\",\n                          \"logType\": \"notExecute\",\n                          \"ticketTask\": \"\",\n                          \"workflowNodeId\": \"\"\n                        };\n                        arr.workflowNodeId = notExecute[i];\n                        executed.push(arr);\n                      }\n                    } //console.log(\"executed==\"+JSON.stringify(executed));\n\n\n                    $scope.viewShow(scope, executed, content, returnObj1.data.ticketNo);\n                  }\n                });\n              }\n            }\n          });\n        }\n      });\n    };\n\n    $scope.initialization = [function initializePaper(scope, element) {\n      var interactive = false;\n\n      if (!displayMode) {\n        interactive = true;\n      }\n\n      graph = new joint.dia.Graph({\n        type: 'bpmn'\n      });\n      paper = new joint.dia.Paper({\n        width: 1200,\n        height: 700,\n        gridSize: 10,\n        perpendicularLinks: true,\n        model: graph,\n        markAvailable: true,\n        interactive: interactive,\n        defaultLink: new joint.shapes.bpmn.Flow(),\n        validateConnection: function validateConnection(cellViewS, magnetS, cellViewT, magnetT, end, linkView) {\n          // don't allow loop links\n          if (cellViewS == cellViewT) return false;\n          var view = end === 'target' ? cellViewT : cellViewS; // don't allow link to link connection\n\n          if (view instanceof joint.dia.LinkView) return false;\n          return true;\n        },\n        embeddingMode: true,\n        frontParentOnly: false,\n        validateEmbedding: function validateEmbedding(childView, parentView) {\n          var Pool = joint.shapes.bpmn.Pool;\n          return parentView.model instanceof Pool && !(childView.model instanceof Pool);\n        }\n      });\n      paperScroller = new joint.ui.PaperScroller({\n        paper: paper,\n        autoResizePaper: true,\n        padding: 0\n      });\n      $('#paper-container1', element).append(paperScroller.el);\n      scope.components.paper = paper;\n      scope.components.scroller = paperScroller;\n      scope.components.graph = graph;\n    }, // 创建模板\n    function initializeStencil(scope, element) {\n      function layout(graph) {\n        joint.layout.GridLayout.layout(graph, {\n          columnWidth: stencil.options.width / 2 - 10,\n          columns: 2,\n          rowHeight: 80,\n          resizeToFit: true,\n          dy: 10,\n          dx: 10\n        });\n      }\n\n      stencil = new joint.ui.Stencil({\n        graph: graph,\n        paper: paper,\n        width: 230,\n        dropAnimation: true,\n        groups: scope.data.stencil.groups,\n        search: scope.data.stencil.search\n      }).on('filter', layout);\n      $('.stencil-container', element).append(stencil.render().el);\n\n      _.each(scope.data.stencil.shapes, function (shapes, groupName) {\n        stencil.load(shapes, groupName);\n        layout(stencil.getGraph(groupName));\n        stencil.getPaper(groupName).fitToContent(1, 1, 10);\n      });\n\n      scope.components.stencil = stencil;\n    }, // 创建选择\n    function initializeSelection(scope, element) {\n      selection = new Backbone.Collection();\n      selectionView = new joint.ui.SelectionView({\n        paper: paper,\n        graph: graph,\n        model: selection\n      }); // Initiate selecting when the user grabs the blank area of the paper while the Shift key is pressed.\n      // 当shift键被按下时，启动用户在页面的空白区域时开始选择。\n      // Otherwise, initiate paper pan.\n      // 否则，页面默认功能\n\n      paper.on('blank:pointerdown', function (evt, x, y) {\n        //          if(_.contains(keyboardJS.getContext(), 'shift')) {\n        if (shiftHold) {\n          selectionView.startSelecting(evt, x, y);\n        } else {\n          selectionView.cancelSelection();\n          paperScroller.startPanning(evt, x, y);\n        }\n      });\n      paper.on('cell:pointerdown', function (cellView, evt) {\n        // Select an element if CTRL/Meta key is pressed while the element is clicked.\n        // 如果Ctrl /Meta 键是被按下，当元素被点击时，添加到selectionBox中\n        if ((evt.ctrlKey || evt.metaKey) && !(cellView.model instanceof joint.dia.Link)) {\n          selectionView.createSelectionBox(cellView);\n          selection.add(cellView.model);\n        }\n      });\n      selectionView.on('selection-box:pointerdown', function (evt) {\n        // Unselect an element if the CTRL/Meta key is pressed while a selected element is clicked.\n        // 取消之前的效果\n        if (evt.ctrlKey || evt.metaKey) {\n          var cell = selection.get($(evt.target).data('model'));\n          selectionView.destroySelectionBox(paper.findViewByModel(cell));\n          selection.reset(selection.without(cell));\n        }\n      }); // Disable context menu inside the paper.\n      // 取消HTML默认页面菜单\n      // This prevents from context menu being shown when selecting individual elements with Ctrl in OS X.\n\n      paper.el.oncontextmenu = function (evt) {\n        evt.preventDefault();\n      };\n\n      keyboardJS.on('delete, backspace', function (evt) {\n        if (!$.contains(evt.target, paper.el)) {\n          // remove selected elements from the paper only if the target is the paper\n          return;\n        }\n\n        commandManager.initBatchCommand();\n        selection.invoke('remove');\n        commandManager.storeBatchCommand();\n        selectionView.cancelSelection();\n\n        if (backspaceHold && !$(evt.target).is(\"input, textarea\")) {\n          // Prevent Backspace from navigating back.\n          evt.preventDefault();\n        }\n      });\n    }, // 元素控制器，自由转换和属性\n    function initializeHaloAndInspector(scope, element) {\n      var inspector;\n      var $inspectorHolder = $('.inspector-container', element);\n\n      function createInspector(cellView) {\n        scope.components.cellView = cellView; // No need to re-render inspector if the cellView didn't change.\n        //if (!inspector || inspector.options.cellView !== cellView) {\n\n        if (inspector) {\n          // Set unsaved changes to the model and clean up the old inspector if there was one.\n          inspector.updateCell();\n          inspector.remove();\n        }\n\n        var sub = scope.selectedTask.taskDefinitionId.split('id');\n        var em = scope.data.flowOrder;\n\n        if (cellView.model.id == sub[1] && scope.selectedTask.taskStatus != 200) {\n          inspector = new joint.ui.Inspector({\n            inputs: $scope.inputsList,\n            cellView: cellView\n          });\n        } else {\n          var flowStatus = \"\";\n\n          for (var k in scope.data.flowOrder) {\n            var taskDefinitionId = scope.data.flowOrder[k].taskDefinitionId.split('id');\n\n            if (cellView.model.id == taskDefinitionId[1]) {\n              flowStatus = 1;\n              break;\n            }\n          }\n\n          if (flowStatus == 1) {\n            inspector = new joint.ui.Inspector({\n              inputs: {\n                desc: {\n                  type: 'textarea',\n                  group: '属性',\n                  label: '处理记录',\n                  index: 1,\n                  attrs: {\n                    textarea: {\n                      class: 'form-control input-sm',\n                      'ng-model': 'selectedTask.desc',\n                      disabled: \"disabled\",\n                      style: 'height: 100px;'\n                    }\n                  }\n                }\n              },\n              cellView: cellView\n            });\n          } else {\n            inspector = new joint.ui.Inspector({\n              cellView: cellView\n            });\n          }\n        }\n\n        $('.inspector-container').html(inspector.render().el); //}\n      }\n\n      paper.on('cell:pointerup', function (cellView) {\n        createInspector(cellView);\n      });\n      paper.on('link:options', function (evt, cellView, x, y) {\n        openCellTools(cellView);\n      });\n    }, function initializeCommandManager(scope, element) {\n      commandManager = new joint.dia.CommandManager({\n        graph: graph\n      });\n      keyboardJS.on('ctrl + z', function () {\n        commandManager.undo();\n        selectionView.cancelSelection();\n      });\n      keyboardJS.on('ctrl + y', function () {\n        commandManager.redo();\n        selectionView.cancelSelection();\n      });\n      scope.components.commander = commandManager;\n\n      scope.components.commander.setDimensions = function () {\n        paper.setDimensions(paper.options.width, paper.options.height);\n        paperScroller.options.baseWidth = paper.options.width;\n        paperScroller.options.baseHeight = paper.options.height;\n        paperScroller.$el.css('padding-top', 0);\n      };\n\n      scope.components.commander.setGrid = function () {\n        var gridSize = paper.options.gridSize;\n        var backgroundImage = getGridBackgroundImage(gridSize);\n\n        if (scope.data.bgcolor) {\n          paper.$el.css('background-color', scope.data.bgcolor);\n        } else {\n          paper.$el.css('background-color', \"#fff\");\n        }\n\n        if (scope.data.bgimage) {\n          if (!displayMode) {\n            paper.$el.css('background-image', 'url(\"' + backgroundImage + '\"),url(\"' + scope.data.bgimage + '\")');\n          } else {\n            paper.$el.css('background-image', 'url(\"\"),url(\"' + scope.data.bgimage + '\")');\n            paper.$el.css('margin-right', 0);\n          }\n        } else {\n          if (!displayMode) {\n            paper.$el.css('background-image', 'url(\"' + backgroundImage + '\")');\n          } else {\n            paper.$el.css('background-image', 'url(\"\"),url(\"\")');\n            paper.$el.css('margin-right', 0);\n          }\n        }\n      };\n\n      var getGridBackgroundImage = function getGridBackgroundImage(gridSize, color) {\n        var canvas = $('<canvas/>', {\n          width: gridSize,\n          height: gridSize\n        });\n        canvas[0].width = gridSize;\n        canvas[0].height = gridSize;\n        var context = canvas[0].getContext('2d');\n        context.beginPath();\n        context.rect(1, 1, 1, 1);\n        context.fillStyle = color || '#AAAAAA';\n        context.fill();\n        return canvas[0].toDataURL('image/png');\n      };\n\n      scope.components.commander.save = function (status) {\n        scope.selectedTask.taskStatus = status;\n        scope.selectedTask.desc = $(\"textarea\").val();\n        ticketTaskService.doTask(scope.selectedTask, function (returnObj) {\n          if (returnObj.code == 0) {\n            if (status == 100) {\n              var inspector = new joint.ui.Inspector({\n                inputs: {\n                  attrs: {\n                    '.body': {\n                      fill: 'red'\n                    }\n                  }\n                },\n                cellView: scope.components.cellView\n              });\n              $('.inspector-container').html(inspector.render().el);\n              growl.success(\"任务已确认\", {});\n            } else if (status == 200) {\n              growl.success(\"任务已完成\", {});\n              location.href = \"../app-oc/index.html#/workorderrecord\";\n            }\n          } else {\n            growl.success(\"任务操作失败\", {});\n          }\n        }); // }\n      };\n\n      scope.components.commander.save4Json = function () {\n        var viewjson = graph.toJSON();\n        viewjson.gridSize = paper.options.gridSize;\n        viewjson.width = paper.options.width;\n        viewjson.height = paper.options.height;\n        viewjson.bgimage = scope.data.bgimage;\n        viewjson.bgcolor = scope.data.bgcolor;\n        var JSONstring = JSON.stringify(viewjson);\n\n        try {\n          var param = {\n            id: scope.selectedView.id,\n            domainPath: \"\",\n            name: scope.selectedView.name,\n            desc: scope.selectedView.desc,\n            viewContent: JSONstring,\n            createTime: scope.selectedView.createTime,\n            updateTime: scope.selectedView.updateTime\n          };\n\n          if (param.viewId == 0) {\n            workflowDefinitionService.saveWorkflowDefinition(param, function (returnObj) {\n              if (returnObj.code == 0) {\n                growl.success(\"保存成功\");\n              }\n            });\n          } else {\n            workflowDefinitionService.saveWorkflowDefinition(param, function (returnObj) {\n              if (returnObj.code == 0) {\n                growl.success(\"保存成功\");\n              }\n            });\n          }\n        } catch (err) {\n          alert(err);\n        }\n      };\n\n      scope.components.commander.toJSON = function () {\n        var windowFeatures = 'menubar=no,location=no,resizable=yes,scrollbars=yes,status=no';\n\n        var windowName = _.uniqueId('json_output');\n\n        var jsonWindow = window.open('', windowName, windowFeatures);\n        jsonWindow.document.write(JSON.stringify(graph.toJSON()));\n      };\n\n      scope.components.commander.toFront = function () {\n        selection.invoke('toFront');\n      };\n\n      scope.components.commander.toBack = function () {\n        selection.invoke('toBack');\n      };\n\n      scope.components.commander.embed = function () {\n        var parentCell;\n        selectionView.model.models.forEach(function (cell) {\n          if (!parentCell) {\n            parentCell = cell;\n          } else {\n            if (parentCell.attributes.z > cell.attributes.z) {\n              parentCell = cell;\n            }\n          }\n        });\n        selectionView.model.models.forEach(function (cell) {\n          if (parentCell.id != cell.id) {\n            parentCell.embed(cell);\n          }\n        });\n      };\n\n      scope.components.commander.unembed = function () {\n        selectionView.model.models.forEach(function (cell) {\n          if (cell.attributes.embeds) {\n            cell.attributes.embeds.forEach(function (cellid) {\n              cell.unembed(graph.getCell(cellid));\n            });\n          }\n        });\n      };\n    }, function initView(scope, element) {\n      getUserGroup();\n      getUser();\n      showViewContent(scope, viewId); //$scope.evenTypeChange();\n    }];\n  }]);\n});"],"sourceRoot":"/source/"}