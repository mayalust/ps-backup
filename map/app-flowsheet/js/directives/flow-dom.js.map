{"version":3,"sources":["app-flowsheet/js/directives/flow-dom.js"],"names":["define","directives","directive","restrict","templateUrl","location","hash","search","replace","scope","title","source","controller","$scope","Info","CommonInspectorGroups","data","label","index","text","presentation","geometry","CommonInputs","startExpression","type","group","attrs","input","class","endExpression","size","width","min","max","height","position","x","y","InputDefs","font-size","unit","font-family","options","select","font-weight","step","defaultValue","fill","opacity","stroke","stroke-width","ref-x","data-tooltip","ref-y","ref-dx","ref-dy","dx","dy","stroke-dasharray","rx","ry","xlink:href","inp","defs","ret","_","each","def","attr","extend","InspectorDefs","bpmn.Flow","inputs",".connection",".marker-source","transform","valueRegExp",".marker-target","smooth","manhattan","labels","item","properties","conditionExpression","processMonitors","name","eventType","value","content","adviceType","groups","connection","marker-source","marker-target","bpmn.Gateway","icon",".body/fill","bpmn.Activity","ng-model","activityType","subProcess","rect","templateURL","userType","roleIds","ng-show","ng-options","userIds","userExpression","userGroupIds","taskType","attributeDefinitions","dataType","object","bpmn.Event","bpmn.Annotation","textarea",".body/fill-opacity","bpmn.Pool","lanes","style","sublanes",".header/fill",".lane-body/fill",".lane-header/fill","bpmn.Group",".label/text",".label-rect/fill","bpmn.Conversation","conversationType","bpmn.Choreography","participants","initiatingParticipant",".participant-rect/fill","bpmn.DataObject","bpmn.Message","get","stencil","bgimages","fillType","components","commonInspectorGroups","inspectorDefs","link","element","unbindOnData","$watch","invoke","$parent","initialization","window"],"mappings":"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","file":"app-flowsheet/js/directives/flow-dom.js","sourcesContent":["define(['directives/directives'], function (directives) {\n  'use strict';\n\n  directives.directive('flowid', [function () {\n    return {\n      restrict: 'E',\n      templateUrl: function templateUrl() {\n        //return 'partials/flowEdit.html';\n        return location.hash.search(\"#/flow\") > -1 ? 'partials/flowEdit.html' : 'partials/flow-display.html';\n      },\n      replace: true,\n      scope: {\n        title: '@',\n        source: '@'\n      },\n      controller: ['$scope', 'Info', function ($scope, Info) {\n        //通用的属性组\n        var CommonInspectorGroups = {\n          data: {\n            label: '属性',\n            index: 1\n          },\n          text: {\n            label: '内容',\n            index: 2\n          },\n          presentation: {\n            label: '背景',\n            index: 3\n          },\n          geometry: {\n            label: '外观设置',\n            index: 4\n          }\n        };\n        var CommonInputs = {\n          startExpression: {\n            type: 'text',\n            label: '开始表达式',\n            group: 'data',\n            attrs: {\n              input: {\n                class: 'form-control input-sm'\n              }\n            },\n            index: 3\n          },\n          endExpression: {\n            type: 'text',\n            label: '结束表达式',\n            group: 'data',\n            attrs: {\n              input: {\n                class: 'form-control input-sm'\n              }\n            },\n            index: 3\n          },\n          size: {\n            width: {\n              type: 'number',\n              min: 1,\n              max: 500,\n              group: 'geometry',\n              label: 'width',\n              index: 2,\n              attrs: {\n                input: {\n                  class: 'form-control input-sm'\n                }\n              }\n            },\n            height: {\n              type: 'number',\n              min: 1,\n              max: 500,\n              group: 'geometry',\n              label: 'height',\n              index: 2,\n              attrs: {\n                input: {\n                  class: 'form-control input-sm'\n                }\n              }\n            }\n          },\n          position: {\n            x: {\n              type: 'number',\n              min: 1,\n              max: 2000,\n              group: 'geometry',\n              label: 'x',\n              index: 3,\n              attrs: {\n                input: {\n                  class: 'form-control input-sm'\n                }\n              }\n            },\n            y: {\n              type: 'number',\n              min: 1,\n              max: 2000,\n              group: 'geometry',\n              label: 'y',\n              index: 4,\n              attrs: {\n                input: {\n                  class: 'form-control input-sm'\n                }\n              }\n            }\n          }\n        }; //输入的定义\n\n        var InputDefs = {\n          'text': {\n            type: 'text',\n            label: '文本(text)',\n            attrs: {\n              input: {\n                class: 'form-control input-sm'\n              }\n            }\n          },\n          'font-size': {\n            type: 'range',\n            min: 5,\n            max: 80,\n            unit: 'px',\n            label: '字体大小(font-size)'\n          },\n          'font-family': {\n            type: 'select',\n            options: ['Source Sans Pro', 'Helvetica Neue', 'Luxi Sans', 'DejaVu Sans', 'Tahoma', 'Hiragino Sans GB', 'Microsoft YaHei', 'sans-serif'],\n            label: '字体系列(font-family)',\n            attrs: {\n              'select': {\n                class: 'form-control input-sm'\n              }\n            }\n          },\n          'font-weight': {\n            type: 'range',\n            min: 100,\n            max: 900,\n            step: 100,\n            defaultValue: 400,\n            label: '字体粗细(font-weight)'\n          },\n          'fill': {\n            type: 'color',\n            label: '填充颜色(fill)'\n          },\n          'opacity': {\n            type: 'range',\n            min: 0,\n            max: 1,\n            step: .1,\n            defaultValue: 1,\n            unit: '',\n            label: '透明度(opacity)'\n          },\n          'stroke': {\n            type: 'color',\n            defaultValue: '#000000',\n            label: '边框颜色(stroke)'\n          },\n          'stroke-width': {\n            type: 'range',\n            min: 0,\n            max: 5,\n            step: .5,\n            defaultValue: 0,\n            unit: 'px',\n            label: '边框宽度(stroke-width)'\n          },\n          'ref-x': {\n            type: 'number',\n            defaultValue: 0.5,\n            step: .01,\n            label: '水平对齐(Horizontal alignment)',\n            attrs: {\n              input: {\n                class: 'form-control input-sm',\n                'data-tooltip': '0-0.99按照百分比设置<br>大于等于1,小于0时，按照PX设置'\n              }\n            }\n          },\n          'ref-y': {\n            type: 'number',\n            defaultValue: 0.5,\n            step: .01,\n            label: '垂直对齐(Vertical alignment)',\n            attrs: {\n              input: {\n                class: 'form-control input-sm',\n                'data-tooltip': '0-0.99按照百分比设置<br>大于等于1,小于0时，按照PX设置'\n              }\n            }\n          },\n          'ref-dx': {\n            type: 'range',\n            min: -100,\n            max: 100,\n            step: 1,\n            defaultValue: 0,\n            label: '水平位移(Horizontal offset)'\n          },\n          'ref-dy': {\n            type: 'number',\n            defaultValue: 20,\n            step: 1,\n            label: '垂直位移(Vertical offset)',\n            attrs: {\n              input: {\n                class: 'form-control input-sm'\n              }\n            }\n          },\n          'dx': {\n            type: 'range',\n            min: -100,\n            max: 100,\n            step: 1,\n            defaultValue: 0,\n            label: '水平距离(Horizontal distance)'\n          },\n          'dy': {\n            type: 'range',\n            min: -100,\n            max: 100,\n            step: 1,\n            defaultValue: 0,\n            label: '垂直距离(Vertical distance)'\n          },\n          'stroke-dasharray': {\n            type: 'select',\n            options: ['0', '1', '5,5', '5,10', '10,5', '3,5', '5,1', '15,10,5,10,15'],\n            label: '边框虚线(stroke-dasharray)',\n            attrs: {\n              'select': {\n                class: 'form-control input-sm'\n              }\n            }\n          },\n          'rx': {\n            type: 'range',\n            min: 0,\n            max: 30,\n            defaultValue: 1,\n            unit: 'px',\n            label: 'X轴半径(X-axis radius)'\n          },\n          'ry': {\n            type: 'range',\n            min: 0,\n            max: 30,\n            defaultValue: 1,\n            unit: 'px',\n            label: 'Y轴半径(Y-axis radius)'\n          },\n          'xlink:href': {\n            type: 'text',\n            label: '(图片路径)Image URL',\n            attrs: {\n              input: {\n                class: 'form-control input-sm'\n              }\n            }\n          }\n        };\n\n        function inp(defs) {\n          var ret = {};\n\n          _.each(defs, function (def, attr) {\n            ret[attr] = _.extend({}, InputDefs[attr], def);\n          });\n\n          return ret;\n        } //定义每个组件右侧展示内容\n\n\n        var InspectorDefs = {\n          'bpmn.Flow': {\n            inputs: {\n              attrs: {\n                '.connection': {\n                  'stroke-width': {\n                    type: 'range',\n                    min: 0,\n                    max: 50,\n                    defaultValue: 1,\n                    unit: 'px',\n                    group: 'connection',\n                    label: '笔画宽度',\n                    index: 1\n                  },\n                  'stroke': {\n                    type: 'color',\n                    group: 'connection',\n                    label: '笔画颜色',\n                    index: 2\n                  },\n                  'stroke-dasharray': {\n                    type: 'select',\n                    options: ['0', '1', '5,5', '5,10', '10,5', '5,1', '15,10,5,10,15'],\n                    group: 'connection',\n                    label: '画线',\n                    index: 3,\n                    attrs: {\n                      'select': {\n                        'class': 'form-control input-sm'\n                      }\n                    }\n                  }\n                },\n                '.marker-source': {\n                  transform: {\n                    type: 'range',\n                    min: 0,\n                    max: 15,\n                    unit: 'x scale',\n                    defaultValue: 'scale(1)',\n                    valueRegExp: '(scale\\\\()(.*)(\\\\))',\n                    group: 'marker-source',\n                    label: '源箭头大小',\n                    index: 1\n                  },\n                  fill: {\n                    type: 'color',\n                    group: 'marker-source',\n                    label: '源箭头的颜色',\n                    index: 2\n                  }\n                },\n                '.marker-target': {\n                  transform: {\n                    type: 'range',\n                    min: 0,\n                    max: 15,\n                    unit: 'x scale',\n                    defaultValue: 'scale(1)',\n                    valueRegExp: '(scale\\\\()(.*)(\\\\))',\n                    group: 'marker-target',\n                    label: '目标箭头大小',\n                    index: 1\n                  },\n                  fill: {\n                    type: 'color',\n                    group: 'marker-target',\n                    label: '目标箭头的颜色',\n                    index: 2\n                  }\n                }\n              },\n              smooth: {\n                type: 'toggle',\n                group: 'connection',\n                index: 4\n              },\n              manhattan: {\n                type: 'toggle',\n                group: 'connection',\n                index: 5\n              },\n              labels: {\n                type: 'list',\n                group: 'labels',\n                label: '标签',\n                attrs: {\n                  label: {\n                    'data-tooltip': '为线条设置标签'\n                  }\n                },\n                item: {\n                  type: 'object',\n                  properties: {\n                    position: {\n                      type: 'range',\n                      min: 0.1,\n                      max: .9,\n                      step: .1,\n                      defaultValue: .5,\n                      label: '位置',\n                      index: 2,\n                      attrs: {\n                        label: {\n                          'data-tooltip': '相对于源的标签位置'\n                        }\n                      }\n                    },\n                    attrs: {\n                      text: {\n                        text: {\n                          type: 'text',\n                          label: '内容',\n                          defaultValue: 'label',\n                          index: 1,\n                          attrs: {\n                            input: {\n                              class: 'form-control input-sm'\n                            },\n                            label: {\n                              'data-tooltip': '设置标签内容'\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              },\n              conditionExpression: {\n                type: 'text',\n                label: '条件表达式',\n                group: 'data',\n                attrs: {\n                  input: {\n                    class: 'form-control input-sm'\n                  }\n                },\n                index: 3\n              },\n              processMonitors: {\n                type: 'list',\n                group: 'data',\n                label: '通知方式',\n                item: {\n                  type: 'object',\n                  properties: {\n                    name: {\n                      type: 'text',\n                      group: 'data',\n                      index: 4,\n                      label: '通知标题',\n                      attrs: {\n                        'input': {\n                          'class': 'form-control input-sm'\n                        }\n                      }\n                    },\n                    eventType: {\n                      type: 'select',\n                      group: 'data',\n                      index: 4,\n                      label: '执行方式',\n                      options: [{\n                        value: 'start',\n                        content: '开始时执行'\n                      }, {\n                        value: 'end',\n                        content: '结束时执行'\n                      }],\n                      attrs: {\n                        'select': {\n                          'class': 'form-control input-sm'\n                        }\n                      }\n                    },\n                    adviceType: {\n                      type: 'select',\n                      group: 'data',\n                      index: 4,\n                      label: '发送方式',\n                      options: [{\n                        value: 'message',\n                        content: '短信'\n                      }, {\n                        value: 'email',\n                        content: '邮件'\n                      }],\n                      attrs: {\n                        'select': {\n                          'class': 'form-control input-sm'\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            groups: {\n              data: {\n                label: '属性',\n                index: 1\n              },\n              labels: {\n                label: '标签',\n                index: 2\n              },\n              'connection': {\n                label: '连接点',\n                index: 3\n              },\n              'marker-source': {\n                label: '标记',\n                index: 4\n              },\n              'marker-target': {\n                label: '目标标记',\n                index: 5\n              }\n            }\n          },\n          'bpmn.Gateway': {\n            inputs: _.extend({\n              icon: {\n                type: 'select',\n                options: [{\n                  value: 'none',\n                  content: '默认'\n                }, {\n                  value: 'cross',\n                  content: '排除'\n                }, {\n                  value: 'circle',\n                  content: '包含'\n                }, {\n                  value: 'plus',\n                  content: '平行'\n                }],\n                attrs: {\n                  'select': {\n                    'class': 'form-control input-sm'\n                  }\n                },\n                label: '展示类型',\n                group: 'text',\n                index: 2\n              },\n              attrs: {\n                text: inp({\n                  text: {\n                    group: 'text',\n                    index: 1\n                  },\n                  'font-size': {\n                    group: 'text',\n                    index: 2\n                  },\n                  'font-family': {\n                    group: 'text',\n                    index: 3\n                  },\n                  'font-weight': {\n                    group: 'text',\n                    index: 4\n                  },\n                  fill: {\n                    group: 'text',\n                    index: 5\n                  },\n                  opacity: {\n                    group: 'text',\n                    index: 6\n                  },\n                  stroke: {\n                    group: 'text',\n                    index: 7\n                  },\n                  'stroke-width': {\n                    group: 'text',\n                    index: 8\n                  },\n                  'ref-x': {\n                    group: 'text',\n                    index: 9\n                  },\n                  'ref-y': {\n                    group: 'text',\n                    index: 10\n                  }\n                }),\n                '.body/fill': {\n                  type: 'color',\n                  label: '主体颜色',\n                  group: 'geometry',\n                  index: 1\n                }\n              }\n            }, CommonInputs)\n          },\n          'bpmn.Activity': {\n            inputs: _.extend({\n              content: {\n                type: 'text',\n                label: '文本(text)',\n                group: 'data',\n                index: 1,\n                attrs: {\n                  input: {\n                    class: 'form-control input-sm',\n                    'ng-model': 'selectedItem.content'\n                  }\n                }\n              },\n              activityType: {\n                type: 'select',\n                options: [{\n                  value: 'task',\n                  content: '任务'\n                }, {\n                  value: 'transaction',\n                  content: '变换'\n                }, {\n                  value: 'event-sub-process',\n                  content: '二级任务'\n                }, {\n                  value: 'call-activity',\n                  content: '激活'\n                }],\n                attrs: {\n                  'select': {\n                    'class': 'form-control input-sm'\n                  }\n                },\n                label: '类型',\n                group: 'text',\n                index: 3\n              },\n              subProcess: {\n                type: 'toggle',\n                label: '二级步骤',\n                group: 'text',\n                index: 4\n              },\n              attrs: {\n                '.body/fill': {\n                  type: 'color',\n                  label: '主体颜色',\n                  group: 'presentation',\n                  index: 1\n                },\n                rect: inp({\n                  opacity: {\n                    group: 'presentation',\n                    index: 2\n                  }\n                })\n              },\n              templateURL: {\n                type: 'text',\n                label: '模板地址',\n                group: 'data',\n                attrs: {\n                  input: {\n                    class: 'form-control input-sm'\n                  }\n                },\n                index: 5\n              },\n              userType: {\n                type: 'select',\n                group: 'data',\n                index: 2,\n                label: '处理类型',\n                options: [{\n                  value: '',\n                  content: '请选择'\n                }, {\n                  value: 'user',\n                  content: '用户'\n                }, {\n                  value: 'userGroup',\n                  content: '用户组'\n                }, {\n                  value: 'role',\n                  content: '角色'\n                }, {\n                  value: 'expression',\n                  content: '表达式'\n                }],\n                attrs: {\n                  'select': {\n                    'class': 'form-control input-sm',\n                    //'ng-show': 'selectedItem.taskType != \"2\"',\n                    'ng-model': 'selectedItem.userType'\n                  },\n                  'label': {//'ng-show': 'selectedItem.taskType != \"2\"'\n                  }\n                }\n              },\n              roleIds: {\n                type: 'select',\n                group: 'data',\n                index: 3,\n                label: '处理角色',\n                attrs: {\n                  'select': {\n                    'class': 'form-control input-sm',\n                    'ng-model': 'selectedItem.roleIds',\n                    'ng-show': 'selectedItem.userType == \"role\"',\n                    'ng-options': 'value.id as value.name for value in userRoleList'\n                  },\n                  'label': {\n                    'ng-show': 'selectedItem.userType == \"role\"'\n                  }\n                }\n              },\n              userIds: {\n                type: 'select',\n                group: 'data',\n                index: 3,\n                label: '处理用户',\n                attrs: {\n                  'select': {\n                    'class': 'form-control input-sm',\n                    'ng-model': 'selectedItem.userIds',\n                    'ng-show': 'selectedItem.userType == \"user\"',\n                    'ng-options': 'value.id as value.name for value in userAryList'\n                  },\n                  'label': {\n                    'ng-show': 'selectedItem.userType == \"user\"'\n                  }\n                }\n              },\n              userExpression: {\n                type: 'text',\n                group: 'data',\n                index: 3,\n                label: '用户表达式',\n                attrs: {\n                  'input': {\n                    'class': 'form-control input-sm',\n                    'ng-show': 'selectedItem.userType == \"expression\"'\n                  },\n                  'label': {\n                    'ng-show': 'selectedItem.userType == \"expression\"'\n                  }\n                }\n              },\n              userGroupIds: {\n                type: 'select',\n                group: 'data',\n                index: 3,\n                label: '处理用户组',\n                attrs: {\n                  'select': {\n                    'class': 'form-control input-sm',\n                    'ng-model': 'selectedItem.userGroupIds',\n                    'ng-show': 'selectedItem.userType == \"userGroup\"',\n                    'ng-options': 'value.id as value.name for value in userGroupList'\n                  },\n                  'label': {\n                    'ng-show': 'selectedItem.userType == \"userGroup\"'\n                  }\n                }\n              },\n              taskType: {\n                type: 'select',\n                label: '任务类型',\n                group: 'data',\n                options: [{\n                  value: 'user',\n                  content: '用户任务'\n                }, {\n                  value: 'service',\n                  content: '服务任务'\n                }],\n                attrs: {\n                  'select': {\n                    'class': 'form-control input-sm',\n                    'ng-show': 'selectedItem.userType == \"999\"',\n                    'ng-model': 'selectedItem.taskTypeParam'\n                  },\n                  'label': {\n                    'ng-show': 'selectedItem.userType == \"888\"'\n                  }\n                },\n                index: 4\n              },\n              processMonitors: {\n                type: 'list',\n                group: 'data',\n                label: '通知方式',\n                item: {\n                  type: 'object',\n                  properties: {\n                    name: {\n                      type: 'text',\n                      group: 'data',\n                      index: 4,\n                      label: '通知标题',\n                      attrs: {\n                        'input': {\n                          'class': 'form-control input-sm'\n                        }\n                      }\n                    },\n                    eventType: {\n                      type: 'select',\n                      group: 'data',\n                      index: 4,\n                      label: '执行方式',\n                      options: [{\n                        value: 'start',\n                        content: '开始时执行'\n                      }, {\n                        value: 'end',\n                        content: '结束时执行'\n                      }],\n                      attrs: {\n                        'select': {\n                          'class': 'form-control input-sm'\n                        }\n                      }\n                    },\n                    adviceType: {\n                      type: 'select',\n                      group: 'data',\n                      index: 4,\n                      label: '发送方式',\n                      options: [{\n                        value: 'message',\n                        content: '短信'\n                      }, {\n                        value: 'email',\n                        content: '邮件'\n                      }],\n                      attrs: {\n                        'select': {\n                          'class': 'form-control input-sm'\n                        }\n                      }\n                    }\n                  }\n                }\n              },\n              attributeDefinitions: {\n                type: 'list',\n                group: 'data',\n                label: '添加属性',\n                item: {\n                  type: 'object',\n                  properties: {\n                    //attrs: {\n                    label: {\n                      //text: {\n                      type: 'text',\n                      label: '属性名称',\n                      index: 5,\n                      attrs: {\n                        input: {\n                          class: 'form-control input-sm'\n                        },\n                        label: {\n                          'data-tooltip': 'Set text of the label'\n                        } //}\n\n                      }\n                    },\n                    name: {\n                      //text: {\n                      type: 'text',\n                      label: '显示名称',\n                      index: 5,\n                      attrs: {\n                        input: {\n                          class: 'form-control input-sm'\n                        },\n                        label: {\n                          'data-tooltip': 'Set text of the label'\n                        } //}\n\n                      }\n                    },\n                    dataType: {\n                      type: 'select',\n                      group: 'data',\n                      index: 5,\n                      label: '执行方式',\n                      options: [{\n                        value: 'string',\n                        content: '字符类型'\n                      }, {\n                        value: 'long',\n                        content: '长整数'\n                      }, {\n                        value: 'date',\n                        content: '日期类型'\n                      }, {\n                        value: 'boolean',\n                        content: '布尔类型'\n                      }, {\n                        value: 'boolean',\n                        content: '指派人'\n                      }],\n                      attrs: {\n                        'select': {\n                          'class': 'form-control input-sm'\n                        }\n                      }\n                    }\n                  }\n                },\n                attrs: {\n                  'object': {\n                    'class': 'form-control input-sm'\n                  },\n                  'label': {\n                    'ng-show': 'selectedItem.taskType != \"2\"'\n                  }\n                }\n              }\n            }, CommonInputs),\n            groups: CommonInspectorGroups\n          },\n          'bpmn.Event': {\n            inputs: _.extend({\n              eventType: {\n                type: 'select',\n                options: [{\n                  value: 'start',\n                  content: '开始'\n                }, {\n                  value: 'end',\n                  content: '结束'\n                }],\n                attrs: {\n                  'select': {\n                    'class': 'form-control input-sm'\n                  }\n                },\n                group: 'text',\n                label: '类型',\n                index: 2\n              },\n              icon: {\n                type: 'select',\n                options: [{\n                  value: 'none',\n                  content: '无'\n                }, {\n                  value: 'cross',\n                  content: '取消'\n                }, {\n                  value: 'message',\n                  content: '信息'\n                }, {\n                  value: 'plus',\n                  content: '平行事件'\n                }],\n                attrs: {\n                  'select': {\n                    'class': 'form-control input-sm'\n                  }\n                },\n                label: '子类型',\n                group: 'text',\n                index: 3\n              },\n              attrs: {\n                text: inp({\n                  text: {\n                    group: 'text',\n                    index: 1\n                  },\n                  'font-size': {\n                    group: 'text',\n                    index: 2\n                  },\n                  'font-family': {\n                    group: 'text',\n                    index: 3\n                  },\n                  'font-weight': {\n                    group: 'text',\n                    index: 4\n                  },\n                  fill: {\n                    group: 'text',\n                    index: 5\n                  },\n                  opacity: {\n                    group: 'text',\n                    index: 6\n                  },\n                  stroke: {\n                    group: 'text',\n                    index: 7\n                  },\n                  'stroke-width': {\n                    group: 'text',\n                    index: 8\n                  },\n                  'ref-x': {\n                    group: 'text',\n                    index: 9\n                  },\n                  'ref-y': {\n                    group: 'text',\n                    index: 10\n                  }\n                }),\n                '.body/fill': {\n                  type: 'color',\n                  label: '主体颜色',\n                  group: 'presentation',\n                  index: 1\n                },\n                rect: inp({\n                  opacity: {\n                    group: 'presentation',\n                    index: 2\n                  }\n                })\n              },\n              attributeDefinitions: {\n                type: 'list',\n                group: 'data',\n                label: '添加属性',\n                item: {\n                  type: 'object',\n                  properties: {\n                    label: {\n                      type: 'text',\n                      label: '属性名称',\n                      index: 5,\n                      attrs: {\n                        input: {\n                          class: 'form-control input-sm'\n                        },\n                        label: {\n                          'data-tooltip': 'Set text of the label'\n                        } //}\n\n                      }\n                    },\n                    name: {\n                      type: 'text',\n                      label: '显示名称',\n                      index: 5,\n                      attrs: {\n                        input: {\n                          class: 'form-control input-sm'\n                        },\n                        label: {\n                          'data-tooltip': 'Set text of the label'\n                        }\n                      }\n                    },\n                    dataType: {\n                      type: 'select',\n                      group: 'data',\n                      index: 5,\n                      label: '执行方式',\n                      options: [{\n                        value: 'string',\n                        content: '字符类型'\n                      }, {\n                        value: 'long',\n                        content: '长整数'\n                      }, {\n                        value: 'date',\n                        content: '日期类型'\n                      }, {\n                        value: 'boolean',\n                        content: '布尔类型'\n                      }],\n                      attrs: {\n                        'select': {\n                          'class': 'form-control input-sm'\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }, CommonInputs)\n          },\n          'bpmn.Annotation': {\n            inputs: _.extend({\n              content: {\n                type: 'textarea',\n                label: '内容',\n                group: 'text',\n                attrs: {\n                  textarea: {\n                    class: 'form-control input-sm'\n                  }\n                },\n                index: 1\n              },\n              attrs: {\n                '.body/fill': {\n                  type: 'color',\n                  label: '填充颜色(fill)',\n                  group: 'presentation',\n                  index: 1\n                },\n                '.body/fill-opacity': {\n                  type: 'range',\n                  min: 0,\n                  max: 1,\n                  step: 0.1,\n                  label: '透明度(opacity)',\n                  group: 'presentation',\n                  index: 2\n                }\n              }\n            }, CommonInputs)\n          },\n          'bpmn.Pool': {\n            inputs: _.extend({\n              lanes: {\n                type: 'object',\n                group: 'data',\n                index: 1,\n                attrs: {\n                  label: {\n                    style: 'display:none;'\n                  }\n                },\n                properties: {\n                  label: {\n                    type: 'text',\n                    label: '标签'\n                  },\n                  sublanes: {\n                    type: 'list',\n                    label: '增加连线',\n                    item: {\n                      type: 'object',\n                      properties: {\n                        label: {\n                          type: 'text',\n                          label: '标签',\n                          attrs: {\n                            label: {\n                              style: 'display:none;'\n                            }\n                          }\n                        },\n                        sublanes: {\n                          type: 'list',\n                          label: '增加子连线',\n                          item: {\n                            type: 'object',\n                            properties: {\n                              label: {\n                                type: 'text',\n                                label: '标签',\n                                attrs: {\n                                  label: {\n                                    style: 'display:none;'\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              },\n              attrs: {\n                '.body/fill': {\n                  type: 'color',\n                  label: '主体颜色',\n                  group: 'presentation',\n                  index: 1\n                },\n                '.header/fill': {\n                  type: 'color',\n                  label: '标题颜色',\n                  group: 'presentation',\n                  index: 2\n                },\n                '.lane-body/fill': {\n                  type: 'color',\n                  label: '线框颜色',\n                  group: 'presentation',\n                  index: 3\n                },\n                '.lane-header/fill': {\n                  type: 'color',\n                  label: '线框标题颜色',\n                  group: 'presentation',\n                  index: 4\n                }\n              }\n            }, CommonInputs)\n          },\n          'bpmn.Group': {\n            inputs: _.extend({\n              attrs: {\n                '.label/text': {\n                  type: 'text',\n                  label: '名称',\n                  group: 'data',\n                  index: 1\n                },\n                '.label-rect/fill': {\n                  type: 'color',\n                  label: '主体颜色',\n                  group: 'presentation',\n                  index: 1\n                }\n              }\n            }, CommonInputs)\n          },\n          'bpmn.Conversation': {\n            inputs: _.extend({\n              conversationType: {\n                type: 'select',\n                options: [{\n                  value: 'conversation',\n                  content: '会话'\n                }, {\n                  value: 'call-conversation',\n                  content: '电话会话'\n                }],\n                label: '交流方式',\n                group: 'text',\n                index: 1\n              },\n              subProcess: {\n                type: 'toggle',\n                label: '子步骤',\n                group: 'text',\n                index: 2\n              },\n              attrs: {\n                '.label/text': {\n                  type: 'text',\n                  label: '名称',\n                  group: 'data',\n                  index: 1\n                },\n                '.body/fill': {\n                  type: 'color',\n                  label: '主体颜色',\n                  group: 'presentation',\n                  index: 1\n                }\n              }\n            }, CommonInputs)\n          },\n          'bpmn.Choreography': {\n            inputs: _.extend({\n              participants: {\n                type: 'list',\n                label: '参与者',\n                item: {\n                  type: 'text'\n                },\n                group: 'data',\n                index: 1\n              },\n              initiatingParticipant: {\n                type: 'select',\n                label: '初始化参与者',\n                options: 'participants',\n                group: 'data',\n                index: 2\n              },\n              subProcess: {\n                type: 'toggle',\n                label: '次要步骤',\n                group: 'data',\n                index: 3\n              },\n              content: {\n                type: 'textarea',\n                label: '内容',\n                group: 'text',\n                attrs: {\n                  textarea: {\n                    class: 'form-control input-sm'\n                  }\n                },\n                index: 4\n              },\n              attrs: {\n                '.body/fill': {\n                  type: 'color',\n                  label: '主要颜色',\n                  group: 'presentation',\n                  index: 1\n                },\n                '.participant-rect/fill': {\n                  type: 'color',\n                  label: '次要颜色',\n                  group: 'presentation',\n                  index: 2\n                }\n              }\n            }, CommonInputs)\n          },\n          'bpmn.DataObject': {\n            inputs: _.extend({\n              attrs: {\n                '.label/text': {\n                  type: 'text',\n                  label: '名称',\n                  group: 'data',\n                  index: 1\n                },\n                '.body/fill': {\n                  type: 'color',\n                  label: '主体颜色',\n                  group: 'presentation',\n                  index: 1\n                }\n              }\n            }, CommonInputs)\n          },\n          'bpmn.Message': {\n            inputs: _.extend({\n              attrs: {\n                '.label/text': {\n                  type: 'text',\n                  label: '名称',\n                  group: 'data',\n                  index: 1\n                },\n                '.body/fill': {\n                  type: 'color',\n                  label: '主体颜色',\n                  group: 'geometry',\n                  index: 1\n                }\n              }\n            }, CommonInputs)\n          }\n        };\n        Info.get($scope.source, function (data) {\n          $scope.data = _.extend({\n            stencil: {},\n            bgimages: [],\n            fillType: {}\n          }, data);\n        });\n        $scope.components = {};\n        $scope.commonInspectorGroups = CommonInspectorGroups;\n        $scope.inspectorDefs = InspectorDefs;\n      }],\n      link: function link(scope, element, attrs) {\n        var unbindOnData = scope.$watch('data', function (data) {\n          if (!data) return; // run all initalizators\n\n          _.invoke(scope.$parent.initialization, 'call', window, scope, element); // remove watcher (init only once)\n\n\n          unbindOnData();\n        });\n      }\n    };\n  }]);\n});"],"sourceRoot":"/source/"}