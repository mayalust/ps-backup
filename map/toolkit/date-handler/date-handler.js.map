{"version":3,"sources":["toolkit/date-handler/date-handler.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","root","factory","define","amd","module","exports","dateHandler","DateHandler","this","dateStr","fn","init","OFFSET","events","extend","self","target","cur","i","to2Char","num","to3Char","setDate","Date","on","d","version","eventName","callback","push","clone","getTimeStamp","date","dateObject","dObject","year","getFullYear","month","getMonth","dat","getDate","hour","getHours","minute","getMinutes","second","getSeconds","milisecond","getMilliseconds","utcyear","getUTCFullYear","utcmonth","getUTCMonth","utcdat","getUTCDate","utchour","getUTCHours","utcminute","getUTCMinutes","utcsecond","getUTCSeconds","utcmilisecond","getUTCMilliseconds","toString","str","toUTCString","dateString","utcDateString","update","addYear","parseInt","addMonth","madd","yadd","addDay","dateMinSecond","addTimeStamp","addHour","addMinute","addSecond","timestamp","minSecond","getTime","trimmToYear","dt","trimmToMonth","trimmToWeek","getDay","trimmToDate","trimmToHour","trimmToMinute","trimmToSecond","getYear","getDateString","replace","getUTCDateString"],"mappings":"AAAA,SAASA,QAAQC,GAAwT,OAAtOD,QAArD,mBAAXE,QAAoD,iBAApBA,OAAOC,SAAmC,SAAiBF,GAAO,cAAcA,GAA2B,SAAiBA,GAAO,OAAOA,GAAyB,mBAAXC,QAAyBD,EAAIG,cAAgBF,QAAUD,IAAQC,OAAOG,UAAY,gBAAkBJ,IAAyBA,IAoBxV,SAAWK,EAAMC,GACO,mBAAXC,QAAyBA,OAAOC,IAEzCD,OAAO,GAAI,WACT,OAAOD,EAAQD,KAE4D,YAAjD,oBAAXI,OAAyB,YAAcV,QAAQU,SAEhEA,OAAOC,QAAUJ,EAIjBD,EAAKM,YAAcN,EAAKO,YAAcN,EAAQD,GAZlD,CAcGQ,KAAM,SAAUR,GACjB,SAASO,EAAYE,GACnB,OAAO,IAAIF,EAAYG,GAAGC,KAAKF,GAIjC,IAKIG,EAAS,OACTC,EAAS,GAEb,SAASC,EAAOC,EAAMC,GACpB,IAAIC,EAAMF,EAEV,IAAK,IAAIG,KAAKF,EACZC,EAAIC,GAAKF,EAAOE,GAMpB,SAASC,EAAQC,GACf,OAAIA,EAAM,GACD,IAAMA,EAENA,EAMX,SAASC,EAAQD,GACf,OAAIA,EAAM,GACD,KAAOA,EACLA,EAAM,IACR,IAAMA,EAENA,EA4QX,OAlNAb,EAAYG,GAAKH,EAAYR,WAEdY,KAAO,SAAUF,GAC9B,IAAIQ,EAAMT,KAENC,EACsB,UAApBf,QAAQe,GACVQ,EAAIK,QAAQb,GAEZQ,EAAIK,QAAQ,IAAIC,KAAKd,IAGvBQ,EAAIK,QAAQ,IAAIC,MAIlBN,EAAIO,GAAG,aAAc,SAAUC,GAC7BR,EAAIK,QAAQG,MAIhBlB,EAAYG,GAAGC,KAAKZ,UAAYQ,EAAYG,GAC5CI,EAAOP,EAAYG,GAAGC,KAAKZ,UAAW,CACpC2B,QAnHY,qBAoHZF,GAAI,SAAYG,EAAWC,GACzBf,EAAOc,GAAad,EAAOc,IAAc,GACzCd,EAAOc,GAAWE,KAAKD,IAEzBE,MAAO,WAEL,OAAO,IAAIvB,EAAYG,GAAGC,KADhBH,KACyBuB,iBAErCT,QAAS,SAAiBG,GACxB,IAAIR,EAAMT,KACVS,EAAIe,KAAOP,EACXR,EAAIgB,WAvFR,SAAoBD,GAClB,SAASE,EAAQT,GAEfX,EADUN,KACE,CACV2B,KAAMV,EAAEW,cACRC,MAAOZ,EAAEa,WAAa,EACtBC,IAAKd,EAAEe,UACPC,KAAMhB,EAAEiB,WACRC,OAAQlB,EAAEmB,aACVC,OAAQpB,EAAEqB,aACVC,WAAYtB,EAAEuB,kBACdC,QAASxB,EAAEyB,iBACXC,SAAU1B,EAAE2B,cACZC,OAAQ5B,EAAE6B,aACVC,QAAS9B,EAAE+B,cACXC,UAAWhC,EAAEiC,gBACbC,UAAWlC,EAAEmC,gBACbC,cAAepC,EAAEqC,uBAgCrB,OA1BA5B,EAAQnC,UAAUgE,SAAW,WAC3B,IACIC,EADA/C,EAAMT,KASV,OAPAwD,EAAM/C,EAAIkB,KAAO,IACjB6B,GAAO7C,EAAQF,EAAIoB,OAAS,IAC5B2B,GAAO7C,EAAQF,EAAIsB,KAAO,IAC1ByB,GAAO7C,EAAQF,EAAIwB,MAAQ,IAC3BuB,GAAO7C,EAAQF,EAAI0B,QAAU,IAC7BqB,GAAO7C,EAAQF,EAAI4B,QAAU,IAC7BmB,GAAO7C,EAAQF,EAAI4C,eAAiB,IAAMjD,GAI5CsB,EAAQnC,UAAUkE,YAAc,WAC9B,IACID,EADA/C,EAAMT,KASV,OAPAwD,EAAM/C,EAAIgC,QAAU,IACpBe,GAAO7C,EAAQF,EAAIkC,UAAY,IAC/Ba,GAAO7C,EAAQF,EAAIoC,QAAU,IAC7BW,GAAO7C,EAAQF,EAAIsC,SAAW,IAC9BS,GAAO7C,EAAQF,EAAIwC,WAAa,IAChCO,GAAO7C,EAAQF,EAAI0C,WAAa,IAChCK,GAAO7C,EAAQF,EAAI4C,eAAiB,IAAMjD,GAIrC,IAAIsB,EAAQF,GAsCAC,CAAWR,GAC5BR,EAAIiD,WAAajD,EAAIgB,WAAW8B,WAChC9C,EAAIkD,cAAgBlD,EAAIgB,WAAWgC,eAErCG,OAAQ,WACN,IACIJ,EADMxD,KACIyB,WAAW8B,WADfvD,KAENc,QAAQ,IAAIC,KAAKyC,KAEvBK,QAAS,SAAiBjD,EAAKU,GAC7B,IAAId,EAAkB,GAATc,EAAgBtB,KAAKsB,QAAUtB,KAG5C,OAFAQ,EAAOiB,WAAWE,MAAQmC,SAASlD,GACnCJ,EAAOoD,SACApD,GAETuD,SAAU,SAAkBnD,EAAKU,GAK/B,IAJA,IAAId,EAAkB,GAATc,EAAgBtB,KAAKsB,QAAUtB,KACxCgE,EAAOxD,EAAOiB,WAAWI,MAAQiC,SAASlD,GAC1CqD,EAAO,EAEJD,EAAO,GACZA,GAAQ,GACRC,IAGF,KAAc,GAAPD,GACLA,GAAQ,GACRC,IAMF,OAHAzD,EAAOiB,WAAWE,MAAQsC,EAC1BzD,EAAOiB,WAAWI,MAAQmC,EAC1BxD,EAAOoD,SACApD,GAET0D,OAAQ,SAAgBtD,EAAKU,GAC3B,IAAId,EAAkB,GAATc,EAAgBtB,KAAKsB,QAAUtB,KACxCmE,EAhKW,MAgKoBvD,EAEnC,OADAJ,EAAO4D,aAAaD,GACb3D,GAET6D,QAAS,SAAiBzD,EAAKU,GAC7B,IAAId,EAAkB,GAATc,EAAgBtB,KAAKsB,QAAUtB,KACxCmE,EAvKY,KAuKoBvD,EAEpC,OADAJ,EAAO4D,aAAaD,GACb3D,GAET8D,UAAW,SAAmB1D,EAAKU,GACjC,IAAId,EAAkB,GAATc,EAAgBtB,KAAKsB,QAAUtB,KACxCmE,EA9Kc,IA8KoBvD,EAEtC,OADAJ,EAAO4D,aAAaD,GACb3D,GAET+D,UAAW,SAAmB3D,EAAKU,GACjC,IAAId,EAAkB,GAATc,EAAgBtB,KAAKsB,QAAUtB,KACxCmE,EArLc,IAqLoBvD,EAEtC,OADAJ,EAAO4D,aAAaD,GACb3D,GAET4D,aAAc,SAAsBI,EAAWlD,GAC7C,IAAId,EAAkB,GAATc,EAAgBtB,KAAKsB,QAAUtB,KACxCyE,EAAYjE,EAAOgB,KAAKkD,UAAYF,EAExC,OADAhE,EAAOM,QAAQ,IAAIC,KAAK0D,IACjBjE,GAETmE,YAAa,SAAqBrD,GAChC,IAAId,EAAkB,GAATc,EAAgBtB,KAAKsB,QAAUtB,KACxC4E,EAAKpE,EAAOiB,WAAWE,KAAO,uBAAyBvB,EAE3D,OADAI,EAAOM,QAAQ,IAAIC,KAAK6D,IACjBpE,GAETqE,aAAc,SAAsBvD,GAClC,IAAId,EAAkB,GAATc,EAAgBtB,KAAKsB,QAAUtB,KACxC4E,EAAKpE,EAAOiB,WAAWE,KAAO,IAAMhB,EAAQH,EAAOiB,WAAWI,OAAS,oBAAsBzB,EAEjG,OADAI,EAAOM,QAAQ,IAAIC,KAAK6D,IACjBpE,GAETsE,YAAa,SAAqBxD,GAChC,IAAId,EAAkB,GAATc,EAAgBtB,KAAKsB,QAAUtB,KACxCiB,EAAIT,EAAOgB,KAAKuD,UAAY,EAChC,OAAOvE,EAAO0D,OAAO,EAAIjD,GAAG+D,eAE9BA,YAAa,SAAqB1D,GAChC,IAAId,EAAkB,GAATc,EAAgBtB,KAAKsB,QAAUtB,KACxC4E,EAAKpE,EAAOiB,WAAWE,KAI3B,OAHAiD,GAAM,IAAMjE,EAAQH,EAAOiB,WAAWI,OACtC+C,GAAM,IAAMjE,EAAQH,EAAOiB,WAAWM,KAAO,iBAAmB3B,EAChEI,EAAOM,QAAQ,IAAIC,KAAK6D,IACjBpE,GAETyE,YAAa,SAAqB3D,GAChC,IAAId,EAAkB,GAATc,EAAgBtB,KAAKsB,QAAUtB,KACxC4E,EAAKpE,EAAOiB,WAAWE,KAK3B,OAJAiD,GAAM,IAAMjE,EAAQH,EAAOiB,WAAWI,OACtC+C,GAAM,IAAMjE,EAAQH,EAAOiB,WAAWM,KACtC6C,GAAM,IAAMjE,EAAQH,EAAOiB,WAAWQ,MAAQ,cAAgB7B,EAC9DI,EAAOM,QAAQ,IAAIC,KAAK6D,IACjBpE,GAET0E,cAAe,SAAuB5D,GACpC,IAAId,EAAkB,GAATc,EAAgBtB,KAAKsB,QAAUtB,KACxC4E,EAAKpE,EAAOiB,WAAWE,KAM3B,OALAiD,GAAM,IAAMjE,EAAQH,EAAOiB,WAAWI,OACtC+C,GAAM,IAAMjE,EAAQH,EAAOiB,WAAWM,KACtC6C,GAAM,IAAMjE,EAAQH,EAAOiB,WAAWQ,MACtC2C,GAAM,IAAMjE,EAAQH,EAAOiB,WAAWU,QAAU,WAAa/B,EAC7DI,EAAOM,QAAQ,IAAIC,KAAK6D,IACjBpE,GAET2E,cAAe,SAAuB7D,GACpC,IAAId,EAAkB,GAATc,EAAgBtB,KAAKsB,QAAUtB,KACxC4E,EAAKpE,EAAOiB,WAAWE,KAO3B,OANAiD,GAAM,IAAMjE,EAAQH,EAAOiB,WAAWI,OACtC+C,GAAM,IAAMjE,EAAQH,EAAOiB,WAAWM,KACtC6C,GAAM,IAAMjE,EAAQH,EAAOiB,WAAWQ,MACtC2C,GAAM,IAAMjE,EAAQH,EAAOiB,WAAWU,QACtCyC,GAAM,IAAMjE,EAAQH,EAAOiB,WAAWY,QAAU,QAAUjC,EAC1DI,EAAOM,QAAQ,IAAIC,KAAK6D,IACjBpE,GAETwB,QAAS,WACP,OAAOhC,KAAKwB,MAEdD,aAAc,WACZ,OAAOvB,KAAKwB,KAAKkD,WAEnBU,QAAS,WACP,OAAOpF,KAAKyB,WAAWE,MAEzBG,SAAU,WACR,OAAO9B,KAAKyB,WAAWI,OAEzBwD,cAAe,SAAuB7B,GACpC,IAAI7B,EAAO3B,KAAKyB,WAAWE,KACvBE,EAAQ7B,KAAKyB,WAAWI,MACxBE,EAAM/B,KAAKyB,WAAWM,IACtBE,EAAOjC,KAAKyB,WAAWQ,KACvBE,EAASnC,KAAKyB,WAAWU,OACzBE,EAASrC,KAAKyB,WAAWY,OACzBE,EAAavC,KAAKyB,WAAWc,WAEjC,OAAIiB,GAMFA,GADAA,GADAA,GADAA,GADAA,GADAA,EAAMA,EAAI8B,QAAQ,MAAO3D,IACf2D,QAAQ,MAAO3E,EAAQkB,KACvByD,QAAQ,MAAO3E,EAAQoB,KACvBuD,QAAQ,MAAO3E,EAAQsB,KACvBqD,QAAQ,MAAO3E,EAAQwB,KACvBmD,QAAQ,MAAO3E,EAAQ0B,KACtBiD,QAAQ,MAAOzE,EAAQ0B,IAE3BZ,EAAO,IAAMhB,EAAQkB,GAAS,IAAMlB,EAAQoB,GAAO,IAAMpB,EAAQsB,GAAQ,IAAMtB,EAAQwB,GAAU,IAAMxB,EAAQ0B,GAAU,IAAMxB,EAAQ0B,GAAc,IAAMnC,GAGtKmF,iBAAkB,SAA0B/B,GAC1C,IAAIf,EAAUzC,KAAKyB,WAAWgB,QAC1BE,EAAW3C,KAAKyB,WAAWkB,SAC3BE,EAAS7C,KAAKyB,WAAWoB,OACzBE,EAAU/C,KAAKyB,WAAWsB,QAC1BE,EAAYjD,KAAKyB,WAAWwB,UAC5BE,EAAYnD,KAAKyB,WAAW0B,UAC5BE,EAAgBrD,KAAKyB,WAAW4B,cAEpC,OAAIG,GAMFA,GADAA,GADAA,GADAA,GADAA,GADAA,EAAMA,EAAI8B,QAAQ,MAAO7C,IACf6C,QAAQ,MAAO3E,EAAQgC,KACvB2C,QAAQ,MAAO3E,EAAQkC,KACvByC,QAAQ,MAAO3E,EAAQoC,KACvBuC,QAAQ,MAAO3E,EAAQsC,KACvBqC,QAAQ,MAAO3E,EAAQwC,KACtBmC,QAAQ,MAAOzE,EAAQsC,IAE3BV,EAAU,IAAM9B,EAAQgC,GAAY,IAAMhC,EAAQkC,GAAU,IAAMlC,EAAQoC,GAAW,IAAMpC,EAAQsC,GAAa,IAAMtC,EAAQwC,GAAa,IAAMtC,EAAQwC,GAAiB,OAIhLtD","file":"toolkit/date-handler/date-handler.js","sourcesContent":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Date Handler Created by leonlin.\n * e.g.\n * 1) create a Date Object on Today\n * var dh = datehandler();\n * 2) create a Date on certain Date\n * var dh = datehandler('2017/12/31,10:20')\n * 3) Add several years on original Date Object\n * dh.addYear(1); dh.addYear(-2);\n * 3) Add several years on clone Date Object\n * var clone = dh.addYear(1, true)\n * 4)output date string\n * var str = dh.getDateString();\n * var str = dh.getDateString('yy/MM/dd,hh');\n * 5)output utc date string\n * var utcstr = dh.getUTCDateString();\n * var utcstr = dh.getUTCDateString('yy/MM/dd,hh');\n */\n(function (root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    /** for AMD use*/\n    define([], function () {\n      return factory(root);\n    });\n  } else if ((typeof module === \"undefined\" ? \"undefined\" : _typeof(module)) === \"object\") {\n    /** for CMD use*/\n    module.exports = factory;\n    root;\n  } else {\n    /** for Global use*/\n    root.dateHandler = root.DateHandler = factory(root);\n  }\n})(this, function (root) {\n  function DateHandler(dateStr) {\n    return new DateHandler.fn.init(dateStr);\n  }\n\n  ;\n  var VERSION = \"DateHandler v1.0.0\",\n      SECONDTIMESTAMP = 1000,\n      MINUTETIMESTAMP = 60 * SECONDTIMESTAMP,\n      HOURTIMESTAMP = 60 * MINUTETIMESTAMP,\n      DAYTIMESTAMP = 24 * HOURTIMESTAMP,\n      OFFSET = \"0800\",\n      events = {};\n\n  function extend(self, target) {\n    var cur = self;\n\n    for (var i in target) {\n      cur[i] = target[i];\n    }\n  }\n\n  ;\n\n  function to2Char(num) {\n    if (num < 10) {\n      return \"0\" + num;\n    } else {\n      return num;\n    }\n  }\n\n  ;\n\n  function to3Char(num) {\n    if (num < 10) {\n      return \"00\" + num;\n    } else if (num < 100) {\n      return \"0\" + num;\n    } else {\n      return num;\n    }\n  }\n\n  ;\n\n  function dateObject(date) {\n    function dObject(d) {\n      var cur = this;\n      extend(cur, {\n        year: d.getFullYear(),\n        month: d.getMonth() + 1,\n        dat: d.getDate(),\n        hour: d.getHours(),\n        minute: d.getMinutes(),\n        second: d.getSeconds(),\n        milisecond: d.getMilliseconds(),\n        utcyear: d.getUTCFullYear(),\n        utcmonth: d.getUTCMonth(),\n        utcdat: d.getUTCDate(),\n        utchour: d.getUTCHours(),\n        utcminute: d.getUTCMinutes(),\n        utcsecond: d.getUTCSeconds(),\n        utcmilisecond: d.getUTCMilliseconds()\n      });\n    }\n\n    ;\n\n    dObject.prototype.toString = function () {\n      var cur = this,\n          str;\n      str = cur.year + \"-\";\n      str += to2Char(cur.month) + \"-\";\n      str += to2Char(cur.dat) + \":\";\n      str += to2Char(cur.hour) + \":\";\n      str += to2Char(cur.minute) + \":\";\n      str += to2Char(cur.second) + \".\";\n      str += to2Char(cur.utcmilisecond) + \"+\" + OFFSET;\n      return str;\n    };\n\n    dObject.prototype.toUTCString = function () {\n      var cur = this,\n          str;\n      str = cur.utcyear + \"-\";\n      str += to2Char(cur.utcmonth) + \"-\";\n      str += to2Char(cur.utcdat) + \":\";\n      str += to2Char(cur.utchour) + \":\";\n      str += to2Char(cur.utcminute) + \":\";\n      str += to2Char(cur.utcsecond) + \".\";\n      str += to2Char(cur.utcmilisecond) + \"+\" + OFFSET;\n      return str;\n    };\n\n    return new dObject(date);\n  }\n\n  DateHandler.fn = DateHandler.prototype;\n\n  DateHandler.fn.init = function (dateStr) {\n    var cur = this;\n\n    if (dateStr) {\n      if (_typeof(dateStr) == \"object\") {\n        cur.setDate(dateStr);\n      } else {\n        cur.setDate(new Date(dateStr));\n      }\n    } else {\n      cur.setDate(new Date());\n    }\n\n    ;\n    cur.on(\"dateChange\", function (d) {\n      cur.setDate(d);\n    });\n  };\n\n  DateHandler.fn.init.prototype = DateHandler.fn;\n  extend(DateHandler.fn.init.prototype, {\n    version: VERSION,\n    on: function on(eventName, callback) {\n      events[eventName] = events[eventName] || [];\n      events[eventName].push(callback);\n    },\n    clone: function clone() {\n      var cur = this;\n      return new DateHandler.fn.init(cur.getTimeStamp());\n    },\n    setDate: function setDate(d) {\n      var cur = this;\n      cur.date = d;\n      cur.dateObject = dateObject(d);\n      cur.dateString = cur.dateObject.toString();\n      cur.utcDateString = cur.dateObject.toUTCString();\n    },\n    update: function update() {\n      var cur = this;\n      var str = cur.dateObject.toString();\n      cur.setDate(new Date(str));\n    },\n    addYear: function addYear(num, clone) {\n      var target = clone == true ? this.clone() : this;\n      target.dateObject.year += parseInt(num);\n      target.update();\n      return target;\n    },\n    addMonth: function addMonth(num, clone) {\n      var target = clone == true ? this.clone() : this;\n      var madd = target.dateObject.month + parseInt(num);\n      var yadd = 0;\n\n      while (madd < 1) {\n        madd += 12;\n        yadd--;\n      }\n\n      while (madd > 12) {\n        madd -= 12;\n        yadd++;\n      }\n\n      target.dateObject.year += yadd;\n      target.dateObject.month = madd;\n      target.update();\n      return target;\n    },\n    addDay: function addDay(num, clone) {\n      var target = clone == true ? this.clone() : this;\n      var dateMinSecond = DAYTIMESTAMP * num;\n      target.addTimeStamp(dateMinSecond);\n      return target;\n    },\n    addHour: function addHour(num, clone) {\n      var target = clone == true ? this.clone() : this;\n      var dateMinSecond = HOURTIMESTAMP * num;\n      target.addTimeStamp(dateMinSecond);\n      return target;\n    },\n    addMinute: function addMinute(num, clone) {\n      var target = clone == true ? this.clone() : this;\n      var dateMinSecond = MINUTETIMESTAMP * num;\n      target.addTimeStamp(dateMinSecond);\n      return target;\n    },\n    addSecond: function addSecond(num, clone) {\n      var target = clone == true ? this.clone() : this;\n      var dateMinSecond = SECONDTIMESTAMP * num;\n      target.addTimeStamp(dateMinSecond);\n      return target;\n    },\n    addTimeStamp: function addTimeStamp(timestamp, clone) {\n      var target = clone == true ? this.clone() : this;\n      var minSecond = target.date.getTime() + timestamp;\n      target.setDate(new Date(minSecond));\n      return target;\n    },\n    trimmToYear: function trimmToYear(clone) {\n      var target = clone == true ? this.clone() : this;\n      var dt = target.dateObject.year + \"-01-01,00:00:00.000+\" + OFFSET;\n      target.setDate(new Date(dt));\n      return target;\n    },\n    trimmToMonth: function trimmToMonth(clone) {\n      var target = clone == true ? this.clone() : this;\n      var dt = target.dateObject.year + \"-\" + to2Char(target.dateObject.month) + \"-01,00:00:00.000+\" + OFFSET;\n      target.setDate(new Date(dt));\n      return target;\n    },\n    trimmToWeek: function trimmToWeek(clone) {\n      var target = clone == true ? this.clone() : this;\n      var d = target.date.getDay() || 7;\n      return target.addDay(1 - d).trimmToDate();\n    },\n    trimmToDate: function trimmToDate(clone) {\n      var target = clone == true ? this.clone() : this;\n      var dt = target.dateObject.year;\n      dt += \"-\" + to2Char(target.dateObject.month);\n      dt += \"-\" + to2Char(target.dateObject.dat) + \",00:00:00.000+\" + OFFSET;\n      target.setDate(new Date(dt));\n      return target;\n    },\n    trimmToHour: function trimmToHour(clone) {\n      var target = clone == true ? this.clone() : this;\n      var dt = target.dateObject.year;\n      dt += \"-\" + to2Char(target.dateObject.month);\n      dt += \"-\" + to2Char(target.dateObject.dat);\n      dt += \",\" + to2Char(target.dateObject.hour) + \":00:00.000+\" + OFFSET;\n      target.setDate(new Date(dt));\n      return target;\n    },\n    trimmToMinute: function trimmToMinute(clone) {\n      var target = clone == true ? this.clone() : this;\n      var dt = target.dateObject.year;\n      dt += \"-\" + to2Char(target.dateObject.month);\n      dt += \"-\" + to2Char(target.dateObject.dat);\n      dt += \",\" + to2Char(target.dateObject.hour);\n      dt += \":\" + to2Char(target.dateObject.minute) + \":00.000+\" + OFFSET;\n      target.setDate(new Date(dt));\n      return target;\n    },\n    trimmToSecond: function trimmToSecond(clone) {\n      var target = clone == true ? this.clone() : this;\n      var dt = target.dateObject.year;\n      dt += \"-\" + to2Char(target.dateObject.month);\n      dt += \"-\" + to2Char(target.dateObject.dat);\n      dt += \",\" + to2Char(target.dateObject.hour);\n      dt += \":\" + to2Char(target.dateObject.minute);\n      dt += \":\" + to2Char(target.dateObject.second) + \".000+\" + OFFSET;\n      target.setDate(new Date(dt));\n      return target;\n    },\n    getDate: function getDate() {\n      return this.date;\n    },\n    getTimeStamp: function getTimeStamp() {\n      return this.date.getTime();\n    },\n    getYear: function getYear() {\n      return this.dateObject.year;\n    },\n    getMonth: function getMonth() {\n      return this.dateObject.month;\n    },\n    getDateString: function getDateString(str) {\n      var year = this.dateObject.year;\n      var month = this.dateObject.month;\n      var dat = this.dateObject.dat;\n      var hour = this.dateObject.hour;\n      var minute = this.dateObject.minute;\n      var second = this.dateObject.second;\n      var milisecond = this.dateObject.milisecond;\n\n      if (str) {\n        str = str.replace(/y+/g, year);\n        str = str.replace(/M+/g, to2Char(month));\n        str = str.replace(/d+/g, to2Char(dat));\n        str = str.replace(/h+/g, to2Char(hour));\n        str = str.replace(/m+/g, to2Char(minute));\n        str = str.replace(/s+/g, to2Char(second));\n        return str.replace(/n+/g, to3Char(milisecond));\n      } else {\n        return year + \"-\" + to2Char(month) + \"-\" + to2Char(dat) + \",\" + to2Char(hour) + \":\" + to2Char(minute) + \":\" + to2Char(second) + \".\" + to3Char(milisecond) + \"+\" + OFFSET;\n      }\n    },\n    getUTCDateString: function getUTCDateString(str) {\n      var utcyear = this.dateObject.utcyear;\n      var utcmonth = this.dateObject.utcmonth;\n      var utcdat = this.dateObject.utcdat;\n      var utchour = this.dateObject.utchour;\n      var utcminute = this.dateObject.utcminute;\n      var utcsecond = this.dateObject.utcsecond;\n      var utcmilisecond = this.dateObject.utcmilisecond;\n\n      if (str) {\n        str = str.replace(/y+/g, utcyear);\n        str = str.replace(/M+/g, to2Char(utcmonth));\n        str = str.replace(/d+/g, to2Char(utcdat));\n        str = str.replace(/h+/g, to2Char(utchour));\n        str = str.replace(/m+/g, to2Char(utcminute));\n        str = str.replace(/s+/g, to2Char(utcsecond));\n        return str.replace(/n+/g, to3Char(utcsecond));\n      } else {\n        return utcyear + \"-\" + to2Char(utcmonth) + \"-\" + to2Char(utcdat) + \"T\" + to2Char(utchour) + \":\" + to2Char(utcminute) + \":\" + to2Char(utcsecond) + \".\" + to3Char(utcmilisecond) + \"Z\";\n      }\n    }\n  });\n  return DateHandler;\n});"],"sourceRoot":"/source/"}