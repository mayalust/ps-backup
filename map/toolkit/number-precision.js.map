{"version":3,"sources":["toolkit/number-precision.js"],"names":["define","strip","num","precision","arguments","length","undefined","parseFloat","toPrecision","digitLength","eSplit","toString","split","len","plus","num1","num2","baseNum","Math","pow","max","minus","times","num1Changed","Number","replace","num2Changed","divide","round","ratio","base","default"],"mappings":"AAGAA,OAAO,GAAI,WACT,SAASC,EAAMC,GACb,IAAIC,EAA+B,EAAnBC,UAAUC,aAA+BC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,GACpF,OAAQG,WAAWL,EAAIM,YAAYL,IAQrC,SAASM,EAAYP,GAEnB,IAAIQ,EAASR,EAAIS,WAAWC,MAAM,QAC9BC,GAAOH,EAAO,GAAGE,MAAM,KAAK,IAAM,IAAIP,SAAWK,EAAO,IAAM,GAClE,OAAa,EAANG,EAAUA,EAAM,EAOzB,SAASC,EAAKC,EAAMC,GAClB,IAAIC,EAAUC,KAAKC,IAAI,GAAID,KAAKE,IAAIX,EAAYM,GAAON,EAAYO,KACnE,OAAQD,EAAOE,EAAUD,EAAOC,GAAWA,EAO7C,SAASI,EAAMN,EAAMC,GACnB,IAAIC,EAAUC,KAAKC,IAAI,GAAID,KAAKE,IAAIX,EAAYM,GAAON,EAAYO,KACnE,OAAQD,EAAOE,EAAUD,EAAOC,GAAWA,EAO7C,SAASK,EAAMP,EAAMC,GACnB,IAAIO,EAAcC,OAAOT,EAAKJ,WAAWc,QAAQ,IAAK,KAClDC,EAAcF,OAAOR,EAAKL,WAAWc,QAAQ,IAAK,KAClDR,EAAUR,EAAYM,GAAQN,EAAYO,GAC9C,OAAOO,EAAcG,EAAcR,KAAKC,IAAI,GAAIF,GAOlD,SAASU,EAAOZ,EAAMC,GAGpB,OAAOM,EAFWE,OAAOT,EAAKJ,WAAWc,QAAQ,IAAK,KACpCD,OAAOR,EAAKL,WAAWc,QAAQ,IAAK,KACdP,KAAKC,IAAI,GAAIV,EAAYO,GAAQP,EAAYM,KAOvF,SAASa,EAAM1B,EAAK2B,GAClB,IAAIC,EAAOZ,KAAKC,IAAI,GAAIU,GACxB,OAAOF,EAAOT,KAAKU,MAAMN,EAAMpB,EAAK4B,IAAQA,GAG9C,MAAO,CACL7B,MAAOA,EACPa,KAAMA,EACNO,MAAOA,EACPC,MAAOA,EACPK,OAAQA,EACRC,MAAOA,EACPnB,YAAaA,EACbsB,QAAS,CACP9B,MAAOA,EACPa,KAAMA,EACNO,MAAOA,EACPC,MAAOA,EACPK,OAAQA,EACRC,MAAOA,EACPnB,YAAaA","file":"toolkit/number-precision.js","sourcesContent":["/**\n * Created by leonlin on 16/11/3.\n */\ndefine([], function () {\n  function strip(num) {\n    var precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 12;\n    return +parseFloat(num.toPrecision(precision));\n  }\n  /**\n   * Return digits length of a number\n   * @param {*number} num Input number\n   */\n\n\n  function digitLength(num) {\n    // Get digit length of e\n    var eSplit = num.toString().split(/[eE]/);\n    var len = (eSplit[0].split('.')[1] || '').length - +(eSplit[1] || 0);\n    return len > 0 ? len : 0;\n  }\n  /**\n   * 精确加法\n   */\n\n\n  function plus(num1, num2) {\n    var baseNum = Math.pow(10, Math.max(digitLength(num1), digitLength(num2)));\n    return (num1 * baseNum + num2 * baseNum) / baseNum;\n  }\n  /**\n   * 精确减法\n   */\n\n\n  function minus(num1, num2) {\n    var baseNum = Math.pow(10, Math.max(digitLength(num1), digitLength(num2)));\n    return (num1 * baseNum - num2 * baseNum) / baseNum;\n  }\n  /**\n   * 精确乘法\n   */\n\n\n  function times(num1, num2) {\n    var num1Changed = Number(num1.toString().replace('.', ''));\n    var num2Changed = Number(num2.toString().replace('.', ''));\n    var baseNum = digitLength(num1) + digitLength(num2);\n    return num1Changed * num2Changed / Math.pow(10, baseNum);\n  }\n  /**\n   * 精确除法\n   */\n\n\n  function divide(num1, num2) {\n    var num1Changed = Number(num1.toString().replace('.', ''));\n    var num2Changed = Number(num2.toString().replace('.', ''));\n    return times(num1Changed / num2Changed, Math.pow(10, digitLength(num2) - digitLength(num1)));\n  }\n  /**\n   * 四舍五入\n   */\n\n\n  function round(num, ratio) {\n    var base = Math.pow(10, ratio);\n    return divide(Math.round(times(num, base)), base);\n  }\n\n  return {\n    strip: strip,\n    plus: plus,\n    minus: minus,\n    times: times,\n    divide: divide,\n    round: round,\n    digitLength: digitLength,\n    default: {\n      strip: strip,\n      plus: plus,\n      minus: minus,\n      times: times,\n      divide: divide,\n      round: round,\n      digitLength: digitLength\n    }\n  };\n});"],"sourceRoot":"/source/"}