{"version":3,"sources":["toolkit/date-handler.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","define","dataHandler","init","dateStr","date","year","month","dat","hour","minute","second","milisecond","utcyear","utcmonth","utcdat","utchour","utcminute","utcsecond","utcmilisecond","events","OFFSET","DateHandler","cur","this","version","CLASS","setDate","Date","on","d","dateToStr","to2Char","num","to3Char","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","getHour","eventName","callback","getMinute","getSecond","update","addYear","clone","minus","target","getTimeStamp","addMonth","m","parseInt","yadd","Math","floor","addTimeStamp","timestamp","minSecond","getTime","addDay","dateMinSecond","addHour","addMinute","addSecond","before","dt","after","trimmToYear","trimmToMonth","trimmToWeek","getDay","trimmToDate","trimmToHour","trimmToMinute","trimmToSecond","getDateString","str","replace","getUTCDateString"],"mappings":"AAAA,SAASA,QAAQC,GAAwT,OAAtOD,QAArD,mBAAXE,QAAoD,iBAApBA,OAAOC,SAAmC,SAAiBF,GAAO,cAAcA,GAA2B,SAAiBA,GAAO,OAAOA,GAAyB,mBAAXC,QAAyBD,EAAIG,cAAgBF,QAAUD,IAAQC,OAAOG,UAAY,gBAAkBJ,IAAyBA,GAKxVK,OAAO,GAAI,WACT,IAAIC,EAAc,CAElBC,KAAmB,SAAUC,GAC3B,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAAS,GACTC,EAAS,OAEb,SAASC,EAAYlB,GACnB,IAAImB,EAAMC,KACVA,KAAKC,QAAU,qBACfD,KAAKE,MAAQ,cAETtB,EAEsB,UAApBT,QAAQS,GACVmB,EAAII,QAAQvB,GAEZmB,EAAII,QAAQ,IAAIC,KAAKxB,IAGvBmB,EAAII,QAAQ,IAAIC,MAIlBL,EAAIM,GAAG,aAAc,SAAUC,GAC7BP,EAAII,QAAQG,KAMhB,IAAIC,EAAY,WAEd,OADUzB,EAAO,IAAM0B,EAAQzB,EAAQ,GAAK,IAAMyB,EAAQxB,GAAO,IAAMwB,EAAQvB,GAAQ,IAAMuB,EAAQtB,GAAU,IAAMsB,EAAQrB,GAAU,QAAUU,GAI/IW,EAAU,SAAiBC,GAC7B,OAAIA,EAAM,GACD,IAAMA,EAENA,GAIPC,EAAU,SAAiBD,GAC7B,OAAIA,EAAM,IACD,IAAMA,EACJA,EAAM,GACR,KAAOA,EAEPA,GAIXX,EAAYtB,UAAU2B,QAAU,SAAUG,GAExCxB,GADAD,EAAOyB,GACKK,cACZ5B,EAAQF,EAAK+B,WACb5B,EAAMH,EAAKgC,UACX5B,EAAOJ,EAAKiC,WACZ5B,EAASL,EAAKkC,aACd5B,EAASN,EAAKmC,aACd5B,EAAaP,EAAKoC,kBAClB5B,EAAUR,EAAKqC,iBACf5B,EAAWT,EAAKsC,cAChB5B,EAASV,EAAKuC,aACd5B,EAAUX,EAAKwC,cACf5B,EAAYZ,EAAKyC,gBACjB5B,EAAYb,EAAK0C,gBACjB5B,EAAgBd,EAAK2C,qBACrBxB,KAAKnB,KAAO0B,KAGdT,EAAYtB,UAAUiD,QAAU,SAAUC,EAAWC,GACnD,OAAO1C,GAGTa,EAAYtB,UAAUoD,UAAY,SAAUF,EAAWC,GACrD,OAAOzC,GAGTY,EAAYtB,UAAUqD,UAAY,SAAUH,EAAWC,GACrD,OAAOxC,GAGTW,EAAYtB,UAAU6B,GAAK,SAAUqB,EAAWC,GAC9C/B,EAAO8B,GAAaC,GAGtB,IAAIG,EAAS,WACXjD,EAAO,IAAIuB,KAAKG,KAChBX,EAAO,WAAcf,IAwJvB,OArJAiB,EAAYtB,UAAUuD,QAAU,SAAUtB,GAGxC,OAFA3B,GAAc2B,EACdqB,IACO9B,KAAKgC,SAGdlC,EAAYtB,UAAUyD,MAAQ,SAAUC,GAEtC,OADUlC,KACCmC,eAAiBD,EAAOC,gBAGrCrC,EAAYtB,UAAU4D,SAAW,SAAU3B,GACzC,IAAI4B,EAAItD,EAAQuD,SAAS7B,GACrB8B,EAAOC,KAAKC,MAAMJ,EAAI,IAK1B,OAHAvD,GAAcyD,EACdxD,EAFWsD,EAAI,GAGfP,IACO9B,KAAKgC,SAGdlC,EAAYtB,UAAUwD,MAAQ,WAC5B,OAAOtD,EAAYC,KAAKqB,KAAKmC,iBAG/BrC,EAAYtB,UAAUkE,aAAe,SAAUC,GAC7C,IAAIC,EAAY/D,EAAKgE,UAAYF,EAEjC,OADA3C,KAAKG,QAAQ,IAAIC,KAAKwC,IACf5C,KAAKgC,SAGdlC,EAAYtB,UAAUsE,OAAS,SAAUrC,GACvC,IAAIsC,EAAgB,MAAmBtC,EAEvC,OADAT,KAAK0C,aAAaK,GACX/C,KAAKgC,SAGdlC,EAAYtB,UAAUwE,QAAU,SAAUvC,GACxC,IAAIsC,EAAgB,KAActC,EAElC,OADAT,KAAK0C,aAAaK,GACX/C,KAAKgC,SAGdlC,EAAYtB,UAAUyE,UAAY,SAAUxC,GAC1C,IAAIsC,EAAgB,IAAYtC,EAEhC,OADAT,KAAK0C,aAAaK,GACX/C,KAAKgC,SAGdlC,EAAYtB,UAAU0E,UAAY,SAAUzC,GAC1C,IAAIsC,EAAgB,IAAOtC,EAE3B,OADAT,KAAK0C,aAAaK,GACX/C,KAAKgC,SAGdlC,EAAYtB,UAAUqE,QAAU/C,EAAYtB,UAAU2D,aAAe,WACnE,OAAOtD,EAAKgE,WAGd/C,EAAYtB,UAAUqC,QAAU,WAC9B,OAAOhC,GAGTiB,EAAYtB,UAAU2E,OAAS,SAAUC,GAWvC,MAPgB,eAAZA,EAAGlD,MAHGF,KAICmC,eAAiBiB,EAAGjB,eAJrBnC,KAMCmC,eAAiBzD,EAAYC,KAAKyE,GAAIjB,gBAOnDrC,EAAYtB,UAAU6E,MAAQ,SAAUD,GAWtC,MAPgB,eAAZA,EAAGlD,MAHGF,KAICmC,eAAiBiB,EAAGjB,eAJrBnC,KAMCmC,eAAiBzD,EAAYC,KAAKyE,GAAIjB,gBAOnDrC,EAAYtB,UAAU8E,YAAc,WAClC,OAAOxE,EAAO,uBAAyBe,GAGzCC,EAAYtB,UAAU+E,aAAe,WACnC,OAAOzE,EAAO,IAAM0B,EAAQzB,EAAQ,GAAK,oBAAsBc,GAGjEC,EAAYtB,UAAUgF,YAAc,WAClC,IAAIlD,EAAIzB,EAAK4E,UAAY,EAGzB,OAFY/E,EAAYC,KAAKqB,KAAKa,WACnBiC,OAAO,EAAIxC,GAChBoD,eAGZ5D,EAAYtB,UAAUkF,YAAc,WAClC,OAAO5E,EAAO,IAAM0B,EAAQzB,EAAQ,GAAK,IAAMyB,EAAQxB,GAAO,iBAAmBa,GAGnFC,EAAYtB,UAAUmF,YAAc,WAClC,OAAO7E,EAAO,IAAM0B,EAAQzB,EAAQ,GAAK,IAAMyB,EAAQxB,GAAO,IAAMwB,EAAQvB,GAAQ,cAAgBY,GAGtGC,EAAYtB,UAAUoF,cAAgB,WACpC,OAAO9E,EAAO,IAAM0B,EAAQzB,EAAQ,GAAK,IAAMyB,EAAQxB,GAAO,IAAMwB,EAAQvB,GAAQ,IAAMuB,EAAQtB,GAAU,WAAaW,GAG3HC,EAAYtB,UAAUqF,cAAgB,WACpC,OAAO/E,EAAO,IAAM0B,EAAQzB,EAAQ,GAAK,IAAMyB,EAAQxB,GAAO,IAAMwB,EAAQvB,GAAQ,IAAMuB,EAAQtB,GAAU,IAAMsB,EAAQrB,GAAU,QAAUU,GAGhJC,EAAYtB,UAAUsF,cAAgB,SAAUC,GAC9C,OAAIA,GAKFA,GADAA,GADAA,GADAA,GADAA,EAAMA,EAAIC,QAAQ,MAAOlF,IACfkF,QAAQ,MAAOxD,EAAQzB,EAAQ,KAC/BiF,QAAQ,MAAOxD,EAAQxB,KACvBgF,QAAQ,MAAOxD,EAAQvB,KACvB+E,QAAQ,MAAOxD,EAAQtB,KACtB8E,QAAQ,MAAOxD,EAAQrB,IAE3BL,EAAO,IAAM0B,EAAQzB,EAAQ,GAAK,IAAMyB,EAAQxB,GAAO,IAAMwB,EAAQvB,GAAQ,IAAMuB,EAAQtB,GAAU,IAAMsB,EAAQrB,GAAU,IAAMuB,EAAQtB,GAAc,IAAMS,GAI1KC,EAAYtB,UAAUyF,iBAAmB,SAAUF,GACjD,OAAIA,GAKFA,GADAA,GADAA,GADAA,GADAA,EAAMA,EAAIC,QAAQ,MAAO3E,IACf2E,QAAQ,MAAOxD,EAAQlB,EAAW,KAClC0E,QAAQ,MAAOxD,EAAQjB,KACvByE,QAAQ,MAAOxD,EAAQhB,KACvBwE,QAAQ,MAAOxD,EAAQf,KACtBuE,QAAQ,MAAOxD,EAAQd,IAE3BL,EAAU,IAAMmB,EAAQlB,EAAW,GAAK,IAAMkB,EAAQjB,GAAU,IAAMiB,EAAQhB,GAAW,IAAMgB,EAAQf,GAAa,IAAMe,EAAQd,GAAa,IAAMgB,EAAQf,GAAiB,KAIhL,IAAIG,EAAYlB,KAI3B,OAAOF","file":"toolkit/date-handler.js","sourcesContent":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Created by leonlin on 16/11/3.\n */\ndefine([], function () {\n  var dataHandler = {};\n\n  dataHandler.init = function (dateStr) {\n    var date,\n        year,\n        month,\n        dat,\n        hour,\n        minute,\n        second,\n        milisecond,\n        utcyear,\n        utcmonth,\n        utcdat,\n        utchour,\n        utcminute,\n        utcsecond,\n        utcmilisecond,\n        events = {};\n    var OFFSET = \"0800\";\n\n    function DateHandler(dateStr) {\n      var cur = this;\n      this.version = \"DateHandler v1.0.0\";\n      this.CLASS = \"DateHandler\";\n\n      if (dateStr) {\n        //console.log(dateStr, new Date(dateStr));\n        if (_typeof(dateStr) == \"object\") {\n          cur.setDate(dateStr);\n        } else {\n          cur.setDate(new Date(dateStr));\n        }\n      } else {\n        cur.setDate(new Date());\n      }\n\n      ;\n      cur.on(\"dateChange\", function (d) {\n        cur.setDate(d);\n      });\n    }\n\n    ;\n\n    var dateToStr = function dateToStr() {\n      var str = year + \"-\" + to2Char(month + 1) + \"-\" + to2Char(dat) + \":\" + to2Char(hour) + \":\" + to2Char(minute) + \":\" + to2Char(second) + \".000+\" + OFFSET;\n      return str;\n    };\n\n    var to2Char = function to2Char(num) {\n      if (num < 10) {\n        return \"0\" + num;\n      } else {\n        return num;\n      }\n    };\n\n    var to3Char = function to3Char(num) {\n      if (num < 100) {\n        return \"0\" + num;\n      } else if (num < 10) {\n        return \"00\" + num;\n      } else {\n        return num;\n      }\n    };\n\n    DateHandler.prototype.setDate = function (d) {\n      date = d;\n      year = date.getFullYear();\n      month = date.getMonth();\n      dat = date.getDate();\n      hour = date.getHours();\n      minute = date.getMinutes();\n      second = date.getSeconds();\n      milisecond = date.getMilliseconds();\n      utcyear = date.getUTCFullYear();\n      utcmonth = date.getUTCMonth();\n      utcdat = date.getUTCDate();\n      utchour = date.getUTCHours();\n      utcminute = date.getUTCMinutes();\n      utcsecond = date.getUTCSeconds();\n      utcmilisecond = date.getUTCMilliseconds();\n      this.date = dateToStr();\n    };\n\n    DateHandler.prototype.getHour = function (eventName, callback) {\n      return hour;\n    };\n\n    DateHandler.prototype.getMinute = function (eventName, callback) {\n      return minute;\n    };\n\n    DateHandler.prototype.getSecond = function (eventName, callback) {\n      return second;\n    };\n\n    DateHandler.prototype.on = function (eventName, callback) {\n      events[eventName] = callback;\n    };\n\n    var update = function update() {\n      date = new Date(dateToStr());\n      events['dateChange'](date);\n    };\n\n    DateHandler.prototype.addYear = function (num) {\n      year = year + num;\n      update();\n      return this.clone();\n    };\n\n    DateHandler.prototype.minus = function (target) {\n      var cur = this;\n      return cur.getTimeStamp() - target.getTimeStamp();\n    };\n\n    DateHandler.prototype.addMonth = function (num) {\n      var m = month + parseInt(num);\n      var yadd = Math.floor(m / 12);\n      var madd = m % 12;\n      year = year + yadd;\n      month = madd;\n      update();\n      return this.clone();\n    };\n\n    DateHandler.prototype.clone = function () {\n      return dataHandler.init(this.getTimeStamp());\n    };\n\n    DateHandler.prototype.addTimeStamp = function (timestamp) {\n      var minSecond = date.getTime() + timestamp;\n      this.setDate(new Date(minSecond));\n      return this.clone();\n    };\n\n    DateHandler.prototype.addDay = function (num) {\n      var dateMinSecond = 24 * 3600 * 1000 * num;\n      this.addTimeStamp(dateMinSecond);\n      return this.clone();\n    };\n\n    DateHandler.prototype.addHour = function (num) {\n      var dateMinSecond = 3600 * 1000 * num;\n      this.addTimeStamp(dateMinSecond);\n      return this.clone();\n    };\n\n    DateHandler.prototype.addMinute = function (num) {\n      var dateMinSecond = 60 * 1000 * num;\n      this.addTimeStamp(dateMinSecond);\n      return this.clone();\n    };\n\n    DateHandler.prototype.addSecond = function (num) {\n      var dateMinSecond = 1000 * num;\n      this.addTimeStamp(dateMinSecond);\n      return this.clone();\n    };\n\n    DateHandler.prototype.getTime = DateHandler.prototype.getTimeStamp = function () {\n      return date.getTime();\n    };\n\n    DateHandler.prototype.getDate = function () {\n      return date;\n    };\n\n    DateHandler.prototype.before = function (dt) {\n      var cur = this;\n      var rs;\n\n      if (dt.CLASS == \"DateHandler\") {\n        rs = cur.getTimeStamp() < dt.getTimeStamp();\n      } else {\n        rs = cur.getTimeStamp() < dataHandler.init(dt).getTimeStamp();\n      }\n\n      ;\n      return rs;\n    };\n\n    DateHandler.prototype.after = function (dt) {\n      var cur = this;\n      var rs;\n\n      if (dt.CLASS == \"DateHandler\") {\n        rs = cur.getTimeStamp() > dt.getTimeStamp();\n      } else {\n        rs = cur.getTimeStamp() > dataHandler.init(dt).getTimeStamp();\n      }\n\n      ;\n      return rs;\n    };\n\n    DateHandler.prototype.trimmToYear = function () {\n      return year + \"-01-01,00:00:00.000+\" + OFFSET;\n    };\n\n    DateHandler.prototype.trimmToMonth = function () {\n      return year + \"-\" + to2Char(month + 1) + \"-01,00:00:00.000+\" + OFFSET;\n    };\n\n    DateHandler.prototype.trimmToWeek = function () {\n      var d = date.getDay() || 7;\n      var clone = dataHandler.init(this.getDate());\n      var rs = clone.addDay(1 - d);\n      return rs.trimmToDate();\n    };\n\n    DateHandler.prototype.trimmToDate = function () {\n      return year + \"-\" + to2Char(month + 1) + \"-\" + to2Char(dat) + \",00:00:00.000+\" + OFFSET;\n    };\n\n    DateHandler.prototype.trimmToHour = function () {\n      return year + \"-\" + to2Char(month + 1) + \"-\" + to2Char(dat) + \",\" + to2Char(hour) + \":00:00.000+\" + OFFSET;\n    };\n\n    DateHandler.prototype.trimmToMinute = function () {\n      return year + \"-\" + to2Char(month + 1) + \"-\" + to2Char(dat) + \",\" + to2Char(hour) + \":\" + to2Char(minute) + \":00.000+\" + OFFSET;\n    };\n\n    DateHandler.prototype.trimmToSecond = function () {\n      return year + \"-\" + to2Char(month + 1) + \"-\" + to2Char(dat) + \",\" + to2Char(hour) + \":\" + to2Char(minute) + \":\" + to2Char(second) + \".000+\" + OFFSET;\n    };\n\n    DateHandler.prototype.getDateString = function (str) {\n      if (str) {\n        str = str.replace(/y+/g, year);\n        str = str.replace(/M+/g, to2Char(month + 1));\n        str = str.replace(/d+/g, to2Char(dat));\n        str = str.replace(/h+/g, to2Char(hour));\n        str = str.replace(/m+/g, to2Char(minute));\n        return str.replace(/s+/g, to2Char(second));\n      } else {\n        return year + \"-\" + to2Char(month + 1) + \"-\" + to2Char(dat) + \",\" + to2Char(hour) + \":\" + to2Char(minute) + \":\" + to2Char(second) + \".\" + to3Char(milisecond) + \"+\" + OFFSET;\n      }\n    };\n\n    DateHandler.prototype.getUTCDateString = function (str) {\n      if (str) {\n        str = str.replace(/y+/g, utcyear);\n        str = str.replace(/M+/g, to2Char(utcmonth + 1));\n        str = str.replace(/d+/g, to2Char(utcdat));\n        str = str.replace(/h+/g, to2Char(utchour));\n        str = str.replace(/m+/g, to2Char(utcminute));\n        return str.replace(/s+/g, to2Char(utcsecond));\n      } else {\n        return utcyear + \"-\" + to2Char(utcmonth + 1) + \"-\" + to2Char(utcdat) + \"T\" + to2Char(utchour) + \":\" + to2Char(utcminute) + \":\" + to2Char(utcsecond) + \".\" + to3Char(utcmilisecond) + \"Z\";\n      }\n    };\n\n    var rs = new DateHandler(dateStr);\n    return rs;\n  };\n\n  return dataHandler;\n});"],"sourceRoot":"/source/"}