{"version":3,"sources":["toolkit/component/treenavigator.js"],"names":["define","treeDataHandler","pstree","data","treeIns","_res","callback","resource","id","ALERTKPI","resourceIdMap","root","elemData","_projects","_devices","invalidNodes","events","push","Array","prototype","tostring","Object","toString","isObject","isType","isArray","isFunction","target","element","treenavigator","$","icons","getParameter","getValue","extendstr","serviceProxy","_onlyDeviceClickable","parameters","navitype","_backToMainWhileDeviceChange","backToMainWhileDeviceChange","LOC","300","301","302","1000","nextTick","fn","setTimeout","type","obj","call","extend","a","b","i","each","arr","length","nodeClick","node","modelId","removeAllRequest","setHighlight","$location","setParameter","trigger","changeNavString","getResourceById","setValue","analysisChangePath","deviceChangePath","path","nameDic","motor","wind","reality","UPS","electric","screen","getAttrsByModelId","attrs","viewType","find","n","name","sourceValue","this","label","parent","getParent","parentID","reverse","join","getIcon","rule","regeExp","RegExp","val1","values","number","val2","getMaxUnmber","variable","maxLength","ret","exec","num","addZeroBefore","word","dif","max","mnum1","mnum2","Math","replace","extendToResIdMap","resources","domains","split","filter","e","last2","slice","resourceType","console","err","clickFn","event","preventDefault","toggle","navigateTo","main","inputToRelativeMap","children","inserted","insertBySort","assert","rs","getParentsWithSomeModelID","layer","error","message","click","$on","eventname","getKpiValueCi","ci","kpi","runtime","valuelist","isRealTimeData","getDomains","mids","getResourceByModelId","inx","mid","d","apply","getDomainsSuccess","domain","dev","traverse","child","postponed","getDomainsKpiValueCiSuccess","val","nodeId","value","getKpiValueCiSuccess","getDevicesByConditionSuccess","getDevicesByCondition","animate","themes","on","init","icon","open","depth","nd","some","eachParent","highlight","str","search","indexOf"],"mappings":"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","file":"toolkit/component/treenavigator.js","sourcesContent":["/**\n * Created by leonlin on 16/11/3.\n */\ndefine(['toolkit/itree/tree-data-handler', 'pstree'], function (treeDataHandler, pstree) {\n  return function (data) {\n    var ALERTKPI = 999999;\n\n    var treeIns,\n        _res,\n        resourceIdMap = {\n      root: []\n    },\n        elemData = data,\n        _projects = [],\n        _devices = [],\n        invalidNodes = [],\n        events = {},\n        push = Array.prototype.push,\n        tostring = Object.prototype.toString,\n        isObject = isType(\"Object\"),\n        isNull = isType(\"Null\"),\n        isUndefined = isType(\"Undefined\"),\n        isArray = isType(\"Array\"),\n        isNumber = isType(\"Number\"),\n        isFunction = isType(\"Function\"),\n        isString = isType(\"String\"),\n        target = elemData.element,\n        treenavigator = $(\"<div class=\\\"tree-menu\\\"></div>\"),\n        resource = target.getParameter(\"resource\"),\n        _role = target.getValue(\"global/ROLE\"),\n        icons = ['tag tag-green', 'tag tag-yellow', 'tag tag-orange', 'tag tag-red'],\n        extendstr = \"includeFields=id,label,modelId,values.viewType,values.view.viewTitle,values.view.viewId,values.number,domains,resourcetype,viewType\",\n        _LOCATION = [null, \"index\", \"navigate\", \"factory\", \"production\"],\n        serviceProxy = data.serviceProxy,\n        _onlyDeviceClickable = function (param) {\n      return param.navitype == \"device\";\n    }(target.parameters || {}),\n        _backToMainWhileDeviceChange = target.parameters.backToMainWhileDeviceChange,\n        LOC = {\n      \"300\": \"domain\",\n      \"301\": \"customer\",\n      \"302\": \"project\",\n      \"1000\": \"device\"\n    };\n\n    function nextTick(fn) {\n      setTimeout(fn, 100);\n    }\n\n    function pushBack(arr, obj) {\n      if (isArray(obj)) {\n        push.apply(arr, obj);\n      } else {\n        push.call(arr, obj);\n      }\n    }\n\n    function isType(type) {\n      return function (obj) {\n        return tostring.call(obj) == \"[object \" + type + \"]\" && obj === obj;\n      };\n    }\n\n    function isNaN(num) {\n      return num !== num;\n    }\n\n    function bind(target, fn) {\n      return function () {\n        fn.apply(target, arguments);\n      };\n    }\n\n    function find(arr, callback) {\n      var i;\n      arr = arr || [];\n\n      for (var i = 0; i < arr.length; i++) {\n        if (callback(arr[i], i)) {\n          return arr[i];\n        }\n      }\n    }\n\n    function filter(arr, callback) {\n      var i,\n          rs = [];\n      arr = arr || [];\n\n      for (var i = 0; i < arr.length; i++) {\n        if (callback(arr[i], i)) {\n          rs.push(arr[i]);\n        }\n      }\n\n      return rs;\n    }\n\n    function clone(obj) {\n      return JSON.parse(JSON.stringify(obj));\n    }\n\n    function extend(a, b) {\n      for (var i in b) {\n        a[i] = b[i];\n      }\n    }\n\n    function each(arr, callback) {\n      var i;\n      arr = arr || [];\n\n      for (i = 0; i < arr.length; i++) {\n        callback && callback(arr[i], i);\n      }\n    }\n\n    function eachProp(obj, callback) {\n      var i;\n      obj = obj || {};\n\n      for (var i in obj) {\n        callback && callback(obj[i], i);\n      }\n    }\n\n    function insertBySort(children, inserted, rule) {\n      for (var i = children.length - 1; i > -1;) {\n        if (rule(inserted, children[i])) {\n          children[i + 1] = children[i];\n          i--;\n        } else {\n          break;\n        }\n      }\n\n      children[i + 1] = inserted;\n    }\n\n    ; //function getLocationByModel(model){\n    //  var viewType = (function(model){\n    //    if(!model) return undefined;\n    //    var attrs = model.attrs || [];\n    //    var viewTypeAttr = attrs.find(function(elem){\n    //      return elem.name == \"viewType\";\n    //    }) || {};\n    //    return viewTypeAttr.sourceValue;\n    //  })(model);\n\n    function getLocationByModel(resource) {\n      var viewType = resource.values && resource.values['viewType'];\n      viewType = viewType || null;\n      var nameDic = {\n        motor: \"motor\",\n        wind: \"wind\",\n        reality: \"reality\",\n        UPS: \"UPS\",\n        electric: \"electric\",\n        screen: \"screen\"\n      };\n      return viewType ? nameDic[viewType] : \"device\";\n    }\n\n    function nodeClick(node) {\n      if (_onlyDeviceClickable && node.modelId < 1000) return;\n      serviceProxy.removeAllRequest();\n\n      if (node.setHighlight) {\n        node.setHighlight(true);\n      }\n\n      ;\n      nextTick(function () {\n        if (_onlyDeviceClickable) {\n          analysisChangePath(node);\n        } else {\n          deviceChangePath(node);\n        }\n      });\n    }\n\n    function nodeClickMove(node) {\n      if (_onlyDeviceClickable && node.modelId < 1000) return;\n      serviceProxy.removeAllRequest();\n      nextTick(function () {\n        target.setParameter(\"id\", node.id);\n        target.setParameter(\"sub\", null);\n        target.navigateTo(\"index\", {\n          main: target.getParameter(\"main\")\n        }, \"self\");\n      });\n    }\n\n    function setCacheTree() {\n      if (treeIns) {\n        target.trigger(\"deviceTreeLoaded\", treeIns);\n      }\n    }\n\n    function deviceChangePath(node) {\n      var path = node.$location,\n          nameDic = {\n        motor: \"motor\",\n        wind: \"wind\",\n        reality: \"reality\",\n        UPS: \"UPS\",\n        electric: \"electric\",\n        screen: \"screen\"\n      };\n      target.setParameter(\"id\", node.id);\n      target.trigger(\"changeNavString\", changeNavString.call(node));\n      getResourceById(node.id, function (resource) {\n        target.getAttrsByModelId(resource.modelId, function (attrs) {\n          var viewType = attrs.find(function (n) {\n            return n.name === \"viewType\";\n          }),\n              sourceValue = viewType && viewType.sourceValue;\n          path = sourceValue && nameDic[sourceValue] || node.$location;\n          extend(node, resource);\n          target.setValue(\"global/resource\", node);\n          target.trigger(\"pathChange\", path);\n          target.trigger(\"tree_resourceChange\", {\n            resource: node\n          });\n          target.trigger(\"analysisShakeNavigateTo\", 0);\n        });\n      });\n    }\n\n    function analysisChangePath(node) {\n      var path = node.$location;\n      target.setParameter(\"id\", node.id);\n      target.trigger(\"changeNavString\", changeNavString.call(node));\n      getResourceById(node.id, function (resource) {\n        extend(node, resource);\n        target.setValue(\"global/resource\", node);\n        target.trigger(\"tree_resourceChange\", {\n          resource: node\n        });\n        target.trigger(\"analysisShakeNavigateTo\", 0);\n      });\n    }\n\n    function changeNavString() {\n      var node = this,\n          str,\n          arr = [node.label],\n          parent = getParent(node);\n\n      function getParent(node) {\n        return node.parentID && resourceIdMap[node.parentID] || node.parent;\n      }\n\n      while (parent) {\n        if (parent.id != 99) {\n          arr.push(parent.label);\n        }\n\n        parent = getParent(parent);\n      }\n\n      arr.reverse();\n      return arr.join(\" > \");\n    }\n\n    function getResourceById(id, callback) {\n      target.getResourceById(id, function (resource) {\n        callback && callback(resource);\n      });\n    }\n\n    function getIcon(i) {\n      return icons[i - 1] || 'tag tag-green';\n    }\n\n    function error(msg) {\n      this.msg = msg;\n    }\n\n    ;\n\n    function rule(a, b) {\n      var regeExp = new RegExp(\"/\\\\d+/\", \"g\"),\n          val1 = a.values && a.values.number || null,\n          val2 = b.values && b.values.number || null;\n\n      function getMaxUnmber(variable) {\n        var maxLength = 0,\n            ret = regeExp.exec(variable.label);\n\n        while (ret != null) {\n          var num = ret[0].length;\n\n          if (num > maxLength) {\n            maxLength = num;\n          }\n\n          ret = regeExp.exec(variable.label);\n        }\n\n        return maxLength;\n      }\n\n      function addZeroBefore(word) {\n        var dif = max - word.length;\n\n        for (var i = 0; i < dif; i++) {\n          word = \"0\" + word;\n        }\n\n        return word;\n      }\n\n      if (val1 || val2) {\n        return val1 < val2;\n      } else {\n        var mnum1 = getMaxUnmber(a),\n            mnum2 = getMaxUnmber(b),\n            max = Math.max(mnum1, mnum2),\n            la = a.label.replace(regeExp, function (word) {\n          return addZeroBefore(word);\n        }),\n            lb = b.label.replace(regeExp, function (word) {\n          return addZeroBefore(word);\n        });\n        return la < lb;\n      }\n    }\n\n    function getLastTwo(domains) {\n      var arr = domains.split(\"/\").filter(function (e) {\n        return e;\n      });\n      return arr.slice(-2);\n    }\n\n    function checkModelId(modelId) {\n      if (modelId > 1000) {\n        return true;\n      } else {\n        return modelId == 300 || modelId == 301 || modelId == 302;\n      }\n    }\n\n    function extendToResIdMap(target, resources) {\n      var proj = {},\n          id,\n          type,\n          modelId;\n      each(resources, function (resource, i) {\n        var domains = resource.domains.split(\"/\").filter(function (e) {\n          return e;\n        }),\n            last2 = getLastTwo(resource.domains),\n            parentID = resource.id == last2[1] ? last2[0] : last2[1];\n\n        if (parentID !== resource.id) {\n          resource.parentID = parentID;\n          id = resource.id;\n          modelId = resource.modelId;\n          type = modelId > 1000 ? 1000 : modelId;\n          target[id] = resource;\n          resource.resourceType = LOC[type];\n        } else {\n          console.err(\"此节点为错误或无效节点\", resource);\n          invalidNodes.push(resource);\n        }\n      });\n      return target;\n    }\n\n    function clickFn() {\n      var id = target.getParameter(\"id\");\n      target.setValue(\"global/alertTime\", null);\n\n      if (_onlyDeviceClickable && this.resourceType !== \"device\") {\n        event.preventDefault();\n        this.toggle();\n      } else if (id != this.id) {\n        _backToMainWhileDeviceChange ? !target.getParameter(\"sub\") ? nodeClick(this) : nodeClickMove(this) : nodeClick(this);\n      }\n    }\n\n    function inputToRelativeMap(resource) {\n      var domains = resource.domains,\n          parents,\n          modelId = resource.modelId,\n          parent = getParent(resource);\n      domains = domains.split(\"/\").filter(function (e) {\n        return e;\n      });\n\n      function getParent(resource) {\n        return resource.parentID ? resourceIdMap[resource.parentID] : console.err(\"没有设置PARENTID属性\");\n      }\n\n      function getParentsWithSomeModelID(resource) {\n        var rs = [],\n            cached,\n            modelId = resource.modelId,\n            parent = resource;\n\n        while (parent = getParent(parent)) {\n          if (parent.modelId != modelId) {\n            break;\n          }\n\n          rs.push(parent);\n        }\n\n        return rs;\n      }\n\n      if (parent) {\n        parent.children = parent.children || [];\n        insertBySort(parent.children, resource, rule);\n      } else {\n        resourceIdMap['root'].push(resource);\n        console.assert(false, \"无根节点的节点\", resource);\n      }\n\n      if (modelId > 1000) {\n        //resource.$location = getLocationByModel(target.getRootScope(\"rootModelsDic\")[modelId])\n        resource.$location = getLocationByModel(resource);\n      } else {\n        if (modelId == 300) {\n          parents = getParentsWithSomeModelID(resource);\n\n          if (resource.layer == 1) {\n            resource.$location = \"index\";\n          } else if (resource.layer == 2) {\n            resource.$location = \"navigate\";\n          } else if (resource.layer == 3) {\n            resource.$location = \"factory\";\n          } else {\n            resource.$location = {\n              error: \"unhandled node\",\n              message: \"[300]layer is over 3, cannot handle\"\n            };\n            console.error(\"管理域出现\" + resource.layer + \"级，不可被处理\", resource.label, resource.modelId, resource.layer);\n          }\n        } else if (modelId == 301) {\n          resource.$location = \"production\";\n        } else if (modelId == 302) {\n          if (resource.children && resource.children[0] && resource.children[0].modelId > 1000 || resource.layer == 1) {\n            resource.$location = \"devicegroup\";\n          } else {\n            resource.$location = \"virtual\";\n          }\n        }\n      }\n\n      resource.click = clickFn;\n\n      resource.$on = function (eventname, callback) {\n        events[eventname] = callback;\n      };\n\n      console.assert(resource.$location, \"$location没正确倒入\", resource.label, resource.modelId, resource.layer);\n    }\n\n    function getCurrentResource(callback) {\n      var resource = target.getValue(\"global/resource\") || {},\n          id = target.getParameter(\"id\") || resource.id;\n      id && target.getResourceById(id, function (resource) {\n        callback && callback(resource);\n      });\n      !id && callback && callback(null);\n    }\n\n    function getDevicesByCondition(callback) {\n      runtime('resource开始加载');\n      target.getDevicesByCondition({}, function (resources) {\n        runtime('resource完成加载');\n        callback && callback(resources);\n      }, extendstr);\n    }\n\n    function getKpiValueCi(ci, kpi, callback) {\n      runtime('getStatus开始加载');\n      target.getKpiValueCi(ci, kpi, function (valuelist) {\n        runtime('getStatus完成加载');\n        callback && callback(valuelist);\n      }, {\n        isRealTimeData: true\n      });\n    }\n\n    function getDomains(callback) {\n      var domains = [];\n      var mids = [300, 301, 302];\n      var i;\n\n      function getResourceByModelId(inx) {\n        var mid = mids[inx];\n\n        function handler(d) {\n          pushBack(domains, d);\n          getResourceByModelId(inx + 1);\n        }\n\n        mid && target.getResourceByModelId(mid, handler, extendstr);\n        !mid && callback && callback(domains);\n      }\n\n      getResourceByModelId(0);\n    }\n\n    function getCurrentResourceSuccess(resource) {\n      _res = resource;\n      getDomains(getDomainsSuccess);\n    }\n\n    function getDomainsSuccess(domains) {\n      extendToResIdMap(resourceIdMap, domains);\n      var ci = [],\n          node;\n      each(domains, function (domain) {\n        inputToRelativeMap(domain);\n        ci.push(domain.id);\n      });\n      dev = resourceIdMap['root'];\n\n      function traverse(d) {\n        each(d, function (child) {\n          !child.children && _projects.push(child);\n          child.children && traverse(child.children);\n        });\n      }\n\n      traverse(dev);\n\n      if (!_onlyDeviceClickable) {\n        if (!_res) {\n          node = resourceIdMap[\"root\"][0];\n        } else {\n          if (_res.modelId < 1000) {\n            node = resourceIdMap[_res.id];\n          }\n        }\n\n        ;\n\n        if (node) {\n          if (!node.$location) {\n            node.postponed = true;\n          } else {\n            deviceChangePath(node);\n          }\n        }\n      }\n\n      getKpiValueCi(ci, [ALERTKPI], getDomainsKpiValueCiSuccess);\n    }\n\n    function getDomainsKpiValueCiSuccess(valuelist) {\n      each(valuelist, function (val) {\n        resourceIdMap[val.nodeId]['status'] = val.value;\n        resourceIdMap[val.nodeId]['icon'] = getIcon(val.value);\n      });\n      getDevicesByCondition(function (d) {\n        getDevicesByConditionSuccess(d);\n      });\n    }\n\n    function getDevicesByConditionSuccess(resources) {\n      runtime('getResourceSuccess开始');\n      var ci = [];\n      _devices = resources;\n      extendToResIdMap(resourceIdMap, resources);\n      each(resources, function (resource) {\n        inputToRelativeMap(resource);\n        ci.push(resource.id);\n      });\n      runtime(\"MAP全完成\", resourceIdMap['root']);\n      getKpiValueCi(ci, [ALERTKPI], getKpiValueCiSuccess);\n    }\n\n    ;\n\n    function getKpiValueCiSuccess(valuelist) {\n      each(valuelist, function (val, i) {\n        resourceIdMap[val.nodeId]['status'] = val.value;\n        resourceIdMap[val.nodeId]['icon'] = getIcon(val.value);\n      });\n      var root = resourceIdMap['root'];\n\n      var find = _projects.find(function (e) {\n        return e.children instanceof Array && e.children.length > 0;\n      });\n\n      resourceIdMap['firstDevice'] = isObject(find) && isArray(find.children) && find.children[0];\n      console.assert(resourceIdMap['firstDevice'], \"没有找到任何设备\");\n      root = root && root[0] && root[0].layer == 1 && root[0].modelId == 300 ? root[0].children : root;\n      treeIns = pstree(treenavigator[0], {\n        data: isArray(root) ? root : [],\n        animate: false,\n        themes: \"show-line folder-pull-right steel-industry condense\",\n        on: {\n          init: function init() {\n            this.icon = this.icon || \"tag tag-green\";\n            this.open = this.depth < 2;\n          },\n          click: clickFn\n        }\n      });\n      setCacheTree();\n\n      var nd = function () {\n        if (_onlyDeviceClickable) {\n          if (isObject(_res) && _res.modelId > 1000 && _devices.some(function (d) {\n            return d.id == _res.id;\n          })) return _res;\n          return resourceIdMap['firstDevice'] || null;\n        } else {\n          return _res ? _res : resourceIdMap['root'] ? resourceIdMap['root'][0] : null;\n        }\n      }();\n\n      var node = treeIns.find(function (e) {\n        return (nd && nd.id) == e.id;\n      });\n      isObject(node) && isFunction(node.eachParent) && node.eachParent(function (n) {\n        !n.open && n.toggle();\n      });\n      isObject(node) && isFunction(node.highlight) && node.highlight();\n      isObject(node) && !node.open && isFunction(node.toggle) && node.toggle();\n\n      if (node) {\n        if (_onlyDeviceClickable) {\n          nodeClick(node);\n        } else if (node.modelId > 1000 || node.postponed) {\n          delete node.postponed;\n          nodeClick(node);\n        }\n\n        ;\n      }\n\n      runtime('allfinished', root);\n    }\n\n    getCurrentResource(getCurrentResourceSuccess);\n    target.on(\"treeSelect\", function () {\n      var id = target.getParameter(\"id\");\n      var node = treeIns.find(function (n) {\n        return n.id == id;\n      });\n      node && isFunction(node.eachParent) && node.eachParent(function (n) {\n        !n.open && n.toggle();\n      });\n      node && isFunction(node.highlight) && node.highlight();\n    });\n    target.on(\"searchtree\", function (str) {\n      treeIns.search(function (node) {\n        return node.label.indexOf(str) != -1;\n      });\n    });\n    return treenavigator;\n  };\n});"],"sourceRoot":"/source/"}