{"version":3,"sources":["toolkit/component/aceeditor.js"],"names":["define","data","element","global","constructor","growl","aceDom","$","style","css","events","$$","runExpression","$attr","funRes","code","Error","message","fnResult","expression","on","eventName","callback","render","str","fun","setText","insert","initFn","changeFn","loadExternalJs","ace","lnTools","completions","caption","value","metal","key","prototype","push","addCompleter","addComplete","getCompletions","editor","session","pos","prefix","edit","setMode","setTheme","setOptions","enableBasicAutocompletion","enableSnippets","enableLiveAutocompletion","event","target","getValue","e","setValue","undefined","runExpressionSuccess"],"mappings":"AAGAA,OAAO,GAAI,WACT,OAAO,SAAUC,GACf,IAAIC,EAAUD,EAAKC,QACfC,EAASF,EAAKE,OAEdC,GADQH,EAAKI,MACCH,EAAQE,aACtBE,EAASC,EAAE,eAEXL,EAAQM,OACVF,EAAOG,IAAIP,EAAQM,OAIrB,IAAIE,EAAS,GAyJb,OAtJAC,GAAGC,cAAcV,EAAQW,MAAM,sBAAuB,SAAUC,GAC9D,GAAmB,KAAfA,EAAOC,KAWT,MAAM,IAAIC,MAAMF,EAAOG,SAVvB,IAAIC,EAAWJ,EAAOb,MAgB1B,SAA8BkB,GAC5BC,GAAK,SAAYC,EAAWC,GAC1BZ,EAAOW,GAAaC,GAGtBpB,EAAQqB,OAAS,SAAUC,GACzBJ,GAAG,SAAU,SAAUK,GACrBA,EAAID,MAIRtB,EAAQwB,QAAU,SAAUF,GAC1BJ,GAAG,UAAW,SAAUK,GACtBA,EAAID,MAIRtB,EAAQyB,OAAS,SAAUH,GACzBJ,GAAG,SAAU,SAAUK,GACrBA,EAAID,MAIR,IAAII,EAAST,EAAWN,MAAM,WAC1BgB,EAAWV,EAAWN,MAAM,aAChCF,GAAGmB,eAAe,CAAC,MAAO,gBAAiB,SAAUC,EAAKC,GACxD,IAAIC,EAAc,CAAC,CACjBC,QAAS,SACTC,MAAO,SACPC,MAAO,SACN,CACDF,QAAS,QACTC,MAAO,QACPC,MAAO,UAGT,IAAK,IAAIC,KAAOjC,EAAYkC,UAC1BL,EAAYM,KAAK,CACfL,QAASG,EACTF,MAAOE,EACPD,MAAO,UAKXJ,GAA2C,mBAAzBA,EAAQQ,cAA+BR,EAAQS,YAAY,CAC3EC,eAAgB,SAAwBC,EAAQC,EAASC,EAAKC,EAAQxB,GACpEA,EAAS,KAAMW,MAInB,IAAIV,EAAS,SAAgBC,GAC3B,IAAImB,EAASZ,EAAIgB,KAAKzC,EAAO,IAC7BqC,EAAOC,QAAQI,QAAQ,iBACvBL,EAAOM,SAAS,sBAEhBN,EAAOO,WAAW,CAChBC,2BAA2B,EAC3BC,gBAAgB,EAChBC,0BAA0B,IAE5BV,EAAOvB,GAAG,SAAU,SAAUkC,GAC5B,GAAuB,mBAAZzB,EACT,IACEA,EAAS,CACP0B,OAAQrD,EACRC,OAAQA,EACRgC,MAAOQ,EAAOa,aAEhB,MAAOC,OASb,IAAI/B,EAAU,SAAiBF,GAC7BmB,EAAOe,SAAgBC,MAAPnC,EAAmBA,EAAM,KAG3CtB,EAAQwB,QAAUA,EAEdhB,EAAO,SACTA,EAAO,QAAWgB,GAKpB,IAAIC,EAAS,SAAgBH,GAC3BmB,EAAOhB,OAAcgC,MAAPnC,EAAmBA,EAAM,KAGzCtB,EAAQyB,OAASA,EAEbjB,EAAO,QACTA,EAAO,OAAUiB,GAKfH,GACFtB,EAAQwB,QAAQF,IAcpB,GARAtB,EAAQqB,OAASA,EAEbb,EAAO,QACTA,EAAO,OAAUa,GAKE,mBAAVK,EACT,IACEA,EAAO,CACL2B,OAAQrD,EACRC,OAAQA,IAEV,MAAOsD,SAETlC,MAhIJqC,EAXyB,mBAAZ1C,EACIA,EAASjB,GAETiB,IAGwB,MA4IpCZ","file":"toolkit/component/aceeditor.js","sourcesContent":["/**\n * Created by leonlin on 16/11/3.\n */\ndefine([], function () {\n  return function (data) {\n    var element = data.element;\n    var global = data.global;\n    var growl = data.growl;\n    var constructor = element.constructor;\n    var aceDom = $(\"<div></div>\");\n\n    if (element.style) {\n      aceDom.css(element.style);\n    }\n\n    ;\n    var events = {};\n    var statue = \"wait\";\n    var expression;\n    $$.runExpression(element.$attr(\"advance/expression\"), function (funRes) {\n      if (funRes.code == \"0\") {\n        var fnResult = funRes.data;\n\n        if (typeof fnResult == 'function') {\n          expression = fnResult(data);\n        } else {\n          expression = fnResult;\n        }\n\n        expression = expression ? expression : {};\n      } else {\n        throw new Error(funRes.message);\n      }\n\n      runExpressionSuccess(expression);\n    });\n\n    function runExpressionSuccess(expression) {\n      on = function on(eventName, callback) {\n        events[eventName] = callback;\n      };\n\n      element.render = function (str) {\n        on(\"render\", function (fun) {\n          fun(str);\n        });\n      };\n\n      element.setText = function (str) {\n        on(\"setText\", function (fun) {\n          fun(str);\n        });\n      };\n\n      element.insert = function (str) {\n        on(\"insert\", function (fun) {\n          fun(str);\n        });\n      };\n\n      var initFn = expression.$attr(\"on/init\");\n      var changeFn = expression.$attr(\"on/change\");\n      $$.loadExternalJs([\"ace\", 'ace-language'], function (ace, lnTools) {\n        var completions = [{\n          caption: 'target',\n          value: 'target',\n          metal: 'local'\n        }, {\n          caption: 'event',\n          value: 'event',\n          metal: 'local'\n        }];\n\n        for (var key in constructor.prototype) {\n          completions.push({\n            caption: key,\n            value: key,\n            metal: 'local'\n          });\n        }\n\n        ;\n        lnTools && typeof lnTools.addCompleter === \"function\" && lnTools.addComplete({\n          getCompletions: function getCompletions(editor, session, pos, prefix, callback) {\n            callback(null, completions);\n          }\n        });\n\n        var render = function render(str) {\n          var editor = ace.edit(aceDom[0]);\n          editor.session.setMode(\"ace/mode/html\");\n          editor.setTheme(\"ace/theme/tomorrow\"); // enable autocompletion and snippets\n\n          editor.setOptions({\n            enableBasicAutocompletion: true,\n            enableSnippets: true,\n            enableLiveAutocompletion: true\n          });\n          editor.on(\"change\", function (event) {\n            if (typeof changeFn == \"function\") {\n              try {\n                changeFn({\n                  target: element,\n                  global: global,\n                  value: editor.getValue()\n                });\n              } catch (e) {}\n            }\n          });\n          /**\n           var editor = ace.edit(aceDom[0]);\n           editor.setTheme(\"ace/theme/dawn\");\n           editor.session.setMode(\"ace/mode/javascript\");\n           */\n\n          var setText = function setText(str) {\n            editor.setValue(str != undefined ? str : \"\");\n          };\n\n          element.setText = setText;\n\n          if (events['setText']) {\n            events['setText'](setText);\n          }\n\n          ;\n\n          var insert = function insert(str) {\n            editor.insert(str != undefined ? str : \"\");\n          };\n\n          element.insert = insert;\n\n          if (events['insert']) {\n            events['insert'](insert);\n          }\n\n          ;\n\n          if (str) {\n            element.setText(str);\n          }\n\n          ;\n        };\n\n        element.render = render;\n\n        if (events['render']) {\n          events['render'](render);\n        }\n\n        ;\n\n        if (typeof initFn == \"function\") {\n          try {\n            initFn({\n              target: element,\n              global: global\n            });\n          } catch (e) {}\n        } else {\n          render();\n        }\n\n        ;\n      });\n    }\n\n    return aceDom;\n  };\n});"],"sourceRoot":"/source/"}