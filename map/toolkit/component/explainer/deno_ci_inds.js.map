{"version":3,"sources":["toolkit/component/explainer/deno_ci_inds.js"],"names":["define","simulate","data","tools","callback","nodesDes","kpisDes","group","instance","ci","kpi","rs","loop","children","value","find","elem","kpiCode","id","nodeId","i","push","regroup","getSeries","formatter","gr","name","label","item","getLegend","nodes","kpis","legend","series"],"mappings":"AAGAA,OAAO,CAAC,YAAa,SAAUC,GAC7B,OAAO,SAAUC,EAAMC,EAAOC,GAC5B,IAAIC,EAAWF,EAAME,SACjBC,EAAUH,EAAMG,QA8ChBC,GA7CWJ,EAAMK,SACJL,EAAMF,SAET,SAAiBQ,EAAIC,GACjC,IAAIC,EAAK,GAELC,EAAO,SAAcF,GACvB,IAAIC,EAAK,CACPD,IAAKA,EACLG,SAAU,IAeRD,EAAO,SAAcH,GACvB,MAAO,CACLA,GAAIA,EACJK,OAf+BL,EAedA,EAfkBC,EAedA,EAdnBK,EAAOb,EAAKa,KAAK,SAAUC,GAC7B,OAAOA,EAAKC,SAAWP,EAAIQ,IAAMF,EAAKG,QAAUV,EAAGS,KAGjDH,EACKA,EAAKD,MAEL,MARK,IAAmBL,EAAIC,EACjCK,GAkBN,IAAK,IAAIK,KAAKX,EACZE,EAAGE,SAASQ,KAAKT,EAAKH,EAAGW,KAG3B,OAAOT,GAGT,IAAK,IAAIS,KAAKV,EACZC,EAAGU,KAAKT,EAAKF,EAAIU,KAGnB,OAAOT,EAGGW,CAAQjB,EAAUC,IAE1BiB,EAAY,SAAmBC,GACjC,IAAIb,EAAK,GAELC,EAAO,SAAca,GACvB,IAAId,EAAK,CACPe,KAAMD,EAAGf,IAAIiB,MACbzB,KAAM,IAGJU,EAAO,SAAcgB,GAavB,MAAO,CACLF,KAXsB,mBAAbF,EACFA,EAAU,CACff,GAAImB,EAAKnB,GAAGkB,MACZjB,IAAKe,EAAGf,IAAIiB,MACZb,MAAOc,EAAKd,QAGPW,EAAGf,IAAIiB,MAAQ,IAAMC,EAAKnB,GAAGkB,MAKpCb,MAAOc,EAAKd,QAIhB,IAAK,IAAIM,KAAKK,EAAGZ,SACfF,EAAGT,KAAKmB,KAAKT,EAAKa,EAAGZ,SAASO,KAGhC,OAAOT,GAGT,IAAK,IAAIS,KAAKb,EACZI,EAAGU,KAAKT,EAAKL,EAAMa,KAGrB,OAAOT,GAGLkB,EAAY,SAAmBL,GACjC,IAAIb,EAAK,GAELC,EAAO,SAAca,GACvB,IAAIb,EAAO,SAAcgB,GAavB,MAVwB,mBAAbJ,EACFA,EAAU,CACff,GAAImB,EAAKnB,GAAGkB,MACZjB,IAAKe,EAAGf,IAAIiB,MACZb,MAAOc,EAAKd,QAGPW,EAAGf,IAAIiB,MAAQ,IAAMC,EAAKnB,GAAGkB,OAMxC,IAAK,IAAIP,KAAKK,EAAGZ,SACfF,EAAGU,KAAKT,EAAKa,EAAGZ,SAASO,MAI7B,IAAK,IAAIA,KAAKb,EACZK,EAAKL,EAAMa,IAGb,OAAOT,GAaTP,EAVS,CACPmB,UAAWA,EACXM,UAAWA,EACX3B,KAAM,CACJ4B,MAAOzB,EACP0B,KAAMzB,EACN0B,OAAQH,IACRI,OAAQV","file":"toolkit/component/explainer/deno_ci_inds.js","sourcesContent":["/**\n * Created by leonlin on 16/11/3.\n */\ndefine(['simulate'], function (simulate) {\n  return function (data, tools, callback) {\n    var nodesDes = tools.nodesDes;\n    var kpisDes = tools.kpisDes;\n    var instance = tools.instance;\n    var simulateFn = tools.simulate; //var data = simulate(\"ci\", nodesDes, kpisDes, instance, simulateFn);\n\n    var regroup = function regroup(ci, kpi) {\n      var rs = [];\n\n      var loop = function loop(kpi) {\n        var rs = {\n          kpi: kpi,\n          children: []\n        };\n\n        var findValue = function findValue(ci, kpi) {\n          var find = data.find(function (elem) {\n            return elem.kpiCode == kpi.id && elem.nodeId == ci.id;\n          });\n\n          if (find) {\n            return find.value;\n          } else {\n            return \"-\";\n          }\n        };\n\n        var loop = function loop(ci) {\n          return {\n            ci: ci,\n            value: findValue(ci, kpi)\n          };\n        };\n\n        for (var i in ci) {\n          rs.children.push(loop(ci[i]));\n        }\n\n        return rs;\n      };\n\n      for (var i in kpi) {\n        rs.push(loop(kpi[i]));\n      }\n\n      return rs;\n    };\n\n    var group = regroup(nodesDes, kpisDes);\n\n    var getSeries = function getSeries(formatter) {\n      var rs = [];\n\n      var loop = function loop(gr) {\n        var rs = {\n          name: gr.kpi.label,\n          data: []\n        };\n\n        var loop = function loop(item) {\n          var name;\n\n          if (typeof formatter == \"function\") {\n            name = formatter({\n              ci: item.ci.label,\n              kpi: gr.kpi.label,\n              value: item.value\n            });\n          } else {\n            name = gr.kpi.label + \"-\" + item.ci.label;\n          }\n\n          return {\n            name: name,\n            value: item.value\n          };\n        };\n\n        for (var i in gr.children) {\n          rs.data.push(loop(gr.children[i]));\n        }\n\n        return rs;\n      };\n\n      for (var i in group) {\n        rs.push(loop(group[i]));\n      }\n\n      return rs;\n    };\n\n    var getLegend = function getLegend(formatter) {\n      var rs = [];\n\n      var loop = function loop(gr) {\n        var loop = function loop(item) {\n          var name;\n\n          if (typeof formatter == \"function\") {\n            name = formatter({\n              ci: item.ci.label,\n              kpi: gr.kpi.label,\n              value: item.value\n            });\n          } else {\n            name = gr.kpi.label + \"-\" + item.ci.label;\n          }\n\n          return name;\n        };\n\n        for (var i in gr.children) {\n          rs.push(loop(gr.children[i]));\n        }\n      };\n\n      for (var i in group) {\n        loop(group[i]);\n      }\n\n      return rs;\n    };\n\n    var rs = {\n      getSeries: getSeries,\n      getLegend: getLegend,\n      data: {\n        nodes: nodesDes,\n        kpis: kpisDes,\n        legend: getLegend(),\n        series: getSeries()\n      }\n    };\n    callback(rs);\n  };\n});"],"sourceRoot":"/source/"}