{"version":3,"sources":["toolkit/component/explainer/deno_time.js"],"names":["define","simulate","dt","tools","callback","Info","item","nodesDes","kpisDes","format","instance","result","data","map","elem","Date","arisingTime","year","getFullYear","month","getMonth","allMonth","xAxis","i","indexOf","push","sort","loopNodeDes","node","loopKpisDes","kpi","obj","name","ci","label","value","find","el","kpiCode","id","nodeId","getLegend","getxAxis","parseInt","FormatByString","getSeries","clone","$clone","itm"],"mappings":"AAGAA,OAAO,CAAC,YAAa,SAAUC,GAC7B,OAAO,SAAUC,EAAIC,EAAOC,GACfD,EAAME,KAAjB,IAiByBC,EAhBrBC,EAAWJ,EAAMI,SACjBC,EAAUL,EAAMK,QAGhBC,GAFWN,EAAMO,SACJP,EAAMF,SACVE,EAAMM,QACfE,EAAS,GAETC,EAAOV,EAAGW,IAAI,SAAUC,GAC1B,IAAIZ,EAAK,IAAIa,KAAKD,EAAKE,aACnBC,EAAOf,EAAGgB,cACVC,EAAQjB,EAAGkB,WAEf,OADAN,EAAKO,SAAkB,GAAPJ,EAAYE,EACrBL,IAELQ,EAAQ,GAUZ,IAAK,IAAIC,KAAKX,EARWN,EASlBM,EAAKW,IAR2B,GAAjCD,EAAME,QAAQlB,EAAKe,WACrBC,EAAMG,KAAKnB,EAAKe,UAWpBC,EAAQA,EAAMI,OAEd,IA2BIC,EAAc,SAAqBC,GACrC,IAAIC,EAAc,SAAqBC,GACrC,IAAIC,EAAM,CACRC,KAAM,CACJC,GAAIL,EAAKM,MACTJ,IAAKA,EAAII,OAEXC,MAAOb,EAAMT,IAAI,SAAUC,GACzB,IAAIsB,EAAOxB,EAAKwB,KAAK,SAAUC,GAC7B,OAAOvB,GAAQuB,EAAGhB,UAAYgB,EAAGC,SAAWR,EAAIS,IAAMF,EAAGG,QAAUZ,EAAKW,KAG1E,OAAIH,GAGK,MAMbzB,EAAOc,KAAKM,IAGd,IAAK,IAAIR,KAAKf,EACZqB,EAAYrB,EAAQe,KAIxB,IAAK,IAAIA,KAAKhB,EACZoB,EAAYpB,EAASgB,IAIvBnB,EAAS,CACPO,OAAQA,EACR8B,UA/Dc,WACd,OAAOjC,EAAQK,IAAI,SAAUC,GAC3B,OAAOA,EAAKoB,SA8DdQ,SA1Da,WAMb,MAAO,CALEpB,EAAMT,IAAI,SAAUC,GAG3B,OADW,IAAIC,KAAK4B,SAAS7B,EAAO,IAAM,KAAOA,EAAO,GAAK,IACjD8B,eAAenC,OAuD7BoC,UAlDc,WASd,OARSlC,EAAOE,IAAI,SAAUP,GAC5B,IAAIwC,EAAQxC,EAAKyC,SAKjB,OAJAD,EAAMd,KAAOc,EAAMd,KAAKF,IACxBgB,EAAMlC,KAAOkC,EAAMX,MAAMtB,IAAI,SAAUmC,GACrC,OAAOA,EAAIb,QAENW","file":"toolkit/component/explainer/deno_time.js","sourcesContent":["/**\n * Created by leonlin on 16/11/3.\n */\ndefine([\"simulate\"], function (simulate) {\n  return function (dt, tools, callback) {\n    var Info = tools.Info;\n    var nodesDes = tools.nodesDes;\n    var kpisDes = tools.kpisDes;\n    var instance = tools.instance;\n    var simulateFn = tools.simulate;\n    var format = tools.format;\n    var result = []; //var data = simulate(\"time\", nodesDes, kpisDes, instance, simulateFn);\n\n    var data = dt.map(function (elem) {\n      var dt = new Date(elem.arisingTime);\n      var year = dt.getFullYear();\n      var month = dt.getMonth();\n      elem.allMonth = year * 12 + month;\n      return elem;\n    });\n    var xAxis = [];\n\n    var loop = function loop(item) {\n      if (xAxis.indexOf(item.allMonth) == -1) {\n        xAxis.push(item.allMonth);\n      }\n\n      ;\n    };\n\n    for (var i in data) {\n      loop(data[i]);\n    }\n\n    ;\n    xAxis = xAxis.sort();\n\n    var getLegend = function getLegend() {\n      return kpisDes.map(function (elem) {\n        return elem.label;\n      });\n    };\n\n    var getxAxis = function getxAxis() {\n      var rs = xAxis.map(function (elem) {\n        var str = elem / 12 + \"-\" + (elem % 12 + 1);\n        var time = new Date(parseInt(elem / 12) + \"-\" + (elem % 12 + 1));\n        return time.FormatByString(format);\n      });\n      return [rs];\n    };\n\n    var getSeries = function getSeries() {\n      var rs = result.map(function (item) {\n        var clone = item.$clone();\n        clone.name = clone.name.kpi;\n        clone.data = clone.value.map(function (itm) {\n          return itm.value;\n        });\n        return clone;\n      });\n      return rs;\n    };\n\n    var loopNodeDes = function loopNodeDes(node) {\n      var loopKpisDes = function loopKpisDes(kpi) {\n        var obj = {\n          name: {\n            ci: node.label,\n            kpi: kpi.label\n          },\n          value: xAxis.map(function (elem) {\n            var find = data.find(function (el) {\n              return elem == el.allMonth && el.kpiCode == kpi.id && el.nodeId == node.id;\n            });\n\n            if (find) {\n              return find;\n            } else {\n              return {};\n            }\n\n            ;\n          })\n        };\n        result.push(obj);\n      };\n\n      for (var i in kpisDes) {\n        loopKpisDes(kpisDes[i]);\n      }\n    };\n\n    for (var i in nodesDes) {\n      loopNodeDes(nodesDes[i]);\n    }\n\n    ;\n    callback({\n      result: result,\n      getLegend: getLegend,\n      getxAxis: getxAxis,\n      getSeries: getSeries\n    });\n  };\n});"],"sourceRoot":"/source/"}