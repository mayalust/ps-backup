{"version":3,"sources":["toolkit/component/echart2.js"],"names":["define","commonMethod","data","growl","expression","wrap","$","echartDom","element","global","buttonEnabled","serviceCenterService","kqiManagerUIService","angularStyle","timeout","window","route","previewMode","rootScope","Info","SwSocket","scope","ngDialog","$attr","style","css","height","append","$$","runExpression","funRes","code","fnResult","system","initFn","loadExternalJs","echarts","target","e","render","option","init","setOption"],"mappings":"AAGAA,OAAO,CAAC,gBAAiB,SAAUC,GACjC,OAAO,SAAUC,GASHA,EAAKC,MARjB,IA+BIC,EArBAC,EAAOC,EAAE,eACTC,EAAYD,EAAE,eACdE,EAAUN,EAAKM,QAMfC,GALgBP,EAAKQ,cACER,EAAKS,qBACNT,EAAKU,oBACZV,EAAKW,aACVX,EAAKY,QACNZ,EAAKO,QACLP,EAAKa,OACNb,EAAKc,MACCd,EAAKe,YACPf,EAAKgB,UACVhB,EAAKiB,KACDjB,EAAKkB,SACRlB,EAAKmB,MACFnB,EAAKoB,SACLd,EAAQe,MAAM,iBAMzBf,EAAQgB,QACVnB,EAAKoB,IAAIjB,EAAQgB,OACjBjB,EAAUkB,IAAI,SAAUjB,EAAQgB,MAAME,QACtCrB,EAAKoB,IAAI,SAAU,SAIrBpB,EAAKsB,OAAOpB,GACZqB,GAAGC,cAAcrB,EAAQe,MAAM,sBAAuB,SAAUO,GAC9D,GAAmB,KAAfA,EAAOC,KAAa,CACtB,IAAIC,EAAWF,EAAO5B,KAQtBE,GALEA,EADqB,mBAAZ4B,EACIA,EAAS9B,EAAM+B,QAEfD,IAGwB,QAEvC5B,EAAa,KAMDA,EAAWmB,MAAM,gBAAjC,IACIW,EAAS9B,EAAWmB,MAAM,WAmB9B,OAlBAK,GAAGO,eAAe,CAAC,UAAW,YAAa,SAAUC,GACnD,GAAIF,EACF,IACEA,EAAO,CACLG,OAAQ7B,EACRC,OAAQA,EACR2B,QAASA,IAEX,MAAOE,IAKX9B,EAAQ+B,OAAS,SAAUC,GACzB,IAAIH,EAAwBA,EAASD,EAAQK,KAAKlC,EAAU,GAAI,YAChE8B,EAAOK,UAAUF,MAGdnC","file":"toolkit/component/echart2.js","sourcesContent":["/**\n * Created by leonlin on 16/11/3.\n */\ndefine(['commonMethod'], function (commonMethod) {\n  return function (data) {\n    var run, baseOption;\n    var extension = {};\n    var expression;\n    var target;\n    var echartTarget;\n    var zoomOld;\n    var mapJson;\n    var tg = {};\n    var growl = data.growl;\n    var elemData = data;\n    var wrap = $(\"<div></div>\");\n    var echartDom = $(\"<div></div>\");\n    var element = data.element;\n    var buttonEnabled = data.buttonEnabled;\n    var serviceCenterService = data.serviceCenterService;\n    var kqiManagerUIService = data.kqiManagerUIService;\n    var angularStyle = data.angularStyle;\n    var timeout = data.timeout;\n    var global = data.global;\n    var window = data.window;\n    var route = data.route;\n    var previewMode = data.previewMode;\n    var rootScope = data.rootScope;\n    var Info = data.Info;\n    var SwSocket = data.SwSocket;\n    var scope = data.scope;\n    var ngDialog = data.ngDialog;\n    var kqiModel = element.$attr(\"data/kqiModel\");\n    var ci, kpi;\n    var oriLength = 0;\n    var loadData = [];\n    var expression;\n\n    if (element.style) {\n      wrap.css(element.style);\n      echartDom.css(\"height\", element.style.height);\n      wrap.css(\"height\", \"auto\");\n    }\n\n    ;\n    wrap.append(echartDom);\n    $$.runExpression(element.$attr(\"advance/expression\"), function (funRes) {\n      if (funRes.code == \"0\") {\n        var fnResult = funRes.data;\n\n        if (typeof fnResult == 'function') {\n          expression = fnResult(data, system);\n        } else {\n          expression = fnResult;\n        }\n\n        expression = expression ? expression : {};\n      } else {\n        expression = {};\n        ;\n      }\n\n      ;\n    });\n    var extension = expression.$attr(\"on/extension\") || [];\n    var initFn = expression.$attr(\"on/init\");\n    $$.loadExternalJs(['echarts', 'macarons'], function (echarts) {\n      if (initFn) {\n        try {\n          initFn({\n            target: element,\n            global: global,\n            echarts: echarts\n          });\n        } catch (e) {\n          ;\n        }\n      }\n\n      element.render = function (option) {\n        var target = echartTarget = target = echarts.init(echartDom[0], \"macarons\");\n        target.setOption(option);\n      };\n    });\n    return wrap;\n  };\n});"],"sourceRoot":"/source/"}