{"version":3,"sources":["toolkit/component/sparkline.js"],"names":["define","data","expression","element","timeout","wrap","$","sparkline","addClass","append","$$","runExpression","$attr","funRes","code","fnResult","system","initFn","render","config","children","remove","sparkbar","h5","css","color","span","text","title","type","barColor","elem","toString","loadExternalJs","target"],"mappings":"AAGAA,OAAO,GAAI,WACT,OAAO,SAAUC,GACf,IAKIC,EALAC,EAAUF,EAAKE,QACfC,EAAUH,EAAKG,QACfC,EAAOC,EAAE,eACTC,EAAYD,EAAE,eAAeE,SAAS,mCAC1CH,EAAKI,OAAOF,GAEZG,GAAGC,cAAcR,EAAQS,MAAM,sBAAuB,SAAUC,GAC9D,GAAmB,KAAfA,EAAOC,KAAa,CACtB,IAAIC,EAAWF,EAAOZ,KAQtBC,GALEA,EADqB,mBAAZa,EACIA,EAASd,EAAMe,QAEfD,IAGwB,QAEvCb,EAAa,KAIjB,IAAIe,EAASf,EAAWU,MAAM,WA4B9B,OAVAT,EAAQe,OAhBK,SAAgBC,GAC3BZ,EAAUa,WAAWC,SACrB,IAAIC,EAAWhB,EAAE,eAAeE,SAAS,gBACrCe,EAAKjB,EAAE,aAAaE,SAAS,sBAAsBgB,IAAI,QAASL,EAAOM,OACvEC,EAAOpB,EAAE,iBAAiBE,SAAS,oBAAoBgB,IAAI,QAASL,EAAOM,OAC/EC,EAAKC,KAAKR,EAAOS,OACjBrB,EAAUE,OAAOa,GAAUb,OAAOc,GAAId,OAAOiB,GAC7CtB,EAAQ,WACNkB,EAASf,UAAUY,EAAOlB,KAAM,CAC9B4B,KAAM,MACNC,SAAUX,EAAOM,UAGrBF,EAAGI,KAAKI,KAAK9B,KAAK+B,aAIpB5B,EAAQ,WACNM,GAAGuB,eAAe,CAAC,aAAc,SAAU1B,GACrCU,GACFA,EAAO,CACLiB,OAAQ/B,QAKTE","file":"toolkit/component/sparkline.js","sourcesContent":["/**\n * Created by leonlin on 16/11/3.\n */\ndefine([], function () {\n  return function (data) {\n    var element = data.element;\n    var timeout = data.timeout;\n    var wrap = $(\"<div></div>\");\n    var sparkline = $(\"<div></div>\").addClass(\"description-block margin-bottom\");\n    wrap.append(sparkline);\n    var expression;\n    $$.runExpression(element.$attr(\"advance/expression\"), function (funRes) {\n      if (funRes.code == \"0\") {\n        var fnResult = funRes.data;\n\n        if (typeof fnResult == 'function') {\n          expression = fnResult(data, system);\n        } else {\n          expression = fnResult;\n        }\n\n        expression = expression ? expression : {};\n      } else {\n        expression = {};\n        ; //throw new Error(funRes.message);\n      }\n    });\n    var initFn = expression.$attr(\"on/init\");\n\n    var render = function render(config) {\n      sparkline.children().remove();\n      var sparkbar = $(\"<div></div>\").addClass(\"sparkbar pad\");\n      var h5 = $(\"<h5></h5>\").addClass(\"description-header\").css(\"color\", config.color);\n      var span = $(\"<span></span>\").addClass(\"description-text\").css(\"color\", config.color);\n      span.text(config.title);\n      sparkline.append(sparkbar).append(h5).append(span);\n      timeout(function () {\n        sparkbar.sparkline(config.data, {\n          type: 'bar',\n          barColor: config.color\n        });\n      });\n      h5.text(elem.data.toString());\n    };\n\n    element.render = render;\n    timeout(function () {\n      $$.loadExternalJs(['sparkline'], function (sparkline) {\n        if (initFn) {\n          initFn({\n            target: element\n          });\n        }\n      });\n    });\n    return wrap;\n  };\n});"],"sourceRoot":"/source/"}