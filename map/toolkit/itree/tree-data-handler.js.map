{"version":3,"sources":["toolkit/itree/tree-data-handler.js"],"names":["define","init","dt","format","Node","data","traverseFn","traverse","repeat","element","hasOwnProperty","i","children","this","inx","parent","lv","Object","defineProperties","level","value","enumerable","prototype","$on","eventName","handler","cur","label","push","$trigger","funlist","fun","find","condition","node","callback","message","e","console","error","getParents","rs","reverse","isLast","indexOf","length","traverseParents","traverseChildren","getChildren","getBrothers","traverseBrothers","addChildren","child","filterNode","isFirst","updateChildren","hasDescendant","target","some","traverseDescendants","getDescendants","getLeafNodes","arr","Array","rootNode"],"mappings":"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","file":"toolkit/itree/tree-data-handler.js","sourcesContent":["define([], function () {\n  return {\n    init: function init(dt, format) {\n      function error(msg) {\n        this.msg = msg;\n      }\n\n      ;\n\n      function isEmptyArray(arr) {\n        if (!arr) return true;\n        if (!arr instanceof Array) return true;\n        return arr.length == 0;\n      }\n\n      var Node = function Node(data, format) {\n        if (format) {\n          var traverseFn = format.traverse;\n\n          var repeat = function repeat(element) {\n            if (traverseFn) {\n              traverseFn(element);\n            }\n\n            ;\n\n            if (element.hasOwnProperty(format[\"children\"])) {\n              element.children = element[format[\"children\"]];\n\n              for (var i in element.children) {\n                repeat(element.children[i]);\n              }\n            }\n          };\n\n          repeat(data);\n        }\n\n        ;\n\n        for (var i in data) {\n          this[i] = data[i];\n        }\n\n        ;\n      };\n\n      var repeat = function repeat(children, inx, parent, lv) {\n        //;\n        children[inx] = new Node(children[inx]);\n        Object.defineProperties(children[inx], {\n          'level': {\n            value: lv,\n            enumerable: false\n          },\n          'parent': {\n            value: parent,\n            enumerable: false\n          }\n        });\n\n        if (children[inx].hasOwnProperty(\"children\")) {\n          for (var i in children[inx].children) {\n            repeat(children[inx].children, i, children[inx], lv + 1);\n          }\n        }\n      };\n\n      var oldNode;\n\n      Node.prototype.$on = function (eventName, handler) {\n        var cur = this;\n\n        if (cur.label == \"K10辊道组\") {\n          // ;\n          if (oldNode != cur) {// ;\n          }\n\n          oldNode = cur; //;\n\n          if (cur['events']) {//;\n          }\n        }\n\n        ;\n        cur['events'] = cur['events'] || {};\n        cur['events'][eventName] = cur['events'][eventName] || [];\n        cur['events'][eventName].push(handler);\n        /**\n        if(cur.label == \"K10辊道组\") {\n          ;\n        };*/\n      };\n\n      Node.prototype.$trigger = function (eventName, data) {\n        var cur = this;\n\n        if (cur['events']) {\n          if (cur['events'][eventName]) {\n            var funlist = cur['events'][eventName];\n\n            for (var i in funlist) {\n              var fun = funlist[i];\n              fun(data);\n            }\n          }\n        }\n      };\n\n      Node.prototype.find = function (condition) {\n        var cur = this;\n        var find;\n        cur.traverse(function (node) {\n          if (condition(node)) {\n            find = find || node;\n          }\n        });\n        return find;\n      };\n\n      Node.prototype.traverse = function (callback) {\n        var cur = this;\n\n        var repeat = function repeat(element) {\n          if (element.level > 20) {\n            throw {\n              data: element,\n              message: \"循环超过20，陷入无限循环!\"\n            };\n          }\n\n          ;\n\n          if (callback) {\n            callback(element);\n          }\n\n          if (element.hasOwnProperty(\"children\")) {\n            for (var i in element.children) {\n              repeat(element.children[i]);\n            }\n          }\n        };\n\n        try {\n          repeat(cur);\n        } catch (e) {\n          console.error(e);\n        } finally {}\n      };\n\n      Node.prototype.getParents = function () {\n        var cur = this;\n        var rs = [];\n        var parent = cur.parent;\n\n        while (parent) {\n          rs.push(parent);\n          parent = parent.parent;\n        }\n\n        ;\n        return rs.reverse();\n      };\n\n      Node.prototype.isLast = function () {\n        var parent = this.parent;\n        if (!parent) return false;\n\n        if (!parent.children) {\n          ;\n          return false;\n        }\n\n        return parent.children.indexOf(this) == parent.children.length - 1;\n      };\n\n      Node.prototype.traverseParents = function (callback) {\n        var repeat = function repeat(element) {\n          if (element) {\n            if (callback) {\n              callback(element);\n            }\n\n            ;\n            repeat(element.parent);\n          }\n        };\n\n        repeat(this.parent);\n      };\n\n      Node.prototype.traverseChildren = function (callback) {\n        for (var i in this.children) {\n          callback(this.children[i]);\n        }\n      };\n\n      Node.prototype.getChildren = function (callback) {\n        var rs = [];\n\n        callback = callback || function () {\n          return true;\n        };\n\n        for (var i in this.children) {\n          if (callback(this.children[i])) {\n            rs.push(this.children[i]);\n          }\n\n          ;\n        }\n\n        return rs;\n      };\n\n      Node.prototype.getBrothers = function () {\n        var parent = this.parent || {};\n        var rs = [];\n\n        for (var i in parent.children) {\n          if (parent.children[i] != this) {\n            rs.push(parent.children[i]);\n          }\n        }\n\n        return rs;\n      };\n\n      Node.prototype.traverseBrothers = function (callback) {\n        var parent = this.parent;\n\n        for (var i in parent.children) {\n          if (parent.children[i] != this) {\n            callback(parent.children[i]);\n          }\n        }\n      };\n\n      Node.prototype.addChildren = function (child) {\n        var node = this;\n        node.children = node.children || [];\n        node.children.push(child);\n        var inx = node.children.indexOf(child);\n        repeat(node.children, inx, node, node.level + 1);\n      };\n\n      Node.prototype.filterNode = function (condition) {\n        var cur = this;\n        var rs = [];\n        this.traverse(function (node) {\n          if (condition(node)) {\n            rs.push(node);\n          }\n        });\n        return rs;\n      };\n\n      Node.prototype.isFirst = function () {\n        var parent = this.parent;\n        return parent ? parent.children.indexOf(this) == 0 : true;\n      };\n\n      Node.prototype.updateChildren = function (children) {\n        var node = this;\n        node.children = children;\n\n        for (var i in node.children) {\n          repeat(node.children, i, node, node.level + 1);\n        }\n      };\n      /**\n      Node.prototype.getDescendants = function(callback){\n        var cur = this;\n        var rs = [];\n        var repeat = function(element){\n          callback = callback || function(){\n              return true;\n            }\n          if(callback(element)){\n            rs.push(element);\n          }\n          if(element.hasOwnProperty(\"children\")){\n            for(var i in element.children){\n              repeat(element.children[i])\n            }\n          }\n        };\n        if(cur.hasOwnProperty(\"children\")){\n          for(var i in cur.children){\n            repeat(cur.children[i])\n          }\n        };\n        return rs;\n      };*/\n\n\n      Node.prototype.hasDescendant = function (target) {\n        var some = false;\n        this.traverseDescendants(function (node) {\n          if (target == node) {\n            some = true;\n          }\n\n          ;\n        });\n        return some;\n      };\n\n      Node.prototype.getDescendants = function (callback) {\n        var cur = this;\n        var rs = [];\n\n        callback = callback || function () {\n          return true;\n        };\n\n        var repeat = function repeat(element) {\n          if (callback(element)) {\n            rs.push(element);\n          }\n\n          if (element.hasOwnProperty(\"children\")) {\n            for (var i in element.children) {\n              repeat(element.children[i]);\n            }\n          }\n        };\n\n        if (cur.hasOwnProperty(\"children\")) {\n          for (var i in cur.children) {\n            repeat(cur.children[i]);\n          }\n        }\n\n        ;\n        return rs;\n      };\n\n      Node.prototype.getLeafNodes = function () {\n        var cur = this;\n        var rs = [];\n        cur.traverse(function (node) {\n          if (isEmptyArray(node.children)) {\n            rs.push(node);\n          }\n        });\n        return rs;\n      };\n\n      Node.prototype.traverseDescendants = function (callback) {\n        var cur = this;\n\n        var repeat = function repeat(element) {\n          if (callback) {\n            callback(element);\n          }\n\n          if (element.hasOwnProperty(\"children\")) {\n            for (var i in element.children) {\n              repeat(element.children[i]);\n            }\n          }\n        };\n\n        if (cur.hasOwnProperty(\"children\")) {\n          for (var i in cur.children) {\n            repeat(cur.children[i]);\n          }\n        }\n\n        ;\n      };\n\n      var rootNode = new Node(dt, format);\n      Object.defineProperties(rootNode, {\n        'level': {\n          value: 0,\n          enumerable: false\n        },\n        'parent': {\n          value: null,\n          enumerable: false\n        }\n      });\n\n      for (var i in rootNode.children) {\n        repeat(rootNode.children, i, rootNode, 1);\n      }\n\n      return rootNode;\n    }\n  };\n});"],"sourceRoot":"/source/"}