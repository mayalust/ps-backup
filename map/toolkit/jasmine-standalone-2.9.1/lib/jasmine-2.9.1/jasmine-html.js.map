{"version":3,"sources":["toolkit/jasmine-standalone-2.9.1/lib/jasmine-2.9.1/jasmine-html.js"],"names":["jasmineRequire","html","j$","ResultsNode","HtmlReporter","QueryString","HtmlSpecFilter","noopTimer","start","elapsed","ResultsStateBuilder","this","topResults","currentParent","specsExecuted","failureCount","pendingSpecCount","prototype","suiteStarted","result","addChild","last","suiteDone","parent","specStarted","specDone","status","options","htmlReporterMain","symbols","totalSpecsDefined","env","getContainer","createElement","createTextNode","onRaiseExceptionsClick","onThrowExpectationsClick","onRandomClick","addToExistingQueryString","key","value","filterSpecs","timer","failedSuites","initialize","oldReporter","find","removeChild","createDom","className","href","target","version","appendChild","jasmineStarted","summary","stateBuilder","push","failures","noExpectations","console","error","fullName","id","title","failure","specHref","messages","childNodes","i","failedExpectations","length","expectation","message","stack","jasmineDone","doneResult","banner","alert","order","type","for","raiseCheckbox","checked","catchingExceptions","onclick","throwCheckbox","throwingExpectationFailures","randomCheckbox","randomTests","optionsMenu","optionsTrigger","querySelector","optionsPayload","isOpen","test","replace","skippedMessage","skippedLink","seedBar","seed","statusBarMessage","statusBarClassName","pluralize","random","errorBarClassName","errorBarMessagePrefix","failedSuite","j","globalFailures","summaryList","resultsTree","domParent","specListNode","children","resultNode","hasActiveSpec","suiteListNode","description","getAttribute","specDescription","pendingReason","setMenuModeTo","failureNode","selector","attrs","childrenVarArgs","el","arguments","child","attr","setAttribute","singular","count","mode","passedExpectations","filterString","filterPattern","RegExp","matches","specName","navigateWithNewParam","getWindowLocation","search","fullStringWithNewParam","paramMap","queryStringToParamMap","qStrPairs","prop","encodeURIComponent","join","toQueryString","getParam","paramStr","substring","params","split","p","decodeURIComponent","JSON","parse"],"mappings":"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","file":"toolkit/jasmine-standalone-2.9.1/lib/jasmine-2.9.1/jasmine-html.js","sourcesContent":["/*\nCopyright (c) 2008-2018 Pivotal Labs\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\njasmineRequire.html = function (j$) {\n  j$.ResultsNode = jasmineRequire.ResultsNode();\n  j$.HtmlReporter = jasmineRequire.HtmlReporter(j$);\n  j$.QueryString = jasmineRequire.QueryString();\n  j$.HtmlSpecFilter = jasmineRequire.HtmlSpecFilter();\n};\n\njasmineRequire.HtmlReporter = function (j$) {\n  var noopTimer = {\n    start: function start() {},\n    elapsed: function elapsed() {\n      return 0;\n    }\n  };\n\n  function ResultsStateBuilder() {\n    this.topResults = new j$.ResultsNode({}, '', null);\n    this.currentParent = this.topResults;\n    this.specsExecuted = 0;\n    this.failureCount = 0;\n    this.pendingSpecCount = 0;\n  }\n\n  ResultsStateBuilder.prototype.suiteStarted = function (result) {\n    this.currentParent.addChild(result, 'suite');\n    this.currentParent = this.currentParent.last();\n  };\n\n  ResultsStateBuilder.prototype.suiteDone = function (result) {\n    if (this.currentParent !== this.topResults) {\n      this.currentParent = this.currentParent.parent;\n    }\n  };\n\n  ResultsStateBuilder.prototype.specStarted = function (result) {};\n\n  ResultsStateBuilder.prototype.specDone = function (result) {\n    this.currentParent.addChild(result, 'spec');\n\n    if (result.status !== 'disabled') {\n      this.specsExecuted++;\n    }\n\n    if (result.status === 'failed') {\n      this.failureCount++;\n    }\n\n    if (result.status == 'pending') {\n      this.pendingSpecCount++;\n    }\n  };\n\n  function HtmlReporter(options) {\n    var env = options.env || {},\n        getContainer = options.getContainer,\n        createElement = options.createElement,\n        createTextNode = options.createTextNode,\n        onRaiseExceptionsClick = options.onRaiseExceptionsClick || function () {},\n        onThrowExpectationsClick = options.onThrowExpectationsClick || function () {},\n        onRandomClick = options.onRandomClick || function () {},\n        addToExistingQueryString = options.addToExistingQueryString || defaultQueryString,\n        filterSpecs = options.filterSpecs,\n        timer = options.timer || noopTimer,\n        results = [],\n        htmlReporterMain,\n        symbols,\n        failedSuites = [];\n\n    this.initialize = function () {\n      clearPrior();\n      htmlReporterMain = createDom('div', {\n        className: 'jasmine_html-reporter'\n      }, createDom('div', {\n        className: 'jasmine-banner'\n      }, createDom('a', {\n        className: 'jasmine-title',\n        href: 'http://jasmine.github.io/',\n        target: '_blank'\n      }), createDom('span', {\n        className: 'jasmine-version'\n      }, j$.version)), createDom('ul', {\n        className: 'jasmine-symbol-summary'\n      }), createDom('div', {\n        className: 'jasmine-alert'\n      }), createDom('div', {\n        className: 'jasmine-results'\n      }, createDom('div', {\n        className: 'jasmine-failures'\n      })));\n      getContainer().appendChild(htmlReporterMain);\n    };\n\n    var totalSpecsDefined;\n\n    this.jasmineStarted = function (options) {\n      totalSpecsDefined = options.totalSpecsDefined || 0;\n      timer.start();\n    };\n\n    var summary = createDom('div', {\n      className: 'jasmine-summary'\n    });\n    var stateBuilder = new ResultsStateBuilder();\n\n    this.suiteStarted = function (result) {\n      stateBuilder.suiteStarted(result);\n    };\n\n    this.suiteDone = function (result) {\n      if (result.status == 'failed') {\n        failedSuites.push(result);\n      }\n\n      stateBuilder.suiteDone(result);\n    };\n\n    this.specStarted = function (result) {\n      stateBuilder.specStarted(result);\n    };\n\n    var failures = [];\n\n    this.specDone = function (result) {\n      stateBuilder.specDone(result);\n\n      if (noExpectations(result) && typeof console !== 'undefined' && typeof console.error !== 'undefined') {\n        console.error('Spec \\'' + result.fullName + '\\' has no expectations.');\n      }\n\n      if (!symbols) {\n        symbols = find('.jasmine-symbol-summary');\n      }\n\n      symbols.appendChild(createDom('li', {\n        className: noExpectations(result) ? 'jasmine-empty' : 'jasmine-' + result.status,\n        id: 'spec_' + result.id,\n        title: result.fullName\n      }));\n\n      if (result.status == 'failed') {\n        var failure = createDom('div', {\n          className: 'jasmine-spec-detail jasmine-failed'\n        }, createDom('div', {\n          className: 'jasmine-description'\n        }, createDom('a', {\n          title: result.fullName,\n          href: specHref(result)\n        }, result.fullName)), createDom('div', {\n          className: 'jasmine-messages'\n        }));\n        var messages = failure.childNodes[1];\n\n        for (var i = 0; i < result.failedExpectations.length; i++) {\n          var expectation = result.failedExpectations[i];\n          messages.appendChild(createDom('div', {\n            className: 'jasmine-result-message'\n          }, expectation.message));\n          messages.appendChild(createDom('div', {\n            className: 'jasmine-stack-trace'\n          }, expectation.stack));\n        }\n\n        failures.push(failure);\n      }\n    };\n\n    this.jasmineDone = function (doneResult) {\n      var banner = find('.jasmine-banner');\n      var alert = find('.jasmine-alert');\n      var order = doneResult && doneResult.order;\n      alert.appendChild(createDom('span', {\n        className: 'jasmine-duration'\n      }, 'finished in ' + timer.elapsed() / 1000 + 's'));\n      banner.appendChild(createDom('div', {\n        className: 'jasmine-run-options'\n      }, createDom('span', {\n        className: 'jasmine-trigger'\n      }, 'Options'), createDom('div', {\n        className: 'jasmine-payload'\n      }, createDom('div', {\n        className: 'jasmine-exceptions'\n      }, createDom('input', {\n        className: 'jasmine-raise',\n        id: 'jasmine-raise-exceptions',\n        type: 'checkbox'\n      }), createDom('label', {\n        className: 'jasmine-label',\n        'for': 'jasmine-raise-exceptions'\n      }, 'raise exceptions')), createDom('div', {\n        className: 'jasmine-throw-failures'\n      }, createDom('input', {\n        className: 'jasmine-throw',\n        id: 'jasmine-throw-failures',\n        type: 'checkbox'\n      }), createDom('label', {\n        className: 'jasmine-label',\n        'for': 'jasmine-throw-failures'\n      }, 'stop spec on expectation failure')), createDom('div', {\n        className: 'jasmine-random-order'\n      }, createDom('input', {\n        className: 'jasmine-random',\n        id: 'jasmine-random-order',\n        type: 'checkbox'\n      }), createDom('label', {\n        className: 'jasmine-label',\n        'for': 'jasmine-random-order'\n      }, 'run tests in random order')))));\n      var raiseCheckbox = find('#jasmine-raise-exceptions');\n      raiseCheckbox.checked = !env.catchingExceptions();\n      raiseCheckbox.onclick = onRaiseExceptionsClick;\n      var throwCheckbox = find('#jasmine-throw-failures');\n      throwCheckbox.checked = env.throwingExpectationFailures();\n      throwCheckbox.onclick = onThrowExpectationsClick;\n      var randomCheckbox = find('#jasmine-random-order');\n      randomCheckbox.checked = env.randomTests();\n      randomCheckbox.onclick = onRandomClick;\n      var optionsMenu = find('.jasmine-run-options'),\n          optionsTrigger = optionsMenu.querySelector('.jasmine-trigger'),\n          optionsPayload = optionsMenu.querySelector('.jasmine-payload'),\n          isOpen = /\\bjasmine-open\\b/;\n\n      optionsTrigger.onclick = function () {\n        if (isOpen.test(optionsPayload.className)) {\n          optionsPayload.className = optionsPayload.className.replace(isOpen, '');\n        } else {\n          optionsPayload.className += ' jasmine-open';\n        }\n      };\n\n      if (stateBuilder.specsExecuted < totalSpecsDefined) {\n        var skippedMessage = 'Ran ' + stateBuilder.specsExecuted + ' of ' + totalSpecsDefined + ' specs - run all';\n        var skippedLink = addToExistingQueryString('spec', '');\n        alert.appendChild(createDom('span', {\n          className: 'jasmine-bar jasmine-skipped'\n        }, createDom('a', {\n          href: skippedLink,\n          title: 'Run all specs'\n        }, skippedMessage)));\n      }\n\n      var statusBarMessage = '';\n      var statusBarClassName = 'jasmine-bar ';\n\n      if (totalSpecsDefined > 0) {\n        statusBarMessage += pluralize('spec', stateBuilder.specsExecuted) + ', ' + pluralize('failure', stateBuilder.failureCount);\n\n        if (stateBuilder.pendingSpecCount) {\n          statusBarMessage += ', ' + pluralize('pending spec', stateBuilder.pendingSpecCount);\n        }\n\n        statusBarClassName += stateBuilder.failureCount > 0 ? 'jasmine-failed' : 'jasmine-passed';\n      } else {\n        statusBarClassName += 'jasmine-skipped';\n        statusBarMessage += 'No specs found';\n      }\n\n      var seedBar;\n\n      if (order && order.random) {\n        seedBar = createDom('span', {\n          className: 'jasmine-seed-bar'\n        }, ', randomized with seed ', createDom('a', {\n          title: 'randomized with seed ' + order.seed,\n          href: seedHref(order.seed)\n        }, order.seed));\n      }\n\n      alert.appendChild(createDom('span', {\n        className: statusBarClassName\n      }, statusBarMessage, seedBar));\n      var errorBarClassName = 'jasmine-bar jasmine-errored';\n      var errorBarMessagePrefix = 'AfterAll ';\n\n      for (var i = 0; i < failedSuites.length; i++) {\n        var failedSuite = failedSuites[i];\n\n        for (var j = 0; j < failedSuite.failedExpectations.length; j++) {\n          alert.appendChild(createDom('span', {\n            className: errorBarClassName\n          }, errorBarMessagePrefix + failedSuite.failedExpectations[j].message));\n        }\n      }\n\n      var globalFailures = doneResult && doneResult.failedExpectations || [];\n\n      for (i = 0; i < globalFailures.length; i++) {\n        var failure = globalFailures[i];\n        alert.appendChild(createDom('span', {\n          className: errorBarClassName\n        }, errorBarMessagePrefix + failure.message));\n      }\n\n      var results = find('.jasmine-results');\n      results.appendChild(summary);\n      summaryList(stateBuilder.topResults, summary);\n\n      function summaryList(resultsTree, domParent) {\n        var specListNode;\n\n        for (var i = 0; i < resultsTree.children.length; i++) {\n          var resultNode = resultsTree.children[i];\n\n          if (filterSpecs && !hasActiveSpec(resultNode)) {\n            continue;\n          }\n\n          if (resultNode.type == 'suite') {\n            var suiteListNode = createDom('ul', {\n              className: 'jasmine-suite',\n              id: 'suite-' + resultNode.result.id\n            }, createDom('li', {\n              className: 'jasmine-suite-detail'\n            }, createDom('a', {\n              href: specHref(resultNode.result)\n            }, resultNode.result.description)));\n            summaryList(resultNode, suiteListNode);\n            domParent.appendChild(suiteListNode);\n          }\n\n          if (resultNode.type == 'spec') {\n            if (domParent.getAttribute('class') != 'jasmine-specs') {\n              specListNode = createDom('ul', {\n                className: 'jasmine-specs'\n              });\n              domParent.appendChild(specListNode);\n            }\n\n            var specDescription = resultNode.result.description;\n\n            if (noExpectations(resultNode.result)) {\n              specDescription = 'SPEC HAS NO EXPECTATIONS ' + specDescription;\n            }\n\n            if (resultNode.result.status === 'pending' && resultNode.result.pendingReason !== '') {\n              specDescription = specDescription + ' PENDING WITH MESSAGE: ' + resultNode.result.pendingReason;\n            }\n\n            specListNode.appendChild(createDom('li', {\n              className: 'jasmine-' + resultNode.result.status,\n              id: 'spec-' + resultNode.result.id\n            }, createDom('a', {\n              href: specHref(resultNode.result)\n            }, specDescription)));\n          }\n        }\n      }\n\n      if (failures.length) {\n        alert.appendChild(createDom('span', {\n          className: 'jasmine-menu jasmine-bar jasmine-spec-list'\n        }, createDom('span', {}, 'Spec List | '), createDom('a', {\n          className: 'jasmine-failures-menu',\n          href: '#'\n        }, 'Failures')));\n        alert.appendChild(createDom('span', {\n          className: 'jasmine-menu jasmine-bar jasmine-failure-list'\n        }, createDom('a', {\n          className: 'jasmine-spec-list-menu',\n          href: '#'\n        }, 'Spec List'), createDom('span', {}, ' | Failures ')));\n\n        find('.jasmine-failures-menu').onclick = function () {\n          setMenuModeTo('jasmine-failure-list');\n        };\n\n        find('.jasmine-spec-list-menu').onclick = function () {\n          setMenuModeTo('jasmine-spec-list');\n        };\n\n        setMenuModeTo('jasmine-failure-list');\n        var failureNode = find('.jasmine-failures');\n\n        for (i = 0; i < failures.length; i++) {\n          failureNode.appendChild(failures[i]);\n        }\n      }\n    };\n\n    return this;\n\n    function find(selector) {\n      return getContainer().querySelector('.jasmine_html-reporter ' + selector);\n    }\n\n    function clearPrior() {\n      // return the reporter\n      var oldReporter = find('');\n\n      if (oldReporter) {\n        getContainer().removeChild(oldReporter);\n      }\n    }\n\n    function createDom(type, attrs, childrenVarArgs) {\n      var el = createElement(type);\n\n      for (var i = 2; i < arguments.length; i++) {\n        var child = arguments[i];\n\n        if (typeof child === 'string') {\n          el.appendChild(createTextNode(child));\n        } else {\n          if (child) {\n            el.appendChild(child);\n          }\n        }\n      }\n\n      for (var attr in attrs) {\n        if (attr == 'className') {\n          el[attr] = attrs[attr];\n        } else {\n          el.setAttribute(attr, attrs[attr]);\n        }\n      }\n\n      return el;\n    }\n\n    function pluralize(singular, count) {\n      var word = count == 1 ? singular : singular + 's';\n      return '' + count + ' ' + word;\n    }\n\n    function specHref(result) {\n      return addToExistingQueryString('spec', result.fullName);\n    }\n\n    function seedHref(seed) {\n      return addToExistingQueryString('seed', seed);\n    }\n\n    function defaultQueryString(key, value) {\n      return '?' + key + '=' + value;\n    }\n\n    function setMenuModeTo(mode) {\n      htmlReporterMain.setAttribute('class', 'jasmine_html-reporter ' + mode);\n    }\n\n    function noExpectations(result) {\n      return result.failedExpectations.length + result.passedExpectations.length === 0 && result.status === 'passed';\n    }\n\n    function hasActiveSpec(resultNode) {\n      if (resultNode.type == 'spec' && resultNode.result.status != 'disabled') {\n        return true;\n      }\n\n      if (resultNode.type == 'suite') {\n        for (var i = 0, j = resultNode.children.length; i < j; i++) {\n          if (hasActiveSpec(resultNode.children[i])) {\n            return true;\n          }\n        }\n      }\n    }\n  }\n\n  return HtmlReporter;\n};\n\njasmineRequire.HtmlSpecFilter = function () {\n  function HtmlSpecFilter(options) {\n    var filterString = options && options.filterString() && options.filterString().replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n    var filterPattern = new RegExp(filterString);\n\n    this.matches = function (specName) {\n      return filterPattern.test(specName);\n    };\n  }\n\n  return HtmlSpecFilter;\n};\n\njasmineRequire.ResultsNode = function () {\n  function ResultsNode(result, type, parent) {\n    this.result = result;\n    this.type = type;\n    this.parent = parent;\n    this.children = [];\n\n    this.addChild = function (result, type) {\n      this.children.push(new ResultsNode(result, type, this));\n    };\n\n    this.last = function () {\n      return this.children[this.children.length - 1];\n    };\n  }\n\n  return ResultsNode;\n};\n\njasmineRequire.QueryString = function () {\n  function QueryString(options) {\n    this.navigateWithNewParam = function (key, value) {\n      options.getWindowLocation().search = this.fullStringWithNewParam(key, value);\n    };\n\n    this.fullStringWithNewParam = function (key, value) {\n      var paramMap = queryStringToParamMap();\n      paramMap[key] = value;\n      return toQueryString(paramMap);\n    };\n\n    this.getParam = function (key) {\n      return queryStringToParamMap()[key];\n    };\n\n    return this;\n\n    function toQueryString(paramMap) {\n      var qStrPairs = [];\n\n      for (var prop in paramMap) {\n        qStrPairs.push(encodeURIComponent(prop) + '=' + encodeURIComponent(paramMap[prop]));\n      }\n\n      return '?' + qStrPairs.join('&');\n    }\n\n    function queryStringToParamMap() {\n      var paramStr = options.getWindowLocation().search.substring(1),\n          params = [],\n          paramMap = {};\n\n      if (paramStr.length > 0) {\n        params = paramStr.split('&');\n\n        for (var i = 0; i < params.length; i++) {\n          var p = params[i].split('=');\n          var value = decodeURIComponent(p[1]);\n\n          if (value === 'true' || value === 'false') {\n            value = JSON.parse(value);\n          }\n\n          paramMap[decodeURIComponent(p[0])] = value;\n        }\n      }\n\n      return paramMap;\n    }\n  }\n\n  return QueryString;\n};"],"sourceRoot":"/source/"}