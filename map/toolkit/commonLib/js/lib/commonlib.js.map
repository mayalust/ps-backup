{"version":3,"sources":["toolkit/commonLib/js/lib/commonlib.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","window","define","lib","ArrayHandler","data","current","visible","cur","this","getData","setCurrent","element","remove","filter","elem","first","show","hide","push","unshift","unshit","concat","array","each","callback","i","hasOwnProperty","sortBy","name","sort","a","b","setAllValue","attribute","value","find","arguments","argument","result","length","alert","findAll","recordListRemap","recordList","category","key","date","Date","timeStamp","getTime","split","time","splitKey","nodeId","parseInt","kpiname","instance","apply","call","nodename","Array","fun","Object","defineProperty","enumerable","$randomString","len","$chars","maxPos","pwd","charAt","Math","floor","random"],"mappings":"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","file":"toolkit/commonLib/js/lib/commonlib.js","sourcesContent":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function (window) {\n  define(function () {\n    var lib = {};\n    lib.ArrayHandler = ArrayHandler;\n    lib.recordListRemap = recordListRemap;\n\n    function ArrayHandler(data) {\n      var cur = this;\n      var current;\n      var visible;\n      cur.data = data;\n\n      cur.getData = function () {\n        return cur.data;\n      };\n\n      cur.setCurrent = function (element) {\n        current = element;\n      };\n\n      cur.current = function () {\n        return current;\n      };\n\n      cur.remove = function (element) {\n        this.data = this.data.filter(function (elem) {\n          return elem != element;\n        });\n      };\n\n      cur.first = function () {\n        return cur.data[0];\n      };\n\n      cur.show = function () {\n        visible = true;\n      };\n\n      cur.hide = function () {\n        visible = false;\n      };\n\n      cur.visible = function () {\n        return visible;\n      };\n\n      cur.push = function (elem) {\n        cur.data.push(elem);\n      };\n\n      cur.unshift = function (elem) {\n        cur.data.unshit(elem);\n      };\n\n      cur.concat = function (array) {\n        return cur.data.concat(array);\n      };\n\n      cur.each = function (callback) {\n        for (var i in cur.data) {\n          if (cur.data.hasOwnProperty(i)) {\n            callback(cur.data[i]);\n          }\n        }\n      };\n\n      cur.sortBy = function (name) {\n        cur.data = cur.data.sort(function (a, b) {\n          if (a[name] < b[name]) {\n            return -1;\n          } else {\n            return 1;\n          }\n        });\n      };\n\n      cur.setAllValue = function (attribute, value) {\n        for (var i in cur.data) {\n          (function (elem) {\n            elem[attribute] = value;\n          })(data[i]);\n        }\n      };\n\n      cur.find = function () {\n        if (_typeof(arguments[0]) == 'object') {\n          var argument = arguments[0];\n\n          for (var i in cur.data) {\n            var result = function (elem) {\n              for (var i in argument) {\n                var pair = function (attribute, value) {\n                  return elem[attribute] == value;\n                }(i, argument[i]);\n\n                if (!pair) {\n                  return undefined;\n                }\n              }\n\n              return elem;\n            }(data[i]);\n\n            if (result) {\n              return result;\n            }\n          }\n        } else if (arguments.length == 2) {\n          var attribute = arguments[0];\n          var value = arguments[1];\n\n          for (var i in cur.data) {\n            var result = function (elem) {\n              if (elem[attribute] == value) {\n                return elem;\n              }\n            }(data[i]);\n\n            if (result) {\n              return result;\n            }\n          }\n        } else {\n          alert(\"参数输入错误\");\n        }\n      };\n\n      cur.findAll = function (attribute, value) {\n        var result;\n\n        for (var i in cur.data) {\n          (function (elem) {\n            if (elem[attribute] == value) {\n              if (result) {\n                result.push(elem);\n              } else {\n                result = [elem];\n              }\n            }\n          })(data[i]);\n        }\n\n        return result;\n      };\n    }\n\n    ;\n\n    if (typeof Array.prototype.find != 'function') {\n      Array.prototype.find = function (fun) {\n        var cur = this;\n\n        for (var i in cur) {\n          if (fun(cur[i])) {\n            return cur[i];\n          }\n        }\n\n        return undefined;\n      };\n\n      Object.defineProperty(Array.prototype, \"find\", {\n        enumerable: false\n      });\n    }\n\n    window.$randomString = function (len) {\n      len = len || 32;\n      var $chars = 'ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678';\n      var maxPos = $chars.length;\n      var pwd = '';\n\n      for (i = 0; i < len; i++) {\n        pwd += $chars.charAt(Math.floor(Math.random() * maxPos));\n      }\n\n      return pwd;\n    };\n\n    function recordListRemap(recordList, category) {\n      var cur = this;\n      var MAP_TIME = {\n        'category': 'time',\n        'nodeId-instance-kpiname': 'value'\n      };\n      var MAP_CI = {\n        'category': 'nodeName',\n        'kpiname': 'value'\n      };\n      cur.recordList = new ArrayHandler(recordList);\n      cur.recordList.each(function (element) {\n        (function (category) {\n          if (category == \"time\") {\n            ;\n\n            for (var key in this) {\n              (function (key, value) {\n                if (key == 'category') {\n                  var date = new Date(value);\n                  this.date = date;\n                  this.timeStamp = date.getTime();\n                  this.date = value.split(\"T\")[0];\n                  this.time = value.split(\"T\")[1];\n                } else {\n                  var splitKey = key.split(\"-\");\n                  this.value = value;\n                  (function () {\n                    if (arguments.length == 2) {\n                      this.nodeId = parseInt(arguments[0]);\n                      this.kpiname = arguments[1];\n                    } else if (arguments.length == 3) {\n                      this.nodeId = parseInt(arguments[0]);\n                      this.instance = arguments[1];\n                      this.kpiname = arguments[2];\n                    }\n                  }).apply(this, splitKey);\n                }\n              }).call(this, key, this[key]);\n            }\n          } else {\n            for (var key in this) {\n              (function (key, value) {\n                if (key == 'category') {\n                  this.nodename = value;\n                } else {\n                  this.kpiname = key;\n                  this.value = value;\n                }\n              })(key, this[key]);\n            }\n          }\n        }).call(element, category);\n      });\n      return cur.recordList;\n    }\n\n    return lib;\n  });\n})(window);"],"sourceRoot":"/source/"}