{"version":3,"sources":["app-topo/js/filters/filter.js"],"names":["define","angular","module","filter","input","params","findKeyword","findGateway","keyword","gatewayId","console","log","undefined","Array","element","resourcesArray","some","elem","label","indexOf","result","i","used","push","show","channelType","nodeKeyword","containFilterWord","checked"],"mappings":"AAAAA,OAAO,CAAC,WAAY,SAAUC,GAC5B,IAAIC,EAASD,EAAQC,OAAO,SAC5BA,EAAOC,OAAO,oBAAqB,WAyCjC,OAxCA,SAAgBC,EAAOC,GACrB,IAGIC,EAAaC,EAFbC,EAAUH,EAAOG,QACjBC,EAAYJ,EAAOI,UAkCvB,OAhCAC,QAAQC,IAAIH,EAASC,GAELG,MAAXJ,GAAmC,IAAXA,GAA+B,IAAbC,EAGzCL,aAAiBS,MACVT,EAAMD,OAAO,SAAUW,GAC9B,QAAIA,EAAQC,0BAA0BF,SACpCP,EAAcQ,EAAQC,eAAeC,KAAK,SAAUC,GAClD,MAAe,IAAXT,GAA4BI,MAAXJ,IACoB,GAAhCS,EAAKC,MAAMC,QAAQX,KAK9BD,EAAcO,EAAQC,eAAeC,KAAK,SAAUC,GAClD,OAAIR,GACKQ,EAAKR,WAAaA,IAKtBH,GAAeC,KAMjB,GAzBFH,KAkCfF,EAAOC,OAAO,UAAW,WAavB,OAZA,SAAgBC,GACd,IAAIgB,EAAS,GAEb,IAAK,IAAIC,KAAKjB,EACS,GAAjBA,EAAMiB,GAAGC,MACXF,EAAOG,KAAKnB,EAAMiB,IAItB,OAAOD,KAKXlB,EAAOC,OAAO,YAAa,WAazB,OAZA,SAAgBC,GACd,IAAIgB,EAAS,GAEb,IAAK,IAAIC,KAAKjB,EACS,GAAjBA,EAAMiB,GAAGG,MACXJ,EAAOG,KAAKnB,EAAMiB,IAItB,OAAOD,KAKXlB,EAAOC,OAAO,kBAAmB,WAa/B,OAZA,SAAgBC,EAAOqB,GACrB,IAAIL,EAAS,GAEb,IAAK,IAAIC,KAAKjB,EACRA,EAAMiB,GAAGI,aAAeA,GAC1BL,EAAOG,KAAKnB,EAAMiB,IAItB,OAAOD,KAKXlB,EAAOC,OAAO,kBAAmB,WAqB/B,OApBA,SAAgBC,EAAOsB,GACrB,IAAIN,EAAS,GAEb,IAAK,IAAIC,KAAKjB,EAAO,CACnB,GAAIA,EAAMiB,GAAGH,MACX,IAAIS,GAA4D,GAAxCvB,EAAMiB,GAAGH,MAAMC,QAAQO,QAE3CC,GAAqB,GAKvBA,GAF8B,IAAfD,GAEsBtB,EAAMiB,GAAGO,UAChDR,EAAOG,KAAKnB,EAAMiB,IAItB,OAAOD","file":"app-topo/js/filters/filter.js","sourcesContent":["define([\"angular\"], function (angular) {\n  var module = angular.module(\"myapp\");\n  module.filter(\"subResourcefilter\", function () {\n    function filter(input, params) {\n      var result = [];\n      var keyword = params.keyword;\n      var gatewayId = params.gatewayId;\n      var findKeyword, findGateway;\n      console.log(keyword, gatewayId);\n\n      if ((keyword == undefined || keyword == '') && gatewayId == '') {\n        result = input;\n      } else {\n        if (input instanceof Array) {\n          result = input.filter(function (element) {\n            if (element.resourcesArray instanceof Array) {\n              findKeyword = element.resourcesArray.some(function (elem) {\n                if (keyword != '' && keyword != undefined) {\n                  return elem.label.indexOf(keyword) != -1;\n                } else {\n                  return true;\n                }\n              });\n              findGateway = element.resourcesArray.some(function (elem) {\n                if (gatewayId) {\n                  return elem.gatewayId == gatewayId;\n                } else {\n                  return true;\n                }\n              });\n              return findKeyword && findGateway;\n            } else {\n              return true;\n            }\n          });\n        } else {\n          result = [];\n        }\n      }\n\n      return result;\n    }\n\n    return filter;\n  });\n  module.filter(\"kpiDisp\", function () {\n    function filter(input) {\n      var result = [];\n\n      for (var i in input) {\n        if (input[i].used != true) {\n          result.push(input[i]);\n        }\n      }\n\n      return result;\n    }\n\n    return filter;\n  });\n  module.filter(\"checkshow\", function () {\n    function filter(input) {\n      var result = [];\n\n      for (var i in input) {\n        if (input[i].show != false) {\n          result.push(input[i]);\n        }\n      }\n\n      return result;\n    }\n\n    return filter;\n  });\n  module.filter(\"showOtherFilter\", function () {\n    function filter(input, channelType) {\n      var result = [];\n\n      for (var i in input) {\n        if (input[i].channelType != channelType) {\n          result.push(input[i]);\n        }\n      }\n\n      return result;\n    }\n\n    return filter;\n  });\n  module.filter(\"resourcesfilter\", function () {\n    function filter(input, nodeKeyword) {\n      var result = [];\n\n      for (var i in input) {\n        if (input[i].label) {\n          var containFilterWord = input[i].label.indexOf(nodeKeyword) != -1;\n        } else {\n          var containFilterWord = -1;\n        }\n\n        var noNeedFilter = nodeKeyword == \"\";\n\n        if (containFilterWord || noNeedFilter || input[i].checked) {\n          result.push(input[i]);\n        }\n      }\n\n      return result;\n    }\n\n    return filter;\n  });\n});"],"sourceRoot":"/source/"}