{"version":3,"sources":["app-editor/js/services/kpiDataService.js"],"names":["define","services","factory","serviceProxy","service","base","getRealTimeKpiData","nodeIds","kpiCodes","callBack","error","p","isRealTimeData","timePeriod","get","getRealTimeKpiDataWithKpiInfo","category","startTime","endTime","timeRange","statisticType","condList","getKpiHierarchyValueList","getChartProperty","item","key","i","properties","pt","name","getKpisInfo","kpiName2Code","displayKpi","dataSource","displayKpiSet","jQuery","isArray","subDisplayKpi","push","Number","code","getNodesInfo","filters","filter","filterObj","type","tmpNodeIds","split","j","saveData","data","callback","title","elements","viewTitle","viewName","viewType","content","JSON","stringify","console","log","getviews","getViewById","id","getAllUnits","updateView","viewId","originalViewId","param","parseInt"],"mappings":"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","file":"app-editor/js/services/kpiDataService.js","sourcesContent":["define(['app'], function (services) {\n  'use strict';\n\n  services.factory('kpiDataService', ['serviceProxy', function (serviceProxy) {\n    var service = {};\n    var base = \"kpiDataFlexService\";\n\n    service.getRealTimeKpiData = function (nodeIds, kpiCodes, callBack, error) {\n      var kpiQueryModel = {\n        isRealTimeData: true,\n        timePeriod: 0,\n        nodeIds: nodeIds,\n        kpiCodes: kpiCodes\n      };\n      var p = [\"psiot\", kpiQueryModel];\n      serviceProxy.get(base, \"getKpiValueList\", p, callBack, error);\n    };\n\n    service.getRealTimeKpiDataWithKpiInfo = function (nodeIds, kpiCodes, callBack, error) {\n      var kpiQueryModel = {\n        category: \"ci\",\n        isRealTimeData: true,\n        timePeriod: 0,\n        nodeIds: nodeIds,\n        kpiCodes: kpiCodes,\n        startTime: null,\n        endTime: null,\n        timeRange: \"\",\n        statisticType: \"psiot\",\n        condList: []\n      };\n      var p = [\"psiot\", kpiQueryModel];\n      serviceProxy.get(base, \"getKpiHierarchyValueList\", p, callBack, error);\n    };\n\n    service.getKpiHierarchyValueList = function (p, callBack, error) {\n      serviceProxy.get(base, \"getKpiHierarchyValueList\", p, callBack, error);\n    };\n\n    service.getChartProperty = function (item, key) {\n      for (var i in item.properties.item) {\n        var pt = item.properties.item[i];\n\n        if (pt.name == key) {\n          return pt;\n        }\n      }\n    };\n\n    service.getKpisInfo = function (item) {\n      var kpiCodes = [];\n      var kpiName2Code = [];\n      var displayKpi = item.dataSource.displayKpiSet.displayKpi;\n\n      if (jQuery.isArray(displayKpi)) {\n        for (var i in displayKpi) {\n          var subDisplayKpi = displayKpi[i];\n          kpiCodes.push(Number(subDisplayKpi.code));\n          kpiName2Code[subDisplayKpi.code] = subDisplayKpi.name;\n        }\n      } else {\n        kpiCodes.push(Number(displayKpi.code));\n        kpiName2Code[displayKpi.code] = displayKpi.name;\n      }\n\n      return [kpiCodes, kpiName2Code];\n    };\n\n    service.getNodesInfo = function (item) {\n      var timePeriod;\n      var nodeIds = [];\n\n      for (var i in item.dataSource.filters.filter) {\n        var filterObj = item.dataSource.filters.filter[i];\n\n        if (filterObj.type == \"ci\") {\n          var tmpNodeIds = filterObj.nodeIds.split(',');\n\n          for (var j in tmpNodeIds) {\n            nodeIds.push(Number(tmpNodeIds[j]));\n          }\n        } else if (filterObj.type == \"time\") {\n          timePeriod = Number(filterObj.timePeriod) * 60 * 1000;\n        }\n      }\n\n      return [nodeIds, timePeriod];\n    };\n\n    service.saveData = function (data, callback, error) {\n      var title = data.title;\n      var data = {\n        title: \"title\",\n        elements: data.data\n      };\n      var p = [{\n        viewTitle: title,\n        viewName: title,\n        viewType: \"designView\",\n        content: JSON.stringify(data)\n      }];\n      console.log(p);\n      serviceProxy.get(\"viewFlexService\", \"addView\", p, callback, error);\n    };\n\n    service.getviews = function (callback, error) {\n      serviceProxy.get(\"viewFlexService\", \"getAllMyViews\", [], callback, error);\n    };\n\n    service.getViewById = function (id, callback, error) {\n      serviceProxy.get(\"viewFlexService\", \"getViewById\", [id], callback, error);\n    };\n\n    service.getAllUnits = function (callback, error) {\n      serviceProxy.get(\"unitService\", \"getAllUnits\", [], callback, error);\n    };\n\n    service.updateView = function (viewId, data, callback, error) {\n      var title = data.title;\n      var data = {\n        title: \"title\",\n        elements: data.data\n      };\n      var p = [{\n        viewId: viewId,\n        originalViewId: 0,\n        viewTitle: title,\n        viewName: title,\n        viewType: \"designView\",\n        content: JSON.stringify(data)\n      }];\n      console.log(p);\n      serviceProxy.get(\"viewFlexService\", \"updateView\", p, callback, error);\n    };\n\n    service.getViewById = function (viewId, callback, error) {\n      var param = [parseInt(viewId)];\n      serviceProxy.get(\"viewFlexService\", \"getViewById\", param, callback, error);\n    };\n\n    return service;\n  }]);\n});"],"sourceRoot":"/source/"}