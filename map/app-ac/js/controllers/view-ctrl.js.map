{"version":3,"sources":["app-ac/js/controllers/view-ctrl.js"],"names":["define","controllers","BootstrapDialog","initController","$scope","$rootScope","$q","Info","solutionUIService","userLoginUIService","marketplaceUIService","modelDefinitionService","userUIService","growl","userInitService","placeList","userStatus","industryDic","getAllAppDatas","getSolutionsByStatus","returnObj","appDate","data","paramList","i","length","htmlViews","id","label","creator","createTime","newDateJson","viewIds","modelIds","industry","status","icon","desc","push","promise","industries","deferred","defer","findAllIndustry","code","resolve","then","viewUse","user","isAuthenticated","show","title","closable","message","escape","buttons","cssClass","action","dialogRef","applySolution","success","close","window","location","href","industryUser","$on","evt","d","$routeParams","queryplaceList","selectedIndustry","industryId","forEach","item","buySolution","ngDialog","viewFlexService","get","info","solutionIcons","serviceViews","managedByGroups","initViews","designView","getAllMyViews","v","viewList","view","description","test","JSON","parse","viewType","viewmenus","viewTitle","split","url","viewId","statusBg","statusLab","releaseStatus","viewLoadFinished","selectedView","changeViewModel","viewInfo","confirmView","getViewById","saveManageViewContent","selectedSolution","content","event","callback","warning","dialog","getSolutions","newSolution","confirm","serviceViewId","managedByGroup","saveSolution","addSolution","open","template","scope","dashboardEdit","solution","solutionEdit","solutionDesgin","solutionDelete","deleteSolution","splice","solutionPublish"],"mappings":"AAAAA,OAAO,CAAC,0BAA2B,oBAAqB,SAAUC,EAAaC,GAC7E,aAEAD,EAAYE,eAAe,aAAc,CAAC,SAAU,aAAc,KAAM,OAAQ,oBAAqB,qBAAsB,uBAAwB,yBAA0B,gBAAiB,QAAS,kBAAmB,SAAUC,EAAQC,EAAYC,EAAIC,EAAMC,EAAmBC,EAAoBC,EAAsBC,EAAwBC,EAAeC,EAAOC,GAC3WV,EAAOW,UAAY,GACnBX,EAAOY,WAAa,GACpBZ,EAAOa,YAAc,GAErB,IAAIC,EAAiB,WAEnBV,EAAkBW,qBAAqB,GAAI,SAAUC,GAInD,IAHA,IAAIC,EAAUD,EAAUE,KACpBC,EAAY,GAEPC,EAAI,EAAGA,EAAIH,EAAQI,OAAQD,IAAK,CACvC,IAAIE,EAAY,GAChBA,EAAU,GAAQL,EAAQG,GAAGG,GAC7BD,EAAU,MAAWL,EAAQG,GAAGI,MAChCF,EAAU,QAAaL,EAAQG,GAAGK,QAEL,MAAzBR,EAAQG,GAAGM,YAA+C,IAAzBT,EAAQG,GAAGM,WAC9CJ,EAAU,WAAgBK,YAAYV,EAAQG,GAAGM,YAEjDJ,EAAU,WAAgBL,EAAQG,GAAGM,WAGvCJ,EAAU,QAAaL,EAAQG,GAAGQ,QAClCN,EAAU,SAAcL,EAAQG,GAAGS,SACnCP,EAAU,SAAcL,EAAQG,GAAGU,SACnC9B,EAAOa,YAAYS,EAAU,WAAe,EAC5CA,EAAU,OAAYL,EAAQG,GAAGW,OACjCT,EAAU,KAAUL,EAAQG,GAAGY,KAC/BV,EAAU,KAAUL,EAAQG,GAAGa,KAI/Bd,EAAUe,KAAKZ,GAGjBtB,EAAOW,UAAYQ,EACnBlB,EAAWU,UAAYQ,KAsBvBgB,EAlBkB,WACpB,GAAInC,EAAOoC,WAGT,OAFAnC,EAAWmC,WAAapC,EAAOoC,gBAC/BtB,IAIF,IAAIuB,EAAWnC,EAAGoC,QAQlB,OAPA/B,EAAuBgC,gBAAgB,SAAUvB,GACzB,GAAlBA,EAAUwB,OACZxC,EAAOoC,WAAapB,EAAUE,KAC9BjB,EAAWmC,WAAapB,EAAUE,KAClCmB,EAASI,aAGNJ,EAASF,QAGJI,GAEVJ,GACFA,EAAQO,KAAK,WACX5B,MAKJd,EAAO2C,QAAU,SAAUb,GACrBzB,EAAmBuC,KAAKC,gBAC1B/C,EAAgBgD,KAAK,CACnBC,MAAO,KACPC,UAAU,EAEVC,QAAS,QAAUC,OAAOpB,EAASN,OAAS,MAC5C2B,QAAS,CAAC,CACR3B,MAAO,KACP4B,SAAU,cACVC,OAAQ,SAAgBC,GAEtB5C,EAAgB6C,cAAclD,EAAmBuC,KAAMd,EAASP,GAAI,SAAUP,GACtD,GAAlBA,EAAUwB,MACZ/B,EAAM+C,QAAQ,YAAa,MAG/BF,EAAUG,UAEX,CACDjC,MAAO,KACP6B,OAAQ,SAAgBC,GACtBA,EAAUG,aA+BhBC,OAAOC,SAASC,KAAO,YAKtBvD,EAAmBuC,KAAKC,iBAU3B7C,EAAOY,WAAa,MACpBZ,EAAO6D,aAAexD,EAAmBuC,KAAKd,UAV9C9B,EAAO8D,IAAI,qBAAsB,SAAUC,EAAKC,GAC1C3D,EAAmBuC,KAAKC,iBAC1B7C,EAAOY,WAAa,MACpBZ,EAAO6D,aAAexD,EAAmBuC,KAAKd,UAE9C9B,EAAOY,WAAa,UAQ5Bf,EAAYE,eAAe,eAAgB,CAAC,SAAU,aAAc,eAAgB,oBAAqB,qBAAsB,QAAS,SAAUC,EAAQC,EAAYgE,EAAc7D,EAAmBC,EAAoBI,GACzNT,EAAOkE,eAAiB,GACxBlE,EAAOmE,iBAAmB,GAEtBF,EAAaG,aACfnE,EAAWU,UAAU0D,QAAQ,SAAUC,GACjCA,EAAKxC,UAAYmC,EAAaG,YAAYpE,EAAOkE,eAAehC,KAAKoC,KAE3ErE,EAAWmC,WAAWiC,QAAQ,SAAUC,GAClCA,EAAK/C,IAAM0C,EAAaG,aAAYpE,EAAOmE,iBAAmBG,MAMtEtE,EAAO2C,QAAU,SAAUb,GACrBzB,EAAmBuC,KAAKC,gBAC1B/C,EAAgBgD,KAAK,CACnBC,MAAO,KACPC,UAAU,EAEVC,QAAS,QAAUC,OAAOpB,EAASN,OAAS,MAC5C2B,QAAS,CAAC,CACR3B,MAAO,KACP4B,SAAU,cACVC,OAAQ,SAAgBC,GACtBlD,EAAkBmE,YAAYzC,EAASP,GAAI,SAAUP,GAC7B,GAAlBA,EAAUwB,MACZ/B,EAAM+C,QAAQ,YAAa,MAG/BF,EAAUG,UAEX,CACDjC,MAAO,KACP6B,OAAQ,SAAgBC,GACtBA,EAAUG,aAKhBC,OAAOC,SAASC,KAAO,YAKtBvD,EAAmBuC,KAAKC,iBAU3B7C,EAAOY,WAAa,MACpBZ,EAAO6D,aAAexD,EAAmBuC,KAAKd,UAV9C9B,EAAO8D,IAAI,qBAAsB,SAAUC,EAAKC,GAC1C3D,EAAmBuC,KAAKC,iBAC1B7C,EAAOY,WAAa,MACpBZ,EAAO6D,aAAexD,EAAmBuC,KAAKd,UAE9C9B,EAAOY,WAAa,UAS5Bf,EAAYE,eAAe,qBAAsB,CAAC,SAAU,aAAc,OAAQ,oBAAqB,qBAAsB,uBAAwB,gBAAiB,QAAS,WAAY,kBAAmB,SAAUC,EAAQC,EAAYE,EAAMC,EAAmBC,EAAoBC,EAAsBE,EAAeC,EAAO+D,EAAUC,GAC7UzE,EAAOW,UAAY,GACnBV,EAAWU,UAAY,GACZR,EAAKuE,IAAI,wBAAyB,SAAUC,GACrD3E,EAAO4E,cAAgBD,EAAKC,cAC5B5E,EAAO6E,aAAeF,EAAKE,aAC3B7E,EAAO8E,gBAAkBH,EAAKG,kBAGhC,SAASC,IACP,IAAIC,EAAa,GACjBP,EAAgBQ,cAAc,SAAUjE,GACtC,GAAsB,GAAlBA,EAAUwB,KAAW,CAIvB,IAHA,IAAI0C,EAAIlE,EAAUE,KACdiE,EAAW,GAEN/D,EAAI,EAAGA,EAAI8D,EAAE7D,OAAQD,IAAK,CACjC,IAAIgE,EAAOF,EAAE9D,GAEb,GAAIgE,EAAM,CACRD,EAASjD,KAAKkD,GACd,IAAIC,EAAc,GAElB,GAA+B,iBAApBD,EAAKC,YAAyB,CACtB,gBACIC,KAAKF,EAAKC,eAG7BA,EAAcE,KAAKC,MAAMJ,EAAKC,cAIlC,GAAqB,aAAjBD,EAAKK,SAAyB,CAChC,IAAIC,EAAY,CACd3C,MAASqC,EAAKO,UAAUC,MAAM,KAAK,GACnCpE,MAAS4D,EAAKO,UAAUC,MAAM,KAAK,GACnCC,IAAO,KAAOT,EAAKK,SAAW,IAAML,EAAKU,OACzCA,OAAUV,EAAKU,OACfvE,GAAM6D,EAAKU,OACXV,KAAQA,EACRrD,OAAUsD,EAAY,OACtBU,SAAqC,GAAzBV,EAAY,OAAiB,SAAoC,GAAzBA,EAAY,OAAiB,WAAa,GAC9FW,UAAsC,GAAzBX,EAAY,OAAiB,KAAgC,GAAzBA,EAAY,OAAiB,KAAO,GACrFrD,KAAQ,oBAGgB,KAAtBoD,EAAKa,eACPjB,EAAW9C,KAAKwD,KAMxB1F,EAAOgF,WAAaA,EACpBP,EAAgByB,kBAAmB,EACnCzB,EAAgBU,SAAWA,EAC3BnF,EAAOmF,SAAWA,KAMxB,IAAIgB,EAAe,KAEnBnG,EAAOoG,gBAAkB,SAAUC,GACjCF,EAAeE,GAGjBrG,EAAOsG,YAAc,WACdH,EAKL1B,EAAgB8B,YAAYJ,EAAc,SAAUnF,GAC5B,GAAlBA,EAAUwB,MACZpC,EAAkBoG,sBAAsBC,EAAiBlF,GAAIP,EAAUE,KAAKwF,QAAS,SAAUC,GAC3E,GAAdA,EAAMnE,OACR/B,EAAM+C,QAAQ,OAAQ,IAElBoD,UACFA,gBAXRnG,EAAMoG,QAAQ,UAAW,KAmB7B,IA4BIC,EAdAC,EAAe,WACjB/G,EAAOW,UAAY,GACnBV,EAAWU,UAAY,GACvBP,EAAkB2G,aAAa,SAAU/F,GACjB,GAAlBA,EAAUwB,MACZxB,EAAUE,KAAKmD,QAAQ,SAAUC,GAC/BtE,EAAOW,UAAUuB,KAAKoC,GACtBrE,EAAWU,UAAUuB,KAAKoC,QAMlCtE,EAAOgH,YAAc,GAGrBhH,EAAOiH,QAAU,WACVjH,EAAOgH,YAAYxF,MAKnBxB,EAAOgH,YAAYE,cAKiB,GAArClH,EAAOgH,YAAYG,gBAA4D,GAArCnH,EAAOgH,YAAYG,eAK5DnH,EAAOgH,YAAYhF,KAKxB5B,EAAkBgH,aAAapH,EAAOgH,YAAa,SAAUhG,GACrC,GAAlBA,EAAUwB,OACPxC,EAAOgH,YAAYzF,KACtBtB,EAAWU,UAAUuB,KAAKlB,EAAUE,MACpClB,EAAOW,UAAUuB,KAAKlB,EAAUE,OAGlC4F,EAAOrD,QACPqD,EAAS,QAZXrG,EAAMoG,QAAQ,WAAY,IAL1BpG,EAAMoG,QAAQ,WAAY,IAL1BpG,EAAMoG,QAAQ,WAAY,IAL1BpG,EAAMoG,QAAQ,WAAY,KAgC9B7G,EAAOqH,YAAc,WACnBrH,EAAOgH,YAAc,GACrBF,EAAStC,EAAS8C,KAAK,CACrBC,SAAU,8BAEVC,MAAOxH,KAIX,IAAIyG,EAAmB,KAEvBzG,EAAOyH,cAAgB,SAAUC,GAC/BjB,EAAmBiB,EACnBZ,EAAStC,EAAS8C,KAAK,CACrBC,SAAU,2BACVC,MAAOxH,KASXA,EAAO2H,aAAe,SAAUD,GAC9B1H,EAAOgH,YAAcU,EACrBZ,EAAStC,EAAS8C,KAAK,CACrBC,SAAU,8BAEVC,MAAOxH,KAIXA,EAAO4H,eAAiB,SAAUF,GAED,IAD/BzH,EAAWwG,iBAAmBiB,GACjBP,eAAqBxD,SAASC,KAAO,gBAAqBD,SAASC,KAAO,YAGzF5D,EAAO6H,eAAiB,SAAUH,GAgBhC5H,EAAgBgD,KAAK,CACnBC,MAAO,KACPC,UAAU,EAEVC,QAAS,QAAUC,OAAOwE,EAASlG,OAAS,MAC5C2B,QAAS,CAAC,CACR3B,MAAO,KACP4B,SAAU,cACVC,OAAQ,SAAgBC,GAtB1BlD,EAAkB0H,eAAeJ,EAASnG,GAAI,SAAUP,GACtD,GAAsB,GAAlBA,EAAUwB,KAAW,CACvB,IAAK,IAAIpB,KAAKpB,EAAOW,UACnB,GAAIX,EAAOW,UAAUS,GAAGG,IAAMmG,EAASnG,GAErC,YADAvB,EAAOW,UAAUoH,OAAO3G,EAAG,GAK/BnB,EAAWU,UAAYX,EAAOW,aAgB9B2C,EAAUG,UAEX,CACDjC,MAAO,KACP6B,OAAQ,SAAgBC,GACtBA,EAAUG,cAMlBzD,EAAOgI,gBAAkB,SAAUN,GACjC,KAAsB,EAAlBA,EAAS3F,QAAb,CAkBAjC,EAAgBgD,KAAK,CACnBC,MAAO,KACPC,UAAU,EAEVC,QAAS,QAAUC,OAAOwE,EAASlG,OAAS,MAC5C2B,QAAS,CAAC,CACR3B,MAAO,KACP4B,SAAU,cACVC,OAAQ,SAAgBC,GAvB1BoE,EAAS3F,OAAS,GAClB3B,EAAkBgH,aAAaM,EAAU,SAAU1G,GACjD,GAAsB,GAAlBA,EAAUwB,KAAW,CACvB,IAAK,IAAIpB,KAAKpB,EAAOW,UACnB,GAAIX,EAAOW,UAAUS,GAAGG,IAAMmG,EAASnG,GAErC,YADAvB,EAAOW,UAAUS,GAAGW,OAAS2F,EAAS3F,QAK1C9B,EAAWU,UAAYX,EAAOW,aAe9B2C,EAAUG,UAEX,CACDjC,MAAO,KACP6B,OAAQ,SAAgBC,GACtBA,EAAUG,eAObpD,EAAmBuC,KAAKC,iBAQ3BkE,IACAhC,KARA/E,EAAO8D,IAAI,qBAAsB,SAAUC,EAAKC,GAC1C3D,EAAmBuC,KAAKC,kBAC1BkE,IACAhC","file":"app-ac/js/controllers/view-ctrl.js","sourcesContent":["define(['controllers/controllers', 'bootstrap-dialog'], function (controllers, BootstrapDialog) {\n  'use strict'; //首页默认进来\n\n  controllers.initController('myViewCtrl', ['$scope', '$rootScope', '$q', 'Info', 'solutionUIService', 'userLoginUIService', 'marketplaceUIService', 'modelDefinitionService', 'userUIService', 'growl', 'userInitService', function ($scope, $rootScope, $q, Info, solutionUIService, userLoginUIService, marketplaceUIService, modelDefinitionService, userUIService, growl, userInitService) {\n    $scope.placeList = \"\";\n    $scope.userStatus = \"\";\n    $scope.industryDic = {}; //不需要登录就能查询应用\n\n    var getAllAppDatas = function getAllAppDatas() {\n      //      marketplaceUIService.getActivedStandardAppDatas(function(appList) {\n      solutionUIService.getSolutionsByStatus(10, function (returnObj) {\n        var appDate = returnObj.data;\n        var paramList = [];\n\n        for (var i = 0; i < appDate.length; i++) {\n          var htmlViews = {};\n          htmlViews['id'] = appDate[i].id;\n          htmlViews['label'] = appDate[i].label;\n          htmlViews['creator'] = appDate[i].creator;\n\n          if (appDate[i].createTime != null && appDate[i].createTime != '') {\n            htmlViews['createTime'] = newDateJson(appDate[i].createTime);\n          } else {\n            htmlViews['createTime'] = appDate[i].createTime;\n          }\n\n          htmlViews['viewIds'] = appDate[i].viewIds;\n          htmlViews['modelIds'] = appDate[i].modelIds;\n          htmlViews['industry'] = appDate[i].industry;\n          $scope.industryDic[htmlViews['industry']] = true;\n          htmlViews['status'] = appDate[i].status;\n          htmlViews['icon'] = appDate[i].icon;\n          htmlViews['desc'] = appDate[i].desc; //          if (appDate[i].desc) {\n          //            htmlViews['description'] = JSON.parse(appDate[i].desc);\n          //          }\n\n          paramList.push(htmlViews);\n        }\n\n        $scope.placeList = paramList;\n        $rootScope.placeList = paramList;\n      });\n    };\n\n    var findAllIndustry = function findAllIndustry() {\n      if ($scope.industries) {\n        $rootScope.industries = $scope.industries;\n        getAllAppDatas();\n        return;\n      }\n\n      var deferred = $q.defer();\n      modelDefinitionService.findAllIndustry(function (returnObj) {\n        if (returnObj.code == 0) {\n          $scope.industries = returnObj.data;\n          $rootScope.industries = returnObj.data;\n          deferred.resolve();\n        }\n      });\n      return deferred.promise;\n    };\n\n    var promise = findAllIndustry();\n\n    if (promise) {\n      promise.then(function () {\n        getAllAppDatas();\n      });\n    } //使用视图点击事件\n\n\n    $scope.viewUse = function (industry) {\n      if (userLoginUIService.user.isAuthenticated) {\n        BootstrapDialog.show({\n          title: '提示',\n          closable: false,\n          //size:BootstrapDialog.SIZE_WIDE,\n          message: '确认应用 ' + escape(industry.label) + ' 吗？',\n          buttons: [{\n            label: '确定',\n            cssClass: 'btn-success',\n            action: function action(dialogRef) {\n              //              solutionUIService.buySolution(industry.id, function(returnObj) {\n              userInitService.applySolution(userLoginUIService.user, industry.id, function (returnObj) {\n                if (returnObj.code == 0) {\n                  growl.success(\"应用该服务方案成功\", {});\n                }\n              });\n              dialogRef.close();\n            }\n          }, {\n            label: '取消',\n            action: function action(dialogRef) {\n              dialogRef.close();\n            }\n          }]\n        }); //        if (userLoginUIService.user.industry == \"\" || userLoginUIService.user.industry == null || userLoginUIService.user.industry == 0) {\n        //          userLoginUIService.user.industry = industry;\n        //          userUIService.modifyIndustry(userLoginUIService.user.userID, userLoginUIService.user.industry, function(userData) {\n        //            if (userData.code == 0) {\n        //              console.log(\"修改用户行业成功\");\n        //              // window.location.href=\"app/index.html\";\n        //\n        //            }\n        //          });\n        //        }\n        //        if (userLoginUIService.user.industry == industry && userLoginUIService.user.industry != 0) {\n        //          marketplaceUIService.buy(id, function(appBuy) {\n        //            if (appBuy.code == 0) {\n        //              // alert(\"视图应用成功\");\n        //              console.log(\"视图应用成功\");\n        //              window.location.href = \"app/index.html\";\n        //            }\n        //            // else{\n        //            // \tconsole.log(\"视图应用失败\");\n        //            // \tgrowl.warning(\"视图应用失败!\", {});\n        //            // }\n        //\n        //          })\n        //        } else {\n        //          // alert(\"不是同一个行业，不让修改\");\n        //          growl.warning(\"亲，暂不支持切换行业方案哦！\", {});\n        //        }\n      } else {\n        window.location.href = \"#/myView\";\n      }\n    }; //判断用户是否存在\n\n\n    if (!userLoginUIService.user.isAuthenticated) {\n      $scope.$on('loginStatusChanged', function (evt, d) {\n        if (userLoginUIService.user.isAuthenticated) {\n          $scope.userStatus = \"yes\";\n          $scope.industryUser = userLoginUIService.user.industry;\n        } else {\n          $scope.userStatus = \"no\";\n        }\n      });\n    } else {\n      $scope.userStatus = \"yes\";\n      $scope.industryUser = userLoginUIService.user.industry;\n    }\n  }]);\n  controllers.initController('queryAllCtrl', ['$scope', '$rootScope', '$routeParams', 'solutionUIService', 'userLoginUIService', 'growl', function ($scope, $rootScope, $routeParams, solutionUIService, userLoginUIService, growl) {\n    $scope.queryplaceList = [];\n    $scope.selectedIndustry = {};\n\n    if ($routeParams.industryId) {\n      $rootScope.placeList.forEach(function (item) {\n        if (item.industry == $routeParams.industryId) $scope.queryplaceList.push(item);\n      });\n      $rootScope.industries.forEach(function (item) {\n        if (item.id == $routeParams.industryId) $scope.selectedIndustry = item;\n      });\n    }\n\n    ; //使用视图点击事件\n\n    $scope.viewUse = function (industry) {\n      if (userLoginUIService.user.isAuthenticated) {\n        BootstrapDialog.show({\n          title: '提示',\n          closable: false,\n          //size:BootstrapDialog.SIZE_WIDE,\n          message: '确认应用 ' + escape(industry.label) + ' 吗？',\n          buttons: [{\n            label: '确定',\n            cssClass: 'btn-success',\n            action: function action(dialogRef) {\n              solutionUIService.buySolution(industry.id, function (returnObj) {\n                if (returnObj.code == 0) {\n                  growl.success(\"应用该服务方案成功\", {});\n                }\n              });\n              dialogRef.close();\n            }\n          }, {\n            label: '取消',\n            action: function action(dialogRef) {\n              dialogRef.close();\n            }\n          }]\n        });\n      } else {\n        window.location.href = \"#/myView\";\n      }\n    }; //判断用户是否存在\n\n\n    if (!userLoginUIService.user.isAuthenticated) {\n      $scope.$on('loginStatusChanged', function (evt, d) {\n        if (userLoginUIService.user.isAuthenticated) {\n          $scope.userStatus = \"yes\";\n          $scope.industryUser = userLoginUIService.user.industry;\n        } else {\n          $scope.userStatus = \"no\";\n        }\n      });\n    } else {\n      $scope.userStatus = \"yes\";\n      $scope.industryUser = userLoginUIService.user.industry;\n    }\n  }]); //根据用户id查询用户拥有的应用或者设备\n\n  controllers.initController('userAppControllers', ['$scope', '$rootScope', 'Info', 'solutionUIService', 'userLoginUIService', 'marketplaceUIService', 'userUIService', 'growl', 'ngDialog', 'viewFlexService', function ($scope, $rootScope, Info, solutionUIService, userLoginUIService, marketplaceUIService, userUIService, growl, ngDialog, viewFlexService) {\n    $scope.placeList = [];\n    $rootScope.placeList = [];\n    var info = Info.get(\"localdb/solution.json\", function (info) {\n      $scope.solutionIcons = info.solutionIcons;\n      $scope.serviceViews = info.serviceViews;\n      $scope.managedByGroups = info.managedByGroups;\n    });\n\n    function initViews() {\n      var designView = [];\n      viewFlexService.getAllMyViews(function (returnObj) {\n        if (returnObj.code == 0) {\n          var v = returnObj.data;\n          var viewList = [];\n\n          for (var i = 0; i < v.length; i++) {\n            var view = v[i];\n\n            if (view) {\n              viewList.push(view);\n              var description = {};\n\n              if (typeof view.description == \"string\") {\n                var objectLike = /^\\{(.|\\n)*\\}$/;\n                var reg = objectLike.test(view.description);\n\n                if (reg) {\n                  description = JSON.parse(view.description);\n                }\n              }\n\n              if (view.viewType == \"dashboard\") {\n                var viewmenus = {\n                  \"title\": view.viewTitle.split(\"?\")[0],\n                  \"label\": view.viewTitle.split(\"?\")[0],\n                  \"url\": \"#/\" + view.viewType + \"/\" + view.viewId,\n                  \"viewId\": view.viewId,\n                  \"id\": view.viewId,\n                  \"view\": view,\n                  \"status\": description['status'],\n                  \"statusBg\": description[\"status\"] == 1 ? 'bg-red' : description[\"status\"] == 2 ? 'bg-green' : '',\n                  \"statusLab\": description[\"status\"] == 1 ? '授权' : description[\"status\"] == 2 ? '应用' : '',\n                  \"icon\": \"fa fa-area-chart\"\n                };\n\n                if (view.releaseStatus == \"1\") {\n                  designView.push(viewmenus);\n                }\n              }\n            }\n          }\n\n          $scope.designView = designView;\n          viewFlexService.viewLoadFinished = true;\n          viewFlexService.viewList = viewList;\n          $scope.viewList = viewList;\n        }\n      });\n    }\n\n    ;\n    var selectedView = null;\n\n    $scope.changeViewModel = function (viewInfo) {\n      selectedView = viewInfo;\n    };\n\n    $scope.confirmView = function () {\n      if (!selectedView) {\n        growl.warning(\"请选择一个视图\", {});\n        return;\n      }\n\n      viewFlexService.getViewById(selectedView, function (returnObj) {\n        if (returnObj.code == 0) {\n          solutionUIService.saveManageViewContent(selectedSolution.id, returnObj.data.content, function (event) {\n            if (event.code == 0) {\n              growl.success(\"操作成功\", {});\n\n              if (callback) {\n                callback();\n              }\n            }\n          });\n        }\n      });\n    };\n\n    var getMySolutions = function getMySolutions() {\n      marketplaceUIService.getMyAppDatas(function (appList) {\n        var appDate = appList.data;\n        var paramList = [];\n\n        for (var i = 0; i < appDate.length; i++) {\n          paramList.push(appDate[i]);\n        }\n\n        $scope.placeList = paramList;\n        $rootScope.placeList = $scope.placeList;\n      });\n    };\n\n    var getSolutions = function getSolutions() {\n      $scope.placeList = [];\n      $rootScope.placeList = [];\n      solutionUIService.getSolutions(function (returnObj) {\n        if (returnObj.code == 0) {\n          returnObj.data.forEach(function (item) {\n            $scope.placeList.push(item);\n            $rootScope.placeList.push(item);\n          });\n        }\n      });\n    };\n\n    $scope.newSolution = {};\n    var dialog;\n\n    $scope.confirm = function () {\n      if (!$scope.newSolution.label) {\n        growl.warning(\"方案名称不能为空\", {});\n        return;\n      }\n\n      if (!$scope.newSolution.serviceViewId) {\n        growl.warning(\"方案模板不能为空\", {});\n        return;\n      }\n\n      if ($scope.newSolution.managedByGroup != 0 && $scope.newSolution.managedByGroup != 1) {\n        growl.warning(\"方案类型不能为空\", {});\n        return;\n      }\n\n      if (!$scope.newSolution.icon) {\n        growl.warning(\"方案图标不能为空\", {});\n        return;\n      }\n\n      solutionUIService.saveSolution($scope.newSolution, function (returnObj) {\n        if (returnObj.code == 0) {\n          if (!$scope.newSolution.id) {\n            $rootScope.placeList.push(returnObj.data);\n            $scope.placeList.push(returnObj.data);\n          }\n\n          dialog.close();\n          dialog = null;\n        }\n      });\n    };\n\n    $scope.addSolution = function () {\n      $scope.newSolution = {};\n      dialog = ngDialog.open({\n        template: 'partials/solution-info.html',\n        //        className: 'ngdialog-theme-plain ',\n        scope: $scope\n      });\n    };\n\n    var selectedSolution = null;\n\n    $scope.dashboardEdit = function (solution) {\n      selectedSolution = solution;\n      dialog = ngDialog.open({\n        template: 'partials/views-info.html',\n        scope: $scope\n      });\n      /* 选中一个视图，而不是去新建一个视图\r\n      console.log(solution);\r\n      var solutionId = solution.id;\r\n      location.href = \"../app-freeboard/index.html#/freeboard/solution/solutionView/\" + solutionId + \"/\" + solution.serviceViewId;\r\n      */\n    };\n\n    $scope.solutionEdit = function (solution) {\n      $scope.newSolution = solution;\n      dialog = ngDialog.open({\n        template: 'partials/solution-info.html',\n        //        className: 'ngdialog-theme-plain ',\n        scope: $scope\n      });\n    };\n\n    $scope.solutionDesgin = function (solution) {\n      $rootScope.selectedSolution = solution;\n      if (solution.managedByGroup == 1) location.href = \"#/modelsGroup\";else location.href = \"#/models\";\n    };\n\n    $scope.solutionDelete = function (solution) {\n      var delHandler = function delHandler() {\n        solutionUIService.deleteSolution(solution.id, function (returnObj) {\n          if (returnObj.code == 0) {\n            for (var i in $scope.placeList) {\n              if ($scope.placeList[i].id == solution.id) {\n                $scope.placeList.splice(i, 1);\n                return;\n              }\n            }\n\n            $rootScope.placeList = $scope.placeList;\n          }\n        });\n      };\n\n      BootstrapDialog.show({\n        title: '提示',\n        closable: false,\n        //size:BootstrapDialog.SIZE_WIDE,\n        message: '确认删除 ' + escape(solution.label) + ' 吗？',\n        buttons: [{\n          label: '确定',\n          cssClass: 'btn-success',\n          action: function action(dialogRef) {\n            //判断：若该设备类型关联1个或多个设备，不能删除\n            delHandler();\n            dialogRef.close();\n          }\n        }, {\n          label: '取消',\n          action: function action(dialogRef) {\n            dialogRef.close();\n          }\n        }]\n      });\n    };\n\n    $scope.solutionPublish = function (solution) {\n      if (solution.status > 0) return;\n\n      var publicHandler = function publicHandler() {\n        solution.status = 10;\n        solutionUIService.saveSolution(solution, function (returnObj) {\n          if (returnObj.code == 0) {\n            for (var i in $scope.placeList) {\n              if ($scope.placeList[i].id == solution.id) {\n                $scope.placeList[i].status = solution.status;\n                return;\n              }\n            }\n\n            $rootScope.placeList = $scope.placeList;\n          }\n        });\n      };\n\n      BootstrapDialog.show({\n        title: '提示',\n        closable: false,\n        //size:BootstrapDialog.SIZE_WIDE,\n        message: '确认发布 ' + escape(solution.label) + ' 吗？',\n        buttons: [{\n          label: '确定',\n          cssClass: 'btn-success',\n          action: function action(dialogRef) {\n            publicHandler();\n            dialogRef.close();\n          }\n        }, {\n          label: '取消',\n          action: function action(dialogRef) {\n            dialogRef.close();\n          }\n        }]\n      });\n    }; //判断用户是否存在\n\n\n    if (!userLoginUIService.user.isAuthenticated) {\n      $scope.$on('loginStatusChanged', function (evt, d) {\n        if (userLoginUIService.user.isAuthenticated) {\n          getSolutions();\n          initViews();\n        }\n      });\n    } else {\n      getSolutions();\n      initViews();\n    }\n\n    ;\n  }]);\n});"],"sourceRoot":"/source/"}