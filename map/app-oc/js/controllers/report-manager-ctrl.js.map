{"version":3,"sources":["app-oc/js/controllers/report-manager-ctrl.js"],"names":["define","controllers","BootstrapDialog","initController","$scope","$routeParams","ngDialog","FileUploader","userLoginUIService","userDomainService","reportFlexService","reportUIService","growl","uploader","url","origin","withCredentials","filters","push","name","fn","item","options","nameAry","split","type","length","fileSize","size","warning","onWhenAddingFileFailed","filter","clearQueue","destroy","console","info","onAfterAddingFile","fileItem","selectedTemplate","tplFileName","_file","queue","file","onAfterAddingAll","addedFileItems","onBeforeUploadItem","Array","prototype","apply","formData","onProgressItem","progress","onProgressAll","onSuccessItem","response","status","headers","onErrorItem","onCancelItem","onCompleteItem","getReportTemplateMeta","returnObj","code","reportParams","data","$broadcast","onCompleteAll","clearUploader","uploadImage","templateId","formObj","uploadAll","queryDitem","reportDataSourceModel","id","driver","userName","passWord","dataSources","dataSourcesDic","catalogs","catalogsDic","reportTemplateModel","title","catalogId","catalogName","dataSourceId","dataSourceName","folder","insertUser","updateUser","insertTime","Date","updateTime","reportParamXML","columns","existBuildPolicy","zipFileName","fileName","domainPath","domain","isEdit","reportTemplates","goSearch","obj","undefined","jQuery","extend","user","getReportTemplatesByCondition","forEach","Event","REPORTMODULE","closeParams","closeDialog","goClear","addtemplate","unshift","updateParams","updateReportTemplate","success","doAction","select","callback","unbindHandler","$on","event","args","addReportTemplate","show","closable","message","buttons","label","cssClass","action","dialogRef","deleteReportTemplate","i","splice","close","showWin","open","template","className","scope","paramShowList","getParamShowList","list","value","concat","init","getDataSourceConfigList","getReportCatalogList","queryDomainTree","userID","domainList","domainListTree","domainListDic","isAuthenticated","evt","d","userUIService","iframeSrc","getTemplates","params","nowTime","getTime","param","newparam","Format","getReportPdf","alert","flg","window","uploadFileUrl","getReportWord","location","href","getReportXls","getReportPpt","getReportHTML","initSearch","periodTypeValue","cronExp","escapeCheck","val","selectedPolicy","reportTemplatePolicys","periodList","reportPolicyObj","savePolicy","updateReportBuildPolicy","tplName","tplTitle","addReportBuildPolicy","reportTemplatesAll","policyhandler","policy","templatesList","j","initTemplateInfo","periodListObj","getSendPeriod","getTemplatePolicys","getReportBuildPolicyListByCondition","n","deleteReportBuildPolicy","enabled"],"mappings":"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","file":"app-oc/js/controllers/report-manager-ctrl.js","sourcesContent":["define(['controllers/controllers', 'bootstrap-dialog'], function (controllers, BootstrapDialog) {\n  'use strict';\n\n  controllers.initController('reportTemplateCtrl', ['$scope', \"$routeParams\", 'ngDialog', 'FileUploader', 'userLoginUIService', 'userDomainService', 'reportFlexService', 'reportUIService', 'growl', function ($scope, $routeParams, ngDialog, FileUploader, userLoginUIService, userDomainService, reportFlexService, reportUIService, growl) {\n    var uploader = $scope.uploader = new FileUploader({\n      url: reportFlexService.origin + '/api/rest/uploadReport/reportUIService/updateTemplateFileName',\n      withCredentials: true\n    });\n    var fileSize = 50; // FILTERS\n\n    uploader.filters.push({\n      name: 'fileFilter',\n      fn: function fn(item\n      /*{File|FileLikeObject}*/\n      , options) {\n        var nameAry = item.name.split(\".\");\n        var type = nameAry[nameAry.length - 1];\n\n        if (item.size / 1024 > fileSize * 1024) {\n          growl.warning(\"您选择的文件大于\" + fileSize + \"M，请重新选择\", {});\n          return false;\n        } // if(type != 'zip' && type != 'jrxml') {//zip文件功能暂时没做，先去掉后期后端功能实现之后重新加上\n\n\n        if (type != 'jrxml') {\n          growl.warning(\"文件格式仅支持jrxml文件，请重新选择\", {}); // growl.warning(\"文件格式仅支持jrxml和zip文件，请重新选择\", {});\n\n          return false;\n        }\n\n        return true;\n      }\n    }); // CALLBACKS\n\n    uploader.onWhenAddingFileFailed = function (item\n    /*{File|FileLikeObject}*/\n    , filter, options) {\n      uploader.clearQueue();\n      uploader.destroy();\n      console.info('onWhenAddingFileFailed', item, filter, options);\n    };\n\n    uploader.onAfterAddingFile = function (fileItem) {\n      $scope.selectedTemplate.tplFileName = fileItem._file.name;\n      uploader.queue[0].file.name = fileItem._file.name;\n      console.info('onAfterAddingFile', fileItem);\n    };\n\n    uploader.onAfterAddingAll = function (addedFileItems) {\n      console.info('onAfterAddingAll', addedFileItems);\n    };\n\n    uploader.onBeforeUploadItem = function (item) {\n      Array.prototype.push.apply(item.formData, uploader.formData);\n      console.info('onBeforeUploadItem', item);\n    };\n\n    uploader.onProgressItem = function (fileItem, progress) {\n      console.info('onProgressItem', fileItem, progress);\n    };\n\n    uploader.onProgressAll = function (progress) {\n      console.info('onProgressAll', progress);\n    };\n\n    uploader.onSuccessItem = function (fileItem, response, status, headers) {\n      // if(response.code != 0){\n      //   growl.warning(response.message,{})\n      // }\n      console.info('onSuccessItem', fileItem, response, status, headers);\n    };\n\n    uploader.onErrorItem = function (fileItem, response, status, headers) {\n      growl.warning(\"上传模版文件失败\", {});\n      console.info('onErrorItem', fileItem, response, status, headers);\n    };\n\n    uploader.onCancelItem = function (fileItem, response, status, headers) {\n      console.info('onCancelItem', fileItem, response, status, headers);\n    };\n\n    uploader.onCompleteItem = function (fileItem, response, status, headers) {\n      console.info('onCompleteItem', fileItem, response, status, headers);\n      var nameAry = fileItem.file.name.split(\".\");\n      var tTemplRelPath = '/' + nameAry[0] + '/' + fileItem.file.name;\n\n      if (nameAry[nameAry.length - 1] == \"zip\") {\n        growl.warning(\"次功能暂时还不能用\", {});\n        /*reportFlexService.getJrxmlFileList(tTemplRelPath,function(mod:JrxmlFileListModel):void {\n              if (mod != null) {\n                if (mod.code == 0) {\n                  if (mod.fileNames.length > 0) {\n                    FileNameSelector.popUp(mod.fileNames, function(file:String):void{\n                      zipPath.text = fileName;\n                      TTemplName.text = file.substr(file.lastIndexOf(\"/\")+1,file.length);\n                      TTemplRelPath.text = file;\n                      ReportService.instance.getReportTemplateMetaByFileName(file,function(model:ReportTemplateMeta):void {\n                        var list:ArrayCollection = new ArrayCollection();\n                        for each (var mod:ReportParamsModel in model.reportParams) {\n                          if (mod.defaultShow) {\n                            list.addItem(mod);\n                          }\n                        }\n                        dg.dataProvider = list;\n                      });\n                    });\n                  }else {\n                    Alert.show(\"取得报表文件列表异常。\",\"警告\");\n                  }\n                }else {\n                  Alert.show(mod.errorMsg,\"提示\");\n                }\n              }else {\n                Alert.show(\"zip文件中没有可识别的报表文件。\",\"警告\");\n              }\n            });*/\n      } else {\n        reportFlexService.getReportTemplateMeta(response.file, function (returnObj) {\n          if (returnObj.code == 0) {\n            // $scope.selectedTemplate = returnObj.data;\n            $scope.selectedTemplate.tplFileName = response.file;\n            $scope.selectedTemplate.reportParams = returnObj.data.reportParams; //            returnObj.data.reportParams.forEach(function(param) {\n            //              var newParam = {};\n            //              newParam.name = param.name;// 参数名称(唯一)\n            //              newParam.title= param.title;// 显示名称\n            //              newParam.showType = getShowType(param.valueClass);     // 展示类型\n            //              newParam.value = param.value;\n            //              newParam.defaultValue= param.defaultValue;// 参数默认值\n            //              newParam.defaultShow= param.defaultShow;// 默认是否显示\n            //              newParam.format= param.format;// 参数显示格式（当参数是日期型的时候启用）\n            //              newParam.optionList=param.optionList;// 参数数据项（当参数是下拉列表的时候启用）\n            //              $scope.selectedTemplate.reportParams.push(newParam);\n            //            });\n\n            uploader.clearQueue();\n            $scope.$broadcast(\"uploadTemplate\", true);\n          }\n        });\n      }\n    };\n\n    uploader.onCompleteAll = function () {\n      console.info('onCompleteAll');\n    };\n\n    $scope.clearUploader = function () {\n      uploader.clearQueue();\n    };\n\n    function getShowType(classType) {\n      var showtype = \"\";\n\n      switch (classType) {\n        case \"java.lang.String\":\n          showtype = \"STRING\";\n          break;\n\n        case \"java.sql.Date\":\n        case \"java.sql.Time\":\n        case \"java.sql.Timestamp\":\n        case \"java.util.Date\":\n          showtype = \"DATETIME\";\n          break;\n\n        default:\n          showtype = \"STRING\";\n      }\n\n      return showtype;\n    }\n\n    ;\n\n    $scope.uploadImage = function (templateId) {\n      if (uploader.queue.length == 0) {\n        $scope.$broadcast(\"uploadTemplate\", true);\n        return;\n      }\n\n      var formObj = {\n        \"templateId\": templateId\n      };\n      uploader.formData.push(formObj);\n      uploader.uploadAll();\n    };\n\n    $scope.queryDitem = {};\n\n    var initSearch = function initSearch() {\n      $scope.queryDitem = {\n        name: \"\",\n        // 报表名称\n        title: \"\",\n        // 报表标题\n        dataSourceId: \"\",\n        // 数据源唯一标识\n        catalogId: \"\",\n        domainPath: \"\",\n        insertUser: \"\" //创建人\n\n      };\n    };\n\n    $scope.reportDataSourceModel = {\n      id: 0,\n      name: \"\",\n      driver: \"\",\n      url: \"\",\n      userName: \"\",\n      passWord: \"\"\n    };\n    $scope.dataSources = [];\n    $scope.dataSourcesDic = {};\n    $scope.catalogs = [];\n    $scope.catalogsDic = {};\n    $scope.reportTemplateModel = {\n      id: 0,\n      // 报表ID\n      name: \"\",\n      // 报表名称\n      title: \"\",\n      // 报表标题\n      catalogId: 1,\n      // 报表所属分类ID\n      catalogName: \"\",\n      //报表所属分类名称\n      dataSourceId: 1,\n      // 数据源唯一标识\n      dataSourceName: \"\",\n      //数据源名称\n      tplFileName: \"\",\n      // 报表模板文件名称\n      folder: \"\",\n      //模板报表所在的目录(不保存在数据库中)\n      insertUser: \"\",\n      //创建人\n      updateUser: \"\",\n      //修改人\n      insertTime: new Date(),\n      //创建时间\n      updateTime: null,\n      //修改时间\n      reportParams: [],\n      // 报表的参数信息。\n      reportParamXML: \"\",\n      columns: [],\n      existBuildPolicy: 0,\n      //判断模板是否设置发送策略\n      zipFileName: \"\",\n      // Zip压缩文件\n      fileName: \"\",\n      //文件名 前端用\n      domainPath: \"\",\n      // 数据域\n      domain: \"\",\n      isEdit: 3\n    };\n    $scope.selectedTemplate; //选中的对象\n\n    $scope.reportTemplates;\n\n    $scope.goSearch = function () {\n      var obj = {};\n\n      if (!$scope.queryDitem.domainPath || $scope.queryDitem.domainPath == undefined) {\n        obj = jQuery.extend(true, {}, $scope.queryDitem);\n        obj[\"domainPath\"] = userLoginUIService.user.domainPath;\n      } else {\n        obj = $scope.queryDitem;\n      }\n\n      reportFlexService.getReportTemplatesByCondition(obj, function (returnObj) {\n        if (returnObj.code == 0) {\n          returnObj.data.forEach(function (item) {\n            // item.domainPath = item.domain;\n            item.fileName = item.tplFileName ? item.tplFileName : item.zipFileName;\n          });\n          $scope.reportTemplates = returnObj.data;\n          $scope.$broadcast(Event.REPORTMODULE + \"_template\", {\n            \"data\": $scope.reportTemplates\n          });\n        }\n      });\n    }; //取消参数的时候清空selectedTemplate\n\n\n    $scope.closeParams = function () {\n      $scope.selectedTemplate = null;\n      $scope.closeDialog();\n    };\n\n    $scope.goClear = function () {\n      initSearch();\n    };\n\n    $scope.addtemplate = function () {\n      if ($scope.selectedTemplate) {\n        growl.warning(\"当前有未保存的数据\");\n        return;\n      }\n\n      ;\n      if (!$scope.reportTemplates) $scope.reportTemplates = [];\n      $scope.selectedTemplate = jQuery.extend({}, $scope.reportTemplateModel);\n      $scope.reportTemplates.unshift(jQuery.extend({}, $scope.reportTemplateModel));\n      $scope.$broadcast(Event.REPORTMODULE + \"_template\", {\n        \"data\": $scope.reportTemplates\n      });\n    };\n\n    $scope.updateParams = function () {\n      reportFlexService.updateReportTemplate($scope.selectedTemplate, function (returnObj) {\n        if (returnObj.code == 0) {\n          growl.success(\"参数设置更新成功\", {});\n          $scope.selectedTemplate = null;\n          $scope.closeDialog();\n        }\n      });\n    };\n\n    $scope.doAction = function (type, select, callback) {\n      if (type == \"saveTemplate\") {\n        var unbindHandler = $scope.$on(\"uploadTemplate\", function (event, args) {\n          // select.reportParamXML = null;\n          reportFlexService.updateReportTemplate($scope.selectedTemplate, function (returnObj) {\n            if (returnObj.code == 0) {\n              // $scope.uploadImage(returnObj.data.id);\n              if (select.id == 0) {\n                growl.success(\"添加报表模板成功\", {});\n              } else {\n                growl.success(\"更新报表模板成功\", {});\n              }\n\n              if (callback) {\n                callback(returnObj.data);\n              }\n\n              unbindHandler();\n            }\n          });\n        }); // var unbindHandler = $scope.$on(\"uploadTemplate\", function (event, args) {\n\n        select.zipFileName = $scope.selectedTemplate.zipFileName;\n        select.tplFileName = $scope.selectedTemplate.tplFileName;\n        select.reportParams = $scope.selectedTemplate.reportParams;\n\n        if (select.id == 0) {\n          select.tplFileName = \"\"; // select.domain = userLoginUIService.user.domainPath;\n\n          reportFlexService.addReportTemplate(select, function (returnObj) {\n            if (returnObj.code == 0) {\n              $scope.uploadImage(returnObj.data.id);\n              $scope.selectedTemplate = returnObj.data;\n              returnObj.data.fileName = returnObj.data.tplFileName ? returnObj.data.tplFileName : returnObj.data.zipFileName;\n            }\n          });\n        } else {\n          $scope.uploadImage(select.id);\n        } //执行完成后就把该事件解绑\n        // unbindHandler();\n        // });\n        // $scope.uploadImage(select.id);\n\n      } else if (type == \"deleteTemplate\") {\n        BootstrapDialog.show({\n          title: '提示',\n          closable: false,\n          //size:BootstrapDialog.SIZE_WIDE,\n          message: '确认删除报表模板吗？',\n          buttons: [{\n            label: '确定',\n            cssClass: 'btn-success',\n            action: function action(dialogRef) {\n              reportFlexService.deleteReportTemplate(select.id, function (returnObj) {\n                if (returnObj.code == 0) {\n                  for (var i = $scope.reportTemplates.length - 1; i > -1; i--) {\n                    if ($scope.reportTemplates[i].id == select.id) {\n                      $scope.reportTemplates.splice(i, 1);\n                    }\n                  }\n\n                  $scope.selectedTemplate = null;\n                  growl.success(\"删除报表模板成功\", {});\n\n                  if ($scope.reportTemplates.length <= 0) {\n                    $scope.$broadcast(Event.REPORTMODULE + \"_template\", {\n                      \"data\": $scope.reportTemplates\n                    });\n                  }\n\n                  if (callback) {\n                    callback(true);\n                  }\n                }\n              });\n              dialogRef.close();\n            }\n          }, {\n            label: '取消',\n            action: function action(dialogRef) {\n              dialogRef.close();\n            }\n          }]\n        });\n      } else if (type == \"paramsHandler\") {\n        $scope.selectedTemplate = select;\n\n        var showWin = function showWin() {\n          ngDialog.open({\n            template: '../partials/dialogue/report_params_dia.html',\n            className: 'ngdialog-theme-plain',\n            scope: $scope\n          });\n        };\n\n        if (!$scope.paramShowList) {\n          reportFlexService.getParamShowList(function (returnObj) {\n            if (returnObj.code == 0) {\n              var list = [{\n                label: \"请选择\",\n                value: \"-99\"\n              }];\n              list = list.concat(returnObj.data);\n              $scope.paramShowList = list;\n              showWin();\n            }\n          });\n        } else {\n          showWin();\n        }\n      }\n    }; //读取数据源列表\n\n\n    var sourceConfigList = function sourceConfigList() {\n      reportUIService.getDataSourceConfigList(function (data) {\n        if (data.code == 0) {\n          for (var i in data.data) {\n            $scope.dataSourcesDic[data.data[i].id] = data.data[i];\n          }\n\n          $scope.dataSources = data.data;\n        }\n\n        ;\n      });\n    }; //读取分类列表\n\n\n    var catalogList = function catalogList() {\n      reportUIService.getReportCatalogList(function (data) {\n        if (data.code == 0) {\n          for (var i in data.data) {\n            $scope.catalogsDic[data.data[i].id] = data.data[i];\n          }\n\n          $scope.catalogs = data.data;\n        }\n\n        ;\n      });\n    }; //根据用户Id查用户域\n\n\n    var domainTreeQuery = function domainTreeQuery() {\n      userDomainService.queryDomainTree(userLoginUIService.user.userID, function (data) {\n        if (data.code == 0) {\n          var domainList = data.data;\n          $scope.domainListTree = domainList;\n          $scope.domainListDic = data.domainListDic;\n          $scope.goSearch();\n        }\n\n        ;\n      });\n    }; //弹出框的关闭事件\n\n\n    $scope.closeDialog = function () {\n      ngDialog.close();\n    };\n\n    var init = function init() {\n      sourceConfigList();\n      catalogList(); // 初始化域目录树\n\n      domainTreeQuery();\n    };\n    /**\n     * 监听登录状态\n     */\n\n\n    if (!userLoginUIService.user.isAuthenticated) {\n      $scope.$on('loginStatusChanged', function (evt, d) {\n        if (userLoginUIService.user.isAuthenticated) {\n          init();\n        }\n      });\n    } else {\n      init();\n    }\n  }]);\n  controllers.initController('reportSearchCtrl', ['$scope', \"$routeParams\", 'userLoginUIService', 'userDomainService', 'reportFlexService', 'growl', 'userUIService', function ($scope, $routeParams, userLoginUIService, userDomainService, reportFlexService, growl, userUIService) {\n    $scope.iframeSrc = \"\";\n    $scope.queryDitem = {};\n\n    var initSearch = function initSearch() {\n      $scope.queryDitem = {\n        name: \"\",\n        // 报表名称\n        title: \"\",\n        // 报表标题\n        dataSourceId: \"\",\n        // 数据源唯一标识\n        catalogId: \"\",\n        insertUser: \"\" //创建人\n\n      };\n    };\n\n    $scope.goClear = function () {\n      $scope.selectedTemplate = {};\n    };\n\n    $scope.reportDataSourceModel = {\n      id: 0,\n      name: \"\",\n      driver: \"\",\n      url: \"\",\n      userName: \"\",\n      passWord: \"\"\n    };\n    $scope.dataSources = [{\n      dataSourceId: 0,\n      dataSourceName: \"无数据源\",\n      driver: \"\",\n      url: \"\",\n      userName: \"\",\n      passWord: \"\"\n    }, {\n      dataSourceId: 1,\n      dataSourceName: \"postgres\",\n      driver: \"org.postgresql.Driver\",\n      url: \"jdbc\\:postgresql\\://192.168.1.112\\:5432/psiot\",\n      userName: \"postgres\",\n      passWord: \"psiot2015\"\n    }];\n    $scope.dataSourcesDic = {};\n    $scope.catalogs = [{\n      catalogId: 0,\n      catalogName: \"无分类\"\n    }, {\n      catalogId: 1,\n      catalogName: \"默认分类\"\n    }];\n    $scope.catalogsDic = {};\n    $scope.selectedTemplate; //选中的对象\n\n    $scope.reportTemplates;\n\n    $scope.getTemplates = function () {\n      var obj = {};\n      obj[\"domainPath\"] = userLoginUIService.user.domainPath;\n      reportFlexService.getReportTemplatesByCondition(obj, function (returnObj) {\n        if (returnObj.code == 0) {\n          returnObj.data.forEach(function (item) {\n            item.domainPath = item.domain;\n            item.fileName = item.tplFileName ? item.tplFileName : item.zipFileName;\n          });\n          $scope.reportTemplates = returnObj.data;\n        }\n      });\n    };\n\n    $scope.doAction = function (type, select, callback) {\n      if (type == \"pdfTemplate\") {\n        var params = [];\n        var nowTime = new Date().getTime();\n        select.reportParams.forEach(function (param) {\n          var newparam = {};\n          newparam.label = param.name;\n          newparam.value = param.name == \"STARTTIME\" ? new Date(nowTime - 1000 * 60 * 60).Format(\"yyyy-MM-dd hh:mm:ss\") : param.name == \"ENDTIME\" ? new Date().Format(\"yyyy-MM-dd hh:mm:ss\") : \"\";\n          params.push(newparam);\n        });\n        reportFlexService.getReportPdf(select.id, params, [], function (returnObj) {\n          if (returnObj.code == 0) {\n            alert(\"\");\n          }\n        });\n      }\n    };\n\n    $scope.goSearch = function (flg) {\n      if (!$scope.selectedTemplate) {\n        growl.warning(\"请选择一个报表模板\");\n        return;\n      }\n\n      var nowTime = new Date().getTime();\n      $scope.selectedTemplate.reportParams.forEach(function (param) {\n        param.label = param.name;\n        if (!param.value) param.value = param.name == \"STARTTIME\" ? new Date(nowTime - 1000 * 60 * 60 * 24).Format(\"yyyy-MM-dd hh:mm:ss\") : param.name == \"ENDTIME\" ? new Date().Format(\"yyyy-MM-dd hh:mm:ss\") : \"\";\n      });\n\n      if (!flg || flg == \"HTML\") {\n        reportFlexService.getReportHTML($scope.selectedTemplate.id, $scope.selectedTemplate.reportParams, [], function (returnObj) {\n          if (returnObj.code == 0) {\n            $scope.iframeSrc = userUIService.uploadFileUrl + returnObj.data;\n          }\n        });\n      } else if (flg == \"PDF\") {\n        reportFlexService.getReportPdf($scope.selectedTemplate.id, $scope.selectedTemplate.reportParams, [], function (returnObj) {\n          if (returnObj.code == 0) {\n            // window.open(''+ userUIService.uploadFileUrl+''+returnObj.data+'');\n            window.open(\"\" + userUIService.uploadFileUrl + \"/api/rest/downloadReport/reportUIService/download?reportName=\" + returnObj.data + \"&reportFileName=\" + returnObj.data + \"\");\n          }\n        });\n      } else if (flg == \"WORD\") {\n        reportFlexService.getReportWord($scope.selectedTemplate.id, $scope.selectedTemplate.reportParams, [], function (returnObj) {\n          if (returnObj.code == 0) {\n            location.href = '' + userUIService.uploadFileUrl + '' + returnObj.data + '';\n          }\n        });\n      } else if (flg == \"XLS\") {\n        reportFlexService.getReportXls($scope.selectedTemplate.id, $scope.selectedTemplate.reportParams, [], function (returnObj) {\n          if (returnObj.code == 0) {\n            location.href = '' + userUIService.uploadFileUrl + '' + returnObj.data + '';\n          }\n        });\n      } else if (flg == \"PPT\") {\n        reportFlexService.getReportPpt($scope.selectedTemplate.id, $scope.selectedTemplate.reportParams, [], function (returnObj) {\n          if (returnObj.code == 0) {\n            location.href = '' + userUIService.uploadFileUrl + '' + returnObj.data + '';\n          }\n        });\n      }\n    }; //根据用户Id查用户域\n\n\n    var domainTreeQuery = function domainTreeQuery() {\n      userDomainService.queryDomainTree(userLoginUIService.user.userID, function (data) {\n        if (data.code == 0) {\n          var domainList = data.data;\n          $scope.domainListTree = domainList;\n          $scope.domainListDic = data.domainListDic;\n        }\n\n        ;\n      });\n    };\n\n    var init = function init() {\n      // 初始化域目录树\n      domainTreeQuery();\n      $scope.getTemplates();\n      initSearch();\n    };\n    /**\n     * 监听登录状态\n     */\n\n\n    if (!userLoginUIService.user.isAuthenticated) {\n      $scope.$on('loginStatusChanged', function (evt, d) {\n        if (userLoginUIService.user.isAuthenticated) {\n          init();\n        }\n      });\n    } else {\n      init();\n    }\n  }]);\n  controllers.initController('reportPolicyCtrl', ['$scope', \"$routeParams\", 'ngDialog', 'userLoginUIService', 'userDomainService', 'reportFlexService', 'growl', function ($scope, $routeParams, ngDialog, userLoginUIService, userDomainService, reportFlexService, growl) {\n    $scope.queryDitem = {};\n\n    var initSearch = function initSearch() {\n      $scope.queryDitem = {\n        name: \"\",\n        // 报表名称\n        periodTypeValue: \"\",\n        dataSourceId: \"\",\n        // 数据源唯一标识\n        catalogId: \"\",\n        domainPath: \"\",\n        id: \"\",\n        cronExp: \"\"\n      };\n    };\n\n    $scope.escapeCheck = function (val) {\n      return \"\" + val + \"\";\n    };\n\n    $scope.goClear = function () {\n      initSearch();\n    };\n\n    $scope.selectedPolicy; //选中的对象\n\n    $scope.reportTemplates;\n    $scope.reportTemplatePolicys;\n    $scope.periodList;\n    $scope.reportPolicyObj = {};\n\n    $scope.savePolicy = function () {\n      if ($scope.selectedPolicy.id) {\n        $scope.selectedPolicy.reportParamXML = null;\n        $scope.selectedPolicy.reportParams = $scope.selectedPolicy.template.reportParams;\n        reportFlexService.updateReportBuildPolicy($scope.selectedPolicy, function (returnObj) {\n          if (returnObj.code == 0) {\n            $scope.goSearch();\n            growl.success(\"更新报表生成策略成功\", {});\n            $scope.closeDialog();\n          }\n        });\n      } else {\n        $scope.selectedPolicy.id = $scope.selectedPolicy.template.id;\n        $scope.selectedPolicy.tplName = $scope.selectedPolicy.template.name;\n        $scope.selectedPolicy.tplTitle = $scope.selectedPolicy.template.title;\n        $scope.selectedPolicy.reportParams = $scope.selectedPolicy.template.reportParams;\n        $scope.selectedPolicy.reportParamXML = null;\n        reportFlexService.addReportBuildPolicy($scope.selectedPolicy, function (returnObj) {\n          if (returnObj.code == 0) {\n            $scope.goSearch();\n            growl.success(\"添加报表生成策略成功\", {});\n            $scope.closeDialog();\n          } else {\n            $scope.selectedPolicy.id = 0;\n          }\n        });\n      }\n    };\n\n    $scope.reportTemplatesAll = [];\n\n    $scope.policyhandler = function (policy) {\n      var showWin = function showWin() {\n        ngDialog.open({\n          template: '../partials/dialogue/report_policy_dia.html',\n          className: 'ngdialog-theme-plain',\n          scope: $scope\n        });\n      };\n\n      var templatesList = $scope.reportTemplatesAll;\n      var list = [];\n\n      for (var j in templatesList) {\n        if (!$scope.reportPolicyObj[templatesList[j].id]) {\n          list.push(templatesList[j]);\n        }\n      }\n\n      ; //如果是新增的过滤模板的内容，有不过滤\n\n      if (policy != undefined && policy.id > 0) {\n        $scope.reportTemplates = $scope.reportTemplatesAll;\n      } else {\n        $scope.reportTemplates = list;\n      }\n\n      if (!policy) {\n        $scope.selectedPolicy = {\n          template: {}\n        };\n      } else {\n        $scope.selectedPolicy = policy;\n        $scope.reportTemplates.forEach(function (item) {\n          if (item.id == $scope.selectedPolicy.id) {\n            $scope.selectedPolicy.template = item;\n            $scope.selectedPolicy.template.reportParams = $scope.selectedPolicy.reportParams;\n          }\n        });\n      }\n\n      showWin();\n    };\n\n    $scope.initTemplateInfo = function () {\n      var obj = {};\n      obj[\"domainPath\"] = userLoginUIService.user.domainPath;\n      reportFlexService.getReportTemplatesByCondition(obj, function (returnObj) {\n        if (returnObj.code == 0) {\n          returnObj.data.forEach(function (item) {\n            item.domainPath = item.domain;\n            item.fileName = item.tplFileName ? item.tplFileName : item.zipFileName;\n          });\n          $scope.reportTemplatesAll = returnObj.data;\n          $scope.reportTemplates = returnObj.data;\n        }\n      });\n      $scope.periodListObj = {};\n      reportFlexService.getSendPeriod(function (returnObj) {\n        if (returnObj.code == 0) {\n          for (var i in returnObj.data) {\n            $scope.periodListObj[returnObj.data[i].value] = returnObj.data[i];\n          }\n\n          $scope.periodList = returnObj.data;\n        }\n      });\n    };\n\n    $scope.getTemplatePolicys = function () {\n      reportFlexService.getReportBuildPolicyListByCondition({}, function (returnObj) {\n        if (returnObj.code == 0) $scope.reportTemplatePolicys = returnObj.data;\n        var d = returnObj.data;\n\n        for (var n in d) {\n          $scope.reportPolicyObj[\"\" + d[n].id + \"\"] = d[n];\n        }\n\n        $scope.$broadcast(Event.REPORTMODULE + \"_policy\", {\n          \"data\": $scope.reportTemplatePolicys\n        });\n      });\n    };\n\n    $scope.doAction = function (type, select, callback) {\n      if (type == \"deletepolicy\") {\n        BootstrapDialog.show({\n          title: '提示',\n          closable: false,\n          //size:BootstrapDialog.SIZE_WIDE,\n          message: '确认删除报表生成策略吗？',\n          buttons: [{\n            label: '确定',\n            cssClass: 'btn-success',\n            action: function action(dialogRef) {\n              reportFlexService.deleteReportBuildPolicy(select.id, function (returnObj) {\n                if (returnObj.code == 0) {\n                  //不用getTemplatePolicys因为不同用户域登录进来的用户可以看到别人的策略\n                  $scope.goSearch();\n                  delete $scope.reportPolicyObj[select.id];\n                  growl.success(\"删除报表生成策略成功\", {});\n                }\n              });\n              dialogRef.close();\n            }\n          }, {\n            label: '取消',\n            action: function action(dialogRef) {\n              dialogRef.close();\n            }\n          }]\n        });\n      } else if (type == \"editpolicy\") {\n        $scope.policyhandler(select);\n      } else if (type == \"AlertEnable\") {\n        var enabled = select.enabled;\n        BootstrapDialog.show({\n          title: '提示',\n          closable: false,\n          message: enabled == 1 ? '确认要启用此报表生成策略吗？' : '确认要停用此报表生成策略吗？',\n          buttons: [{\n            label: '确定',\n            cssClass: 'btn-success',\n            action: function action(dialogRef) {\n              reportFlexService.updateReportBuildPolicy(select, function (returnObj) {\n                if (returnObj.code == 0) {\n                  callback(returnObj);\n                }\n              });\n              dialogRef.close();\n            }\n          }, {\n            label: '取消',\n            action: function action(dialogRef) {\n              callback(false);\n              dialogRef.close();\n            }\n          }]\n        });\n      }\n    };\n\n    $scope.goSearch = function () {\n      //根据当前用户域查询\n      var obj = {};\n\n      if (!$scope.queryDitem.domainPath || $scope.queryDitem.domainPath == undefined) {\n        obj = jQuery.extend(true, {}, $scope.queryDitem);\n        obj[\"domainPath\"] = userLoginUIService.user.domainPath;\n      } else {\n        obj = $scope.queryDitem;\n      }\n\n      reportFlexService.getReportBuildPolicyListByCondition($scope.queryDitem, function (returnObj) {\n        if (returnObj.code == 0) $scope.reportTemplatePolicys = returnObj.data;\n        var d = returnObj.data;\n\n        for (var n in d) {\n          $scope.reportPolicyObj[\"\" + d[n].id + \"\"] = d[n];\n        }\n\n        $scope.$broadcast(Event.REPORTMODULE + \"_policy\", {\n          \"data\": returnObj.data\n        });\n      });\n    };\n\n    var domainTreeQuery = function domainTreeQuery() {\n      userDomainService.queryDomainTree(userLoginUIService.user.userID, function (data) {\n        if (data.code == 0) {\n          var domainList = data.data;\n          $scope.domainListTree = domainList;\n          $scope.domainListDic = data.domainListDic;\n        }\n\n        ;\n      });\n    };\n\n    var init = function init() {\n      // 初始化域目录树\n      domainTreeQuery();\n      $scope.initTemplateInfo();\n      $scope.goSearch();\n      initSearch();\n    }; //弹出框的关闭事件\n\n\n    $scope.closeDialog = function () {\n      ngDialog.close();\n    };\n    /**\n     * 监听登录状态\n     */\n\n\n    if (!userLoginUIService.user.isAuthenticated) {\n      $scope.$on('loginStatusChanged', function (evt, d) {\n        if (userLoginUIService.user.isAuthenticated) {\n          init();\n        }\n      });\n    } else {\n      init();\n    }\n  }]);\n});"],"sourceRoot":"/source/"}