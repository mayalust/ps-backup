{"version":3,"sources":["app-oc/js/controllers/product-ctrl.js"],"names":["define","controllers","BootstrapDialog","initController","$scope","$routeParams","$timeout","$q","$location","ngDialog","unitService","userLoginUIService","productUIService","growl","userDomainService","selectedCount","deferList","unitList","units","unitDics","dialog","title","input","enterpriseId","name","desc","unit","id","createTime","Date","button","label","disabled","scope","every","elem","right","fn","ifShowEnter","addProduct","returnObj","code","newproduct","data","queryAllList","push","broardFun","success","updateProduct","forEach","item","$","extend","close","objList","$broadcast","Event","ENTERPRISEINIT","option","tableInit","header","delete","select","event","addClick","obj","open","template","className","goClear","queryState","state","doAction","type","callback","show","closable","message","buttons","cssClass","action","dialogRef","deleteProduct","sel","i","splice","$apply","searchData","param","findProducts","init","defer","queryDomainTree","user","userID","domainListTree","domainListDic","resolve","promise","all","then","isAuthenticated","$on","evt","d"],"mappings":"AAAAA,OAAO,CAAC,0BAA2B,mBAAoB,SAAU,SAAUC,EAAaC,GACtF,aAEAD,EAAYE,eAAe,oBAAqB,CAAC,SAAU,eAAgB,WAAY,KAAM,YAAa,WAAY,cAAe,qBAAsB,mBAAoB,QAAS,oBAAqB,SAAUC,EAAQC,EAAcC,EAAUC,EAAIC,EAAWC,EAAUC,EAAaC,EAAoBC,EAAkBC,EAAOC,GACxUV,EAAOW,cAAgB,EACvB,IAAIC,EAAY,GAGdZ,EAAOa,SAAWP,EAAYQ,MAC9Bd,EAAOe,SAAWT,EAAYS,SAIhCf,EAAOgB,OAAS,CACdC,MAAO,OACPC,MAAO,CACLC,aAAc,GACdC,KAAM,GAENC,KAAM,GACNC,KAAM,GACNC,IAAK,EACLC,WAAY,IAAIC,MAElBC,OAAQ,CAAC,CACPC,MAAO,KACPC,SAAU,WAIR,OAHYC,MAAMb,OAAOE,MAAMY,MAAM,SAAUC,GAC7C,OAAqB,GAAdA,EAAKC,SAIhBC,GAAI,YAwB6B,GAA3BjC,EAAOgB,OAAOE,MAAMK,IAEjBvB,EAAOkC,oBACHlC,EAAOgB,OAAOE,MAAMC,aAG7BX,EAAiB2B,WAAWnC,EAAOgB,OAAOE,MA7BlB,SAA6BkB,GACrD,GAAsB,GAAlBA,EAAUC,KAAW,CACvB,IAAIC,EAAaF,EAAUG,KAC3BvC,EAAOwC,aAAaC,KAAKH,GACzBI,EAAU1C,EAAOwC,cACjB/B,EAAMkC,QAAQ,WAAY,QAyBM,EAAzB3C,EAAOgB,OAAOE,MAAMK,IAE7Bf,EAAiBoC,cAAc5C,EAAOgB,OAAOE,MAvBlB,SAAgCkB,GACrC,GAAlBA,EAAUC,MACZrC,EAAOwC,aAAaK,QAAQ,SAAUC,GAChCA,EAAKvB,IAAMvB,EAAOgB,OAAOE,MAAMK,IACjCwB,EAAEC,OAAOF,EAAM9C,EAAOgB,OAAOE,OAG/BwB,EAAU1C,EAAOwC,cACjB/B,EAAMkC,QAAQ,WAAY,QAkBhCtC,EAAS4C,UAEV,CACDtB,MAAO,KACPM,GAAI,WACF5B,EAAS4C,YAKf,IAAIP,EAAY,SAAmBQ,GACjChD,EAAS,WACPF,EAAOmD,WAAWC,MAAMC,eAAiB,eAAgB,CACvDC,OAAU,CAACJ,QAkBjBlD,EAAOuD,UAAY,CACjBC,OAAU,CACR7B,MAAS,SACT8B,OAAU,UAEZC,OAAU,CACRtC,KAAQ,GACRC,KAAQ,GACRF,aAAgB,IAElBwC,MAAS,CACPC,SAAY,WAvBD,IAAkBC,EAAAA,EAwBlB,GAvBb7D,EAAOgB,OAAOE,MAAQ,CACpBE,KAAMyC,EAAIzC,KAAOyC,EAAIzC,KAAO,GAE5BC,KAAMwC,EAAIxC,KAAOwC,EAAIxC,KAAO,GAC5BC,KAAMuC,EAAIvC,KAAOuC,EAAIvC,KAAO,GAC5BC,GAAIsC,EAAItC,GAAKsC,EAAItC,IAAM,EACvBC,WAAYqC,EAAIrC,WAAaqC,EAAIrC,WAAa,IAAIC,MAkBhDpB,EAASyD,KAAK,CACZC,SAAU,6CACVC,UAAW,uBACXnC,MAAO7B,KAGXiE,QAAW,WACTjE,EAAOuD,UAAUG,OAAOtC,KAAkC,GAA3BpB,EAAOkE,WAAWC,MAAanE,EAAOuD,UAAUG,OAAOtC,KAAO,KAC7FpB,EAAOuD,UAAUG,OAAOrC,KAAkC,GAA3BrB,EAAOkE,WAAWC,MAAanE,EAAOuD,UAAUG,OAAOrC,KAAO,KAC7FrB,EAAOuD,UAAUG,OAAOvC,aAA0C,GAA3BnB,EAAOkE,WAAWC,MAAanE,EAAOuD,UAAUG,OAAOvC,aAAe,QAKnHnB,EAAOoE,SAAW,SAAUC,EAAMX,EAAQY,GAC5B,UAARD,GACFvE,EAAgByE,KAAK,CACnBtD,MAAO,KACPuD,UAAU,EACVC,QAAS,aACTC,QAAS,CAAC,CACR/C,MAAO,KACPgD,SAAU,cACVC,OAAQ,SAAgBC,GACtBrE,EAAiBsE,cAAc,CAACpB,GAAS,SAAUtB,GACjDkC,EAASlC,GAEa,GAAlBA,EAAUC,OACZqB,EAAOb,QAAQ,SAAUkC,GACvB,IAAK,IAAIC,KAAKhF,EAAOwC,aACfuC,GAAO/E,EAAOwC,aAAawC,GAAGzD,IAChCvB,EAAOwC,aAAayC,OAAOD,EAAG,KAIpCvE,EAAMkC,QAAQ,UAAW,IACzB3C,EAAOW,cAAgB,EACvBX,EAAOkF,YAGXL,EAAU5B,UAEX,CACDtB,MAAO,KACPiD,OAAQ,SAAgBC,GACtBP,GAAS,GACTO,EAAU5B,QACVjD,EAAOW,cAAgB,EACvBX,EAAOkF,eAOjBlF,EAAOmF,WAAa,WAClB,IAAIC,EAAQ,GAERpF,EAAOuD,UAAUG,OAAOrC,OAC1B+D,EAAM,KAAUpF,EAAOuD,UAAUG,OAAOrC,MAGtCrB,EAAOuD,UAAUG,OAAOtC,OAC1BgE,EAAM,KAAUpF,EAAOuD,UAAUG,OAAOtC,MAG1CZ,EAAiB6E,aAAaD,EAAO,SAAUhD,GACvB,GAAlBA,EAAUC,OACZrC,EAAOwC,aAAeJ,EAAUG,KAChCG,EAAUN,EAAUG,UAM1B,IAmBI+C,EAAO,WAnBW,IAChBC,EAAAA,EAAQpF,EAAGoF,QACf7E,EAAkB8E,gBAAgBjF,EAAmBkF,KAAKC,OAAQ,SAAUnD,GAC1EvC,EAAO2F,eAAiBpD,EAAKoD,eAC7B3F,EAAO4F,cAAgBrD,EAAKqD,cAC5BL,EAAMM,QAAQ,aAEhBjF,EAAU6B,KAAK8C,EAAMO,SAcrB3F,EAAG4F,IAAInF,GAAWoF,KAAK,WACrBhG,EAAOmF,gBAYN5E,EAAmBkF,KAAKQ,gBAO3BX,IANAtF,EAAOkG,IAAI,qBAAsB,SAAUC,EAAKC,GAC1C7F,EAAmBkF,KAAKQ,iBAC1BX","file":"app-oc/js/controllers/product-ctrl.js","sourcesContent":["define(['controllers/controllers', 'bootstrap-dialog', 'Array'], function (controllers, BootstrapDialog) {\n  'use strict'; //================================================   产品结构（产品信息）   ======================================================\n\n  controllers.initController('productCommonCtrl', ['$scope', '$routeParams', '$timeout', '$q', '$location', 'ngDialog', 'unitService', 'userLoginUIService', 'productUIService', 'growl', 'userDomainService', function ($scope, $routeParams, $timeout, $q, $location, ngDialog, unitService, userLoginUIService, productUIService, growl, userDomainService) {\n    $scope.selectedCount = 0;\n    var deferList = []; //获取全部单位\n\n    var getUnit = function () {\n      $scope.unitList = unitService.units;\n      $scope.unitDics = unitService.unitDics;\n    }(); //产品dialog\n\n\n    $scope.dialog = {\n      title: \"产品结构\",\n      input: {\n        enterpriseId: '',\n        name: '',\n        // 产品名称\n        desc: '',\n        unit: '',\n        id: -1,\n        createTime: new Date()\n      },\n      button: [{\n        label: \"确定\",\n        disabled: function disabled() {\n          var every = scope.dialog.input.every(function (elem) {\n            return elem.right != false;\n          });\n          return !every;\n        },\n        fn: function fn() {\n          var addproduct_callback = function addproduct_callback(returnObj) {\n            if (returnObj.code == 0) {\n              var newproduct = returnObj.data;\n              $scope.queryAllList.push(newproduct);\n              broardFun($scope.queryAllList);\n              growl.success(\"添加产品信息成功\", {});\n            }\n          };\n\n          var updataproduct_callback = function updataproduct_callback(returnObj) {\n            if (returnObj.code == 0) {\n              $scope.queryAllList.forEach(function (item) {\n                if (item.id == $scope.dialog.input.id) {\n                  $.extend(item, $scope.dialog.input);\n                }\n\n                broardFun($scope.queryAllList);\n                growl.success(\"产品信息修改完成\", {});\n                return;\n              });\n            }\n          };\n\n          if ($scope.dialog.input.id == -1) {\n            //新增\n            if (!$scope.ifShowEnter) {\n              delete $scope.dialog.input.enterpriseId;\n            }\n\n            productUIService.addProduct($scope.dialog.input, addproduct_callback);\n          } else if ($scope.dialog.input.id > 0) {\n            //编辑\n            productUIService.updateProduct($scope.dialog.input, updataproduct_callback);\n          }\n\n          ngDialog.close();\n        }\n      }, {\n        label: \"取消\",\n        fn: function fn() {\n          ngDialog.close();\n        }\n      }]\n    };\n\n    var broardFun = function broardFun(objList) {\n      $timeout(function () {\n        $scope.$broadcast(Event.ENTERPRISEINIT + \"_productList\", {\n          \"option\": [objList]\n        });\n      });\n    }; //初始化数据\n\n\n    var initData = function initData(obj) {\n      $scope.dialog.input = {\n        name: obj.name ? obj.name : \"\",\n        // domainPath: obj.domainPath ? obj.domainPath : \"\", //企业域\n        desc: obj.desc ? obj.desc : \"\",\n        unit: obj.unit ? obj.unit : \"\",\n        id: obj.id ? obj.id : -1,\n        createTime: obj.createTime ? obj.createTime : new Date()\n      };\n    }; //产品展示信息\n\n\n    $scope.tableInit = {\n      'header': {\n        'label': \"产品结构管理\",\n        'delete': \"删除产品结构\"\n      },\n      'select': {\n        'name': '',\n        'desc': '',\n        'enterpriseId': ''\n      },\n      'event': {\n        'addClick': function addClick() {\n          initData({});\n          ngDialog.open({\n            template: '../partials/dialogue/product_info_dia.html',\n            className: 'ngdialog-theme-plain',\n            scope: $scope\n          });\n        },\n        'goClear': function goClear() {\n          $scope.tableInit.select.name = $scope.queryState.state == 1 ? $scope.tableInit.select.name : null;\n          $scope.tableInit.select.desc = $scope.queryState.state == 2 ? $scope.tableInit.select.desc : null;\n          $scope.tableInit.select.enterpriseId = $scope.queryState.state == 3 ? $scope.tableInit.select.enterpriseId : null;\n        }\n      }\n    }; //table动作\n\n    $scope.doAction = function (type, select, callback) {\n      if (type == 'delete') {\n        BootstrapDialog.show({\n          title: '提示',\n          closable: false,\n          message: '确认删除该产品结构？',\n          buttons: [{\n            label: '确定',\n            cssClass: 'btn-success',\n            action: function action(dialogRef) {\n              productUIService.deleteProduct([select], function (returnObj) {\n                callback(returnObj);\n\n                if (returnObj.code == 0) {\n                  select.forEach(function (sel) {\n                    for (var i in $scope.queryAllList) {\n                      if (sel == $scope.queryAllList[i].id) {\n                        $scope.queryAllList.splice(i, 1);\n                      }\n                    }\n                  });\n                  growl.success(\"产品结构已删除\", {});\n                  $scope.selectedCount = 0;\n                  $scope.$apply();\n                }\n              });\n              dialogRef.close();\n            }\n          }, {\n            label: '取消',\n            action: function action(dialogRef) {\n              callback(false);\n              dialogRef.close();\n              $scope.selectedCount = 0;\n              $scope.$apply();\n            }\n          }]\n        });\n      }\n    };\n\n    $scope.searchData = function () {\n      var param = {};\n\n      if ($scope.tableInit.select.desc) {\n        param[\"desc\"] = $scope.tableInit.select.desc;\n      }\n\n      if ($scope.tableInit.select.name) {\n        param[\"name\"] = $scope.tableInit.select.name;\n      }\n\n      productUIService.findProducts(param, function (returnObj) {\n        if (returnObj.code == 0) {\n          $scope.queryAllList = returnObj.data;\n          broardFun(returnObj.data);\n        }\n      });\n    }; //根据用户Id查用户域\n\n\n    var domainTreeQuery = function domainTreeQuery() {\n      var defer = $q.defer();\n      userDomainService.queryDomainTree(userLoginUIService.user.userID, function (data) {\n        $scope.domainListTree = data.domainListTree;\n        $scope.domainListDic = data.domainListDic;\n        defer.resolve(\"success\");\n      });\n      deferList.push(defer.promise);\n    };\n\n    var findProductsByEnterId = function findProductsByEnterId(enterpriseId) {\n      productUIService.findProductsByEnterpriseId([enterpriseId], function (returnObj) {\n        if (returnObj.code == 0) {\n          $scope.queryAllList = returnObj.data;\n          broardFun(returnObj.data);\n        }\n      });\n    };\n\n    var init = function init() {\n      domainTreeQuery();\n      $q.all(deferList).then(function () {\n        $scope.searchData(); // if ($routeParams.enterpriseId) {\n        //   findProductsByEnterId($routeParams.enterpriseId);\n        // } else {\n        //   $scope.searchData();\n        // }\n      });\n    };\n    /**\n     * 监听登录状态\n     */\n\n\n    if (!userLoginUIService.user.isAuthenticated) {\n      $scope.$on('loginStatusChanged', function (evt, d) {\n        if (userLoginUIService.user.isAuthenticated) {\n          init();\n        }\n      });\n    } else {\n      init();\n    }\n  }]);\n});"],"sourceRoot":"/source/"}