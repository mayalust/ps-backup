{"version":3,"sources":["app-oc/js/directives/workorder-procedure-copy-dom.js"],"names":["define","directives","BootstrapDialog","initDirective","$timeout","$compile","growl","ngDialog","resourceUIService","cmd","userRoleUIService","restrict","scope","controller","$scope","$element","$attrs","table","domMain","cmdins","isEditing","format","d","renovateList","undefined","returnStr","i","flowList","userType","taskId","tabStatus","handerConfsData","taskName","changeTab","role","userTaskConfigsObj","userTaskConfigs","length","forEach","ele","userId","roleUsers","roleUsersMap","map","e","userInfo","loginName","assignedUser","allRoles","roleIds","roleName","params","roleID","getAssociateRole2User","res","code","roleUser","data","customNameArr","getdomainNameHandler","domains","customName","item","userName","checkedName","userID","deviceList","push","allUser","userIds","$on","event","args","destroy","empty","DataTable","dom","$","ProudSmart","datatable","footerdom","language","order","columns","title","optionCol2","visible","columnDefs","targets","render","type","full","isEdit","escape","str","workOrderType","valueCode","label","orderable","flowListDic","name","version","menuitems","id","rowCallback","nRow","aData","iDataIndex","search","value","draw","on","parentDom","parent","html","changeRoleUsers","toString","indexOf","queryDeviceName","deviceName","getDevicesByUserId","deviceId","selectDevice","index","checked","open","template","className","deleteDevice","splice","selectAll","select_all","angular","selectAll2","moveSelectedDeviceList","leftDeviceList","moveOriginalDeviceList","saveSelectDevice","close","preventDefault","tr","this","closest","viewInfo","row","location","href","sx","rowData","doAction","p1","p2","attr","warning","category","workflowId","handerConfs","handerList","child","show","initEvent","invalidate","next","tds","parents","children","checkPass","each","val","jqob","txt","cell","flg","cells","isDel","remove"],"mappings":"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","file":"app-oc/js/directives/workorder-procedure-copy-dom.js","sourcesContent":["define(['directives/directives', 'bootstrap-dialog', 'datatables.net', 'datatables.net-bs', 'datatables.net-select'], function (directives, BootstrapDialog) {\n  'use strict';\n\n  directives.initDirective('workFlowDom', ['$timeout', '$compile', 'growl', 'ngDialog', 'resourceUIService', 'commonMethodService', 'userRoleUIService', function ($timeout, $compile, growl, ngDialog, resourceUIService, cmd, userRoleUIService) {\n    return {\n      restrict: 'EA',\n      scope: true,\n      controller: ['$scope', '$element', '$attrs', function ($scope, $element, $attrs) {\n        var domMain = $element;\n        var table;\n        var cmdins = new cmd();\n        var isEditing = false;\n        $scope.$on('WORKFLOW', function (event, args) {\n          if (table) {\n            table.destroy();\n            domMain.empty();\n          }\n\n          table = domMain.DataTable({\n            dom: args && args.length > 0 ? $.ProudSmart.datatable.footerdom : '',\n            language: $.ProudSmart.datatable.language,\n            data: args,\n            order: [[5, \"desc\"]],\n            columns: [{\n              data: \"name\",\n              title: \"名称\"\n            }, {\n              data: \"desc\",\n              title: \"描述\"\n            }, {\n              data: \"category\",\n              title: \"工单分类\"\n            }, {\n              data: \"workflowId\",\n              title: \"关联流程\"\n            }, $.ProudSmart.datatable.optionCol2, {\n              data: \"createTime\",\n              visible: false\n            }],\n            columnDefs: [{\n              targets: 0,\n              data: \"name\",\n              render: function render(data, type, full) {\n                // 返回自定义内容\n                if ((full.isEdit == 2 || full.isEdit == 3) && type == \"display\") return \"<input style='width:100%' class='form-control input-sm' type='text' value='\" + escape(data) + \"'>\";else return escape(data);\n              }\n            }, {\n              targets: 1,\n              data: \"desc\",\n              render: function render(data, type, full) {\n                // 返回自定义内容\n                if ((full.isEdit == 2 || full.isEdit == 3) && type == \"display\") return \"<input maxlength='20' style='width:100%' class='form-control input-sm' type='text' value='\" + escape(data) + \"'>\";else return escape(data);\n              }\n            }, {\n              targets: 2,\n              data: \"category\",\n              render: function render(data, type, full) {\n                var str = '';\n\n                if ((full.isEdit == 2 || full.isEdit == 3) && type == \"display\") {\n                  str = '<div class=\"full-width padding-right-30\">' + '<select id=\"category\"   name=\"category\" class=\"form-control input-sm full-width\" ng-model=\"flowList.category\"  ng-options=\"item.valueCode as item.label  for item in workOrderType\">>' + '<option value=\"\">选择分类</option>' + '</select>' + '</div>';\n                  return str;\n                } else {\n                  for (var i in $scope.workOrderType) {\n                    if ($scope.workOrderType[i].valueCode == data) {\n                      str = $scope.workOrderType[i].label;\n                      break;\n                    }\n                  }\n\n                  return str;\n                }\n              }\n            }, {\n              targets: 3,\n              data: \"workflowId\",\n              orderable: false,\n              render: function render(data, type, full) {\n                var str = \"\";\n\n                if (full.isEdit == 3 && type == \"display\") {\n                  str += '<div class=\"full-width padding-right-30\">' + '<select  id=\"flowId\"   name=\"flowId\"  class=\"form-control input-sm\" ng-model=\"flowList.workflowId\" ' + ' ng-options=\"item.id as item.name + &apos;:&apos; + item.version  for item in flows\" select2>' + '<option  value=\"\">选择流程</option>' + '</select>' + '</div>';\n                } else if (full.isEdit == 2 && type == \"display\") {\n                  str += '<div class=\"full-width padding-right-30\">' + '<select  id=\"flowId\"   name=\"flowId\" disabled  class=\"form-control input-sm\" ng-model=\"flowList.workflowId\" ' + ' ng-options=\"item.id as item.name + &apos;:&apos; + item.version  for item in flows\">' + '<option  value=\"\">选择流程</option>' + '</select>' + '</div>';\n                } else {\n                  if (data) {\n                    if ($scope.flowListDic && $scope.flowListDic[data] != undefined) {\n                      str = $scope.flowListDic[data].name + \":\" + $scope.flowListDic[data].version;\n                    }\n                  }\n                }\n\n                return str;\n              }\n            }, {\n              targets: 4,\n              data: \"option\",\n              render: function render(data, type, full) {\n                // 返回自定义内容\n                var str = \"<div class='btn-group btn-group-sm'>\";\n\n                if (full.isEdit == 2 || full.isEdit == 3) {\n                  str += \"<button id='save-btn'   class='btn btn-primary' ><i class='fa fa-edit hidden-lg hidden-md hidden-sm'></i><span class='hidden-xs'> 保存</span></button>\";\n                  str += \"<button id='cancel-btn'   class='btn btn-default' ><i class='fa fa-trash hidden-lg hidden-md hidden-sm'></i><span class='hidden-xs'> 取消</span></button>\";\n                } else {\n                  if ($scope.menuitems['A02_S20']) {\n                    str += \"<button id='edit-btn'  ng-click='addMod(\" + full.id + \");'  class='btn btn-primary' ><i class='fa fa-edit hidden-lg hidden-md hidden-sm'></i><span class='hidden-xs'> 编辑</span></button>\";\n                  }\n\n                  if ($scope.menuitems['A03_S20']) {\n                    str += \"<button id='del-btn'   class='btn btn-default' ><i class='fa fa-trash hidden-lg hidden-md hidden-sm'></i><span class='hidden-xs'> 删除</span></button>\";\n                  }\n                }\n\n                str += \"</div>\";\n                return str;\n              }\n            }],\n            rowCallback: function rowCallback(nRow, aData, iDataIndex) {\n              $compile(nRow)($scope);\n            }\n          });\n        });\n        $scope.$on(\"table-search-handle\", function (event, args) {\n          if (args.name == $attrs.name) table.search(args.value).draw();\n        });\n        /**\n         * 监听表格初始化后，添加按钮\n         */\n\n        domMain.on('init.dt', function () {\n          var parentDom = $(\".special-btn\").parent();\n          parentDom.html('<a ng-click=\"addViews()\" class=\"btn btn-default btn-sm\"><i class=\"fa fa-plus\"></i><span class=\"hidden-xs\"> 新建关联流程</span></a>');\n          $compile(parentDom)($scope);\n        });\n\n        function format(d, renovateList) {\n          if (d != undefined) {\n            var returnStr = \"\";\n            returnStr += '<div class=\"nav-tabs-custom\">';\n            returnStr += '<ul class=\"nav nav-tabs pull-left\">';\n\n            for (var i in renovateList) {\n              if (i == 0) {\n                $scope.flowList.userType = renovateList[i].userType;\n                $scope.flowList.taskId = renovateList[i].taskId;\n                $scope.tabStatus(renovateList[i].userType, $scope.handerConfsData);\n                returnStr += '<li class=\"active\"><a data-taskId=\"' + renovateList[i].taskId + '\" data-toggle=\"tab\"  userType=\"' + renovateList[i].userType + '\"  taskId=\"' + renovateList[i].taskId + '\">' + renovateList[i].taskName + '</a></li>';\n              } else {\n                returnStr += '<li><a userType=\"' + renovateList[i].userType + '\" data-taskId=\"' + renovateList[i].taskId + '\"  taskId=\"' + renovateList[i].taskId + '\" data-toggle=\"tab\">' + renovateList[i].taskName + '</a></li>';\n              }\n            }\n\n            returnStr += '</ul>';\n            returnStr += '<div class=\"tab-content col-md-12\">';\n            returnStr += '<form  class=\"form-horizontal tab-pane active\" role=\"form\" >';\n            returnStr += '<div class=\"table-responsive\">';\n            returnStr += '<div class=\"col-md-12\" ng-show=\"flowList.userType == \\'role\\'\">'; // 已分配角色\n\n            returnStr += '<label class=\"col-md-1\" class=\"control-label\">已分配角色：{{}}</label>';\n            returnStr += '<div class=\"col-md-2\" class=\"no-padding-lr\" >';\n            returnStr += '<input maxlength=\"50\" style=\"width: 80%;\"  class=\"form-control input-sm\" type=\"text\" ng-model=\"flowList.assignedUser\" disabled>';\n            returnStr += '</div>';\n            returnStr += '<label class=\"col-md-1\" class=\"control-label\">请选择用户：</label>';\n            returnStr += '<div class=\"col-md-4\" class=\"no-padding-lr\" >';\n            returnStr += '<select  id=\"userRole\" name=\"userRole\"  multiple=\"multiple\"  numberdisplayed=\"1\"  class=\"form-control input-sm\" bootstrap-multiselect  nonselectedtext=\"所有用户\" ng-options=\"item.userInfo.loginName as item.userInfo.userName for item in flowList.roleUser\"  ng-change=\"changeRoleUsers(roleUsersMap)\"  ng-model=\"roleUsersMap\" >'; //  ng-model=\"handerConfsData[flowList.taskId].userIdsOfRole\"\n\n            returnStr += '</select>';\n            returnStr += '<label style=\"color: #f56e00;\" class=\"form-control no-border no-margin padding-left-20 light-label bg-transparent\">(如果没有选用户默认所有用户)</label>';\n            returnStr += '</div>'; // checkbox\n\n            returnStr += '<label class=\"col-md-1\" class=\"control-label\">流程关联专业：</label>';\n            returnStr += '<div class=\"col-md-1\" class=\"no-padding-lr\" ><input type=\"checkbox\" ng-model=\"handerConfsData[flowList.taskId].diffSpecialty\" class=\"control-label\"></div>'; //handerConfsData[flowList.taskId].userExpressionOfCategory\n            // 表格\n\n            returnStr += '<div>' + '<table class=\"table table-striped\">' + '<tr>' + '<td>用户名称</td>' + '<td>登录名</td>' + '<td>管理域</td>' + '<td>管理设备</td>' + '<td>操作</td>' + '</tr>' + '<tr ng-repeat=\"roleUser in roleUsers\">' + '<td>{{roleUser.userInfo.userName}}</td>' + '<td>{{roleUser.userInfo.loginName}}</td>' + '<td>{{roleUser.userInfo.customName}}</td>' + '<td>{{roleUser.userInfo.checkedName}}</td>' + '<td>' + '<button class=\"btn btn-primary btn-sm\" ng-click=\"selectDevice(roleUser,$index)\">设备选择</button>' + '<button class=\"btn btn-default btn-sm\" ng-click=\"deleteDevice($index)\">删除</button>' + '</td>' + '</tr>' + '</table>' + '</div>';\n            returnStr += '</div>';\n            returnStr += '<div  class=\"col-md-6\" ng-show=\"flowList.userType == \\'expression\\'\">';\n            returnStr += '<label class=\"col-sm-3 control-label\">请输入表达式：</label>';\n            returnStr += '<div class=\" col-sm-9 no-padding-lr\" >';\n            returnStr += '<input maxlength=\"50\" style=\"width: 80%;\"  ng-model=\"handerConfsData[flowList.taskId].userExpressionOfCategory\" class=\"form-control input-sm\" type=\"text\" >';\n            returnStr += '</div>';\n            returnStr += '</div>';\n            returnStr += '<div  class=\"col-md-6\" ng-show=\"flowList.userType == \\'user\\'\">';\n            returnStr += '<label class=\"col-sm-4 control-label\">已分配的用户：</label>';\n            returnStr += '<div class=\"col-sm-8 no-padding-lr\" >';\n            returnStr += '<input maxlength=\"50\" style=\"width: 80%;\"  class=\"form-control input-sm\" type=\"text\" ng-model=\"flowList.assignedUser\" disabled>';\n            returnStr += '</div>';\n            returnStr += '</div>';\n            returnStr += '<div  class=\"col-md-6\" ng-show=\"flowList.userType == \\'group\\'\">';\n            returnStr += '<label class=\"col-sm-3 control-label\">请选择用户：</label>';\n            returnStr += '<div class=\"no-padding-lr\" >';\n            returnStr += '<select  id=\"userRole\" name=\"userRole\"  multiple=\"multiple\"  numberdisplayed=\"1\"  class=\"form-control input-sm\" bootstrap-multiselect  nonselectedtext=\"所有用户\" ng-options=\"item.userID as item.userName for item in flowList.groupUser \"  ng-model=\"handerConfsData[flowList.taskId].userIdsOfRole\">';\n            returnStr += '</select>';\n            returnStr += '<label style=\"color: #f56e00;\" class=\"form-control no-border no-margin padding-left-20 light-label bg-transparent\">(如果没有选用户默认所有用户)</label>';\n            returnStr += '</div>';\n            returnStr += '</div>';\n            returnStr += '</div>';\n            returnStr += '</form>';\n            returnStr += '</div>';\n            returnStr += '</div>';\n          }\n\n          return returnStr;\n        }\n\n        $scope.changeRoleUsers = function (e) {\n          /**\n           * 判断之前有没有值\n           * 多的话把多的哪一项添加进去\n           * 少的话删除少的哪一个\n           */\n          $scope.roleUsers = [];\n          $scope.flowList.roleUser.forEach(function (ele) {\n            if (e.toString().indexOf(ele.userInfo.loginName) > -1) {\n              $scope.roleUsers.push(ele);\n            }\n          });\n        }; // 查询左侧所有的设备\n\n\n        $scope.queryDeviceName = function (deviceName) {\n          // 左侧设备去重\n          $scope.deviceList = [];\n          resourceUIService.getDevicesByUserId($scope.roleUser.userId, {\n            label: deviceName\n          }, function (data) {\n            if (data.code == 0) {\n              var cmdins = new cmd();\n              data.data.forEach(function (ele) {\n                var customNameArr = cmdins.getdomainNameHandler(ele.domains, []);\n                var customName = \"\";\n\n                for (var i = 3; i < customNameArr.length; i++) {\n                  customName += customNameArr[i] + \"/\";\n                }\n\n                if ($scope.roleUser.userInfo.checkedName.indexOf(customName + ele.label) == -1) {\n                  var item = {\n                    deviceId: ele.id,\n                    label: customName + ele.label\n                  };\n                  $scope.deviceList.push(item);\n                }\n              });\n            }\n          });\n        };\n\n        $scope.selectDevice = function (roleUser, e) {\n          $scope.index = e;\n          /**\n           * 设备选择\n           * 初始化数据(左侧过滤掉右侧选中的设备)\n           * 第二次选择设备展示上次选中的设备\n           */\n\n          $scope.roleUser = roleUser;\n          $scope.queryDeviceName();\n\n          if (roleUser.userInfo.checkedName) {\n            $scope.checked = roleUser.deviceList;\n          } else {\n            $scope.checked = [];\n          }\n\n          ngDialog.open({\n            template: '../partials/dialogue/select_device_dia.html',\n            className: 'ngdialog-theme-plain',\n            scope: $scope\n          });\n        }; // 删除当前行\n\n\n        $scope.deleteDevice = function (e) {\n          $scope.roleUsers.splice(e, 1);\n          $scope.roleUsersMap = $scope.roleUsers.map(function (e) {\n            return e.userInfo.loginName;\n          });\n        };\n        /**\n         * 全选/全不选/选中指定的设备\n         * 从左边的框移动到右边的框\n         * 从右边的框移动到左边的框\n         */\n\n\n        $scope.checked = []; //全选\n\n        $scope.selectAll = function (select_all) {\n          if (select_all) {\n            angular.forEach($scope.deviceList, function (i) {\n              i.checked = true;\n            });\n          } else {\n            angular.forEach($scope.deviceList, function (i) {\n              i.checked = false;\n            });\n          }\n        };\n\n        $scope.selectAll2 = function (select_all) {\n          if (select_all) {\n            angular.forEach($scope.checked, function (i) {\n              i.checked = true;\n            });\n          } else {\n            angular.forEach($scope.checked, function (i) {\n              i.checked = false;\n            });\n          }\n        }; // moveSelectedDeviceList\n\n\n        $scope.moveSelectedDeviceList = function () {\n          var leftDeviceList = [];\n          $scope.deviceList.forEach(function (ele) {\n            if (ele.checked) {\n              $scope.checked.push(ele);\n            } else {\n              leftDeviceList.push(ele);\n            }\n          });\n          $scope.deviceList = leftDeviceList;\n        }; //moveOriginalDeviceList  checked  deviceList\n\n\n        $scope.moveOriginalDeviceList = function () {\n          var leftDeviceList = [];\n          $scope.checked.forEach(function (ele) {\n            if (ele.checked) {\n              $scope.deviceList.push(ele);\n            } else {\n              leftDeviceList.push(ele);\n            }\n          });\n          $scope.checked = leftDeviceList;\n        };\n\n        $scope.saveSelectDevice = function () {\n          var deviceName = \"\";\n          $scope.checked.forEach(function (ele) {\n            deviceName += ele.label + \";\";\n          });\n          $scope.roleUsers[$scope.index].deviceList = $scope.checked;\n          $scope.roleUsers[$scope.index].userInfo.checkedName = deviceName; // $scope.handerConfsData[$scope.flowList.taskId] 获取的是选中的节点数据\n\n          $scope.handerConfsData[$scope.flowList.taskId].userTaskConfigs = $scope.roleUsers;\n          ngDialog.close();\n        };\n\n        domMain.on('click', 'td', function (e) {\n          return;\n          e.preventDefault();\n          var tr = $(this).closest('tr');\n          var row = table.row(tr);\n          var rowData = row.data();\n\n          if (rowData) {\n            if ($(this).context.cellIndex == 0 || $(this).context.cellIndex == 1 || $(this).context.cellIndex == 2 || $(this).context.cellIndex == 4) {\n              return;\n            }\n\n            if (row.child.isShown()) {\n              if (row.data().isEdit != 2 && row.data().isEdit != 3 || $scope.flowList.workflowId == \"\" || $scope.flowList.workflowId == null) {\n                row.child.hide();\n                tr.removeClass('shown');\n              } else {\n                if (row.data().isEdit == 2 || row.data().isEdit == 3) {\n                  if ($scope.flowList.workflowId) {\n                    var flowList = $scope.flowListDic[$scope.flowList.workflowId];\n\n                    if (flowList != undefined && flowList.handerConfs) {\n                      var handerList = flowList.handerConfs;\n                      var renovateList = [];\n\n                      for (var i in handerList) {\n                        //if (handerList[i].userType == \"role\" || handerList[i].userType == \"expression\") {\n                        renovateList.push(handerList[i]);\n                        $scope.handerConfsData[handerList[i].taskId] = handerList[i]; //}\n                      }\n\n                      if (renovateList.length > 0) {\n                        //row.child(format(row.data())).show();\n                        row.child(format(row.data(), renovateList)).show();\n                        $compile(tr.next())($scope);\n                        $scope.initEvent();\n                        tr.addClass('shown');\n                      }\n                    }\n                  }\n                } else {\n                  row.child.hide();\n                  tr.removeClass('shown');\n                }\n              }\n            } else {\n              if (row.data().isEdit == 2 || row.data().isEdit == 3) {\n                if ($scope.flowList.workflowId) {\n                  var flowList = $scope.flowListDic[$scope.flowList.workflowId];\n\n                  if (flowList != undefined && flowList.handerConfs) {\n                    var handerList = flowList.handerConfs;\n                    var renovateList = [];\n                    $scope.handerConfsData = {};\n\n                    for (var i in handerList) {\n                      //if (handerList[i].userType == \"role\" || handerList[i].userType == \"expression\") {\n                      renovateList.push(handerList[i]);\n                      $scope.handerConfsData[handerList[i].taskId] = handerList[i]; //}\n                    }\n\n                    if (renovateList.length > 0) {\n                      //row.child(format(row.data())).show();\n                      row.child(format(row.data(), renovateList)).show();\n                      $compile(tr.next())($scope);\n                      $scope.initEvent();\n                      tr.addClass('shown');\n                    }\n                  }\n                }\n              } else {\n                row.child.hide();\n                tr.removeClass('shown');\n              }\n            }\n          }\n        });\n        domMain.on('click', '#view-btn', function (e) {\n          e.preventDefault();\n          var tr = $(this).closest('tr');\n          var row = table.row(tr);\n          var viewInfo = row.data();\n          location.href = \"../app-flowsheet/index.html#/displayView/\" + viewInfo.id;\n        });\n        domMain.on('click', '#design-btn', function (e) {\n          e.preventDefault();\n          var tr = $(this).closest('tr');\n          var row = table.row(tr);\n          $scope.sx();\n        });\n        domMain.on('click', '#copy-btn', function (e) {\n          e.preventDefault();\n          var tr = $(this).closest('tr');\n          var row = table.row(tr);\n          var rowData = row.data();\n          $scope.doAction(\"view-copy\", rowData);\n        });\n        /**\n         * 点击tab获取当前节点的数据（之前写的并不是按照节点获取，而是一次性全部加载出来）\n         */\n\n        function changeTab(role) {\n          // 判断如果存在值然后把选中的赋值\n          var userTaskConfigsObj = {};\n\n          if (role.userTaskConfigs && role.userTaskConfigs.length > 0) {\n            role.userTaskConfigs.forEach(function (ele) {\n              userTaskConfigsObj[ele.userId] = ele;\n            });\n            $scope.roleUsers = role.userTaskConfigs;\n            $scope.roleUsersMap = role.userTaskConfigs.map(function (e) {\n              return e.userInfo.loginName;\n            });\n          } // 判断是不是角色\n\n\n          if (role.userType == \"role\") {\n            $scope.flowList.assignedUser = $scope.flowList.allRoles[role.roleIds].roleName; // 获取当前的用户\n\n            var params = {\n              \"roleID\": role.roleIds[0]\n            };\n            userRoleUIService.getAssociateRole2User(params, function (res) {\n              if (res.code == 0) {\n                $scope.flowList.roleUser = [];\n                res.data.forEach(function (ele) {\n                  var customNameArr = cmdins.getdomainNameHandler(ele.domains, []);\n                  var customName = \"\";\n\n                  for (var i = 0; i < customNameArr.length; i++) {\n                    customName += customNameArr[i] + \"/\";\n                  }\n\n                  var item = {\n                    userInfo: {\n                      \"customName\": customName,\n                      \"userName\": ele.userName,\n                      \"loginName\": ele.loginName,\n                      \"checkedName\": userTaskConfigsObj[ele.userID] ? userTaskConfigsObj[ele.userID].userInfo.checkedName : \"\"\n                    },\n                    userId: ele.userID,\n                    deviceList: userTaskConfigsObj[ele.userID] ? userTaskConfigsObj[ele.userID].deviceList : \"\"\n                  };\n                  $scope.flowList.roleUser.push(item);\n                });\n              }\n            });\n          } else if (role.userType == \"user\") {\n            $scope.flowList.assignedUser = $scope.flowList.allUser[role.userIds].userName;\n          }\n        } // 默认加载第一个\n\n\n        $scope.$on(\"handerConfsData\", function (p1, p2) {\n          changeTab(p2);\n        });\n        domMain.on('click', 'a[data-toggle=\"tab\"]', function (e) {\n          var role = $scope.handerConfsData[$(this).attr(\"data-taskId\")];\n          changeTab(role);\n        });\n        domMain.on('click', '#edit-btn', function (e) {\n          e.preventDefault();\n\n          if (isEditing) {\n            growl.warning(\"当前有未保存的数据，请先保存\", {});\n            return;\n          }\n\n          isEditing = true;\n          var tr = $(this).closest('tr');\n          var row = table.row(tr);\n          var rowData = row.data();\n          row.data().isEdit = 2;\n          $scope.flowList.category = row.data().category;\n          $scope.flowList.workflowId = row.data().workflowId;\n          $scope.handerConfsData = {};\n\n          if (rowData != undefined && rowData.handerConfs) {\n            var handerList = rowData.handerConfs;\n            var renovateList = [];\n\n            for (var i in handerList) {\n              renovateList.push(handerList[i]);\n              $scope.handerConfsData[handerList[i].taskId] = handerList[i];\n            }\n\n            if (renovateList.length > 0) {\n              row.child(format(row.data(), renovateList)).show();\n              $scope.initEvent();\n            }\n          }\n\n          row.invalidate();\n          $compile(tr)($scope);\n          $compile(tr.next())($scope);\n        });\n        domMain.on('click', '#save-btn', function (e) {\n          e.preventDefault();\n          var tr = $(this).closest('tr');\n          var row = table.row(tr);\n          var rowData = row.data();\n\n          if (rowData.isEdit == 2 || rowData.isEdit == 3) {\n            var tds = $(this).parents(\"tr\").children();\n            var checkPass = true;\n            $.each(tds, function (i, val) {\n              var jqob = $(val);\n\n              if (i == 0) {\n                if (jqob.children(\"input\").length > 0) {\n                  var txt = jqob.children(\"input\").val();\n\n                  if (!txt) {\n                    growl.warning(\"视图名称不能空\");\n                    checkPass = false;\n                    return false;\n                  }\n                }\n              }\n\n              if (i == 0 || i == 1) {\n                var txt = jqob.children(\"input\").val();\n                jqob.html(txt);\n                table.cell(jqob).data(txt); //修改DataTables对象的数据\n              }\n            }); // 判断所选用户的管理设备不能为空\n\n            if ($scope.roleUsers && $scope.roleUsers.length > 0) {\n              $scope.roleUsers.forEach(function (ele) {\n                if (ele.deviceList.length == 0) {\n                  checkPass = false;\n                  growl.warning(\"所选用户的管理设备不能为空\", {});\n                }\n              });\n            }\n          }\n\n          if (checkPass) {\n            if ($scope.flowList.category == '' || $scope.flowList.category == null) {\n              growl.warning(\"请选择工单分类\", {});\n              checkPass = false;\n              return;\n            }\n\n            if ($scope.flowList.workflowId == '' || $scope.flowList.workflowId == null) {\n              growl.warning(\"请选择关联流程\", {});\n              checkPass = false;\n              return;\n            }\n\n            row.data()[\"workflowId\"] = $scope.flowList.workflowId;\n            row.data()[\"category\"] = $scope.flowList.category;\n            isEditing = false;\n            $scope.doAction(\"view-save\", rowData, function (flg) {\n              if (flg) {\n                isEditing = false;\n                row.data().isEdit = 0;\n                row.cells().invalidate();\n              }\n            });\n          }\n        });\n        domMain.on('click', '#cancel-btn', function (e) {\n          e.preventDefault();\n          var tr = $(this).closest('tr');\n          var row = table.row(tr);\n          var rowData = row.data();\n          isEditing = false;\n          $scope.doAction(\"cancel\", rowData);\n        });\n        domMain.on('click', '#del-btn', function (e) {\n          e.preventDefault();\n          var tr = $(this).closest('tr');\n          var row = table.row(tr);\n          row.data().isDel = true;\n          var rowData = row.data();\n          $scope.doAction(\"attr-delete\", rowData, function (flg) {\n            if (flg) row.remove().draw(false);\n          });\n        });\n        domMain.on('click', '#release-btn', function (e) {\n          e.preventDefault();\n          var tr = $(this).closest('tr');\n          var row = table.row(tr);\n          row.data().isDel = true;\n          var rowData = row.data();\n          $scope.doAction(\"release\", rowData);\n        }); //        $('#flowId').change(function(){ \n\n        domMain.on('change', '#flowId', function (e) {\n          e.preventDefault();\n          var tr = $(this).closest('tr');\n          var row = table.row(tr);\n          var flowList = $scope.flowListDic[$scope.flowList.workflowId];\n\n          if (flowList != undefined && flowList.handerConfs) {\n            var handerList = flowList.handerConfs;\n            var renovateList = [];\n\n            for (var i in handerList) {\n              renovateList.push(handerList[i]);\n              $scope.handerConfsData[handerList[i].taskId] = handerList[i];\n            }\n\n            if (renovateList.length > 0) {\n              row.child(format(row.data(), renovateList)).show();\n              $compile(tr.next())($scope);\n              $scope.initEvent();\n            }\n          }\n        });\n      }]\n    };\n  }]);\n});"],"sourceRoot":"/source/"}