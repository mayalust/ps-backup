<config injector="api"></config>
<template>
  <div class="count-progress-wrapper">
    <div class="title-row">
      <p class="title-row-item" ng-class="{'first-title': $index == 0, 'other-title': $index != 0}"
         ng-repeat="titleItem in selfConfig.title">{{titleItem}}</p>
    </div>
    <div class="data-row" ng-repeat="dataItem in selfConfig.data">
      <p class="first-data">{{dataItem[0]}}</p>
      <div class="other-data">
        <p class="data-value">{{dataItem[1] + '%'}}</p>
        <div class="count-progress-bar-outer">
          <div class="count-progress-bar-inner" ng-style="{'width': dataItem[1] + '%'}"></div>
        </div>
      </div>
      <div class="other-data">
        <p class="data-value">{{dataItem[2] + '%'}}</p>
        <div class="count-progress-bar-outer">
          <div class="count-progress-bar-inner" ng-style="{'width': dataItem[2] + '%'}"></div>
        </div>
      </div>
    </div>
  </div>
</template>
<script>
export default function (api) {
  return {
    scope: {
      config: '='
    },
    link ($scope, $element, $attr) {
      $scope.selfConfig = {};
      let watcher1 = $scope.$watch(`config`, (n, o, s) => {
        if (typeof n !== 'undefined') {
          $scope.selfConfig = n;
        }
      });
      $scope.$on('$destroy', () => {
        watcher1 && watcher1();
      });
    }
  }
}
</script>
<style scoped lang="less">
.count-progress-wrapper {
  .title-row, .data-row {
    display: flex;
  }

  .title-row {
    .title-row-item {
      text-align: center;
      font-size: 12px;
      color: #72b3d7;
      margin-bottom: 0;
    }

    .other-title {
      flex: 1;
    }

    .first-title {
      width: 15%;
    }
  }

  .data-row {
    padding: 5px 0;

    .first-data {
      width: 15%;
      text-align: center;
      font-size: 12px;
      color: #fff;
      margin-bottom: 0;
    }

    .other-data {
      flex: 1;
      display: flex;
      padding: 0 10px;

      .data-value {
        font-size: 12px;
        color: #72b3d7;
        margin-bottom: 0;
        width: 35px;
        text-align: right;
      }

      .count-progress-bar-outer {
        flex: 1;
        background-color: #222222;
        border-radius: 0px;
        -webkit-box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
        box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
        border: 1px solid rgba(250, 250, 250, 0.8);
        display: flex;

        .count-progress-bar-inner {
          width: 0%;
          background: #01baff;
          transition: width .6s ease;
        }
      }
    }
  }
}
</style>
