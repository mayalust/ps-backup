<config injector="$scope, psDialog, commonMethodService, commonMethodService2, api, $timeout, $filter, growl"
        deps="dialogAlertRule"></config>
<template>
  <div class="box" style="background-color: transparent;">
    <div class="box-body">
      <form role="form" class="search-area">
        <div class="form-group col-sm-2">
          <label class="control-label">报警规则名称</label>
          <ps-input ng-model="title"></ps-input>
        </div>
        <div class="form-group col-sm-2">
          <label class="control-label">报警级别</label>
          <ps-select1
              ng-model="severity"
              options="severityOptionsController"
              config="severityConfigController"
          ></ps-select1>
        </div>
        <div class="form-group col-sm-2 no-pad">
          <label class="col-sm-12 control-label" style="color: transparent;"
          >操作：</label
          >
          <div class="btn-group block" style="padding: 0;border: none;">
            <button
                type="button"
                class="btn btn-primary btn-sm"
                ng-click="goSearch()"
            >
              <i class="fa fa-search"></i>
              <span class="hidden-sm"> 查询</span>
            </button>
            <button
                type="button"
                class="btn btn-default btn-sm"
                ng-click="goClear()"
            >
              <i class="fa fa-close"></i>
              <span class="hidden-sm"> 清除</span>
            </button>
          </div>
        </div>
      </form>
    </div>
    <div class="box-footer">
      <ps-grid1 ng-model="gridModel" config="config"></ps-grid1>
    </div>
  </div>
</template>
<script type="text/javascript">
export default function (scope, psDialog,
                         cms,
                         cms2,
                         api,
                         $timeout,
                         $filter,
                         growl
) {
  const target = cms();
  const initPage = e => {
    const resource = e.resource;

    scope.gridModel = [];
    scope.config = {
      url: "resourceUIService.getKpiThresholdListByConditionWithPage",
      parameter: {
        modelId: resource.modelId,
        nodeIds: resource.id + ""
      },
      outButtons: [
        {
          label: "添加全局报警规则",
          on: {
            click: function () {
              if (resource.category !== 'Device') {
                growl.warning('请选择一个设备');
                return;
              }
              cms2.modal({
                title: "添加全局报警规则",
                directive: "dialog-alert-rule",
                width: "80%",
                scope: scope,
                params: {
                  mode: "add",
                  type: "global",
                  resource: resource
                }
              });

            }
          }
        },
        {
          label: "添加局部报警规则",
          on: {
            click: function () {
              if (resource.category !== 'Device') {
                growl.warning('请选择一个设备');
                return;
              }
              cms2.modal({
                title: "添加局部报警规则",
                directive: "dialog-alert-rule",
                width: "80%",
                scope: scope,
                params: {
                  mode: "add",
                  resource: resource
                }
              });
            }
          }
        }
      ],
      bodyButtons: [
        {
          label: "查看",
          on: {
            click: function (row) {
              let params = {
                mode: "view",
                resource: resource,
                rule: row
              };
              if (!row.nodeIds) {
                params.type = "global";
              }
              cms2.modal({
                title: `查看${row.nodeIds ? "局部" : "全局"}报警规则`,
                directive: "dialog-alert-rule",
                width: "80%",
                scope: scope,
                params: params
              });
            }
          }
        },
        {
          label: "编辑",
          on: {
            click: function (row) {
              let params = {
                mode: "edit",
                resource: resource,
                rule: row
              };
              if (!row.nodeIds) {
                params.type = "global";
              }
              cms2.modal({
                title: `编辑${row.nodeIds ? "局部" : "全局"}报警规则`,
                directive: "dialog-alert-rule",
                width: "80%",
                scope: scope,
                params: params
              });
            }
          }
        },
        {
          label: "删除",
          on: {
            click: function (row) {
              if (row.enabled) {
                growl.warning("该告警规则启用中，无法删除！");
                return;
              }
              api
                .post("resourceUIService.deleteKpiThresholds", [[row.id]])
                .then(ret => {
                  this.deleteRow(row);
                  growl.success("删除成功！");
                });
            }
          }
        }
      ],
      columns: [
        {
          key: "title",
          label: "报警规则名称",
          type: "text"
        },
        {
          key: "alertType",
          label: "规则类别",
          type: "text",
          bind: function (row) {
            return row.nodeIds ? "局部规则" : "全局规则";
          }
        },
        {
          key: "deviceCode",
          label: "设备编码",
          type: "text",
          bind: function (row) {
            return resource.externalDevId;
          }
        },
        {
          key: "nodeIds",
          label: "设备名称",
          type: "text",
          bind: function (row) {
            return resource.label;
          }
        },
        {
          key: "severity",
          label: "报警级别",
          type: "text",
          bind: function (row) {
            let o = target.getRootScope("myDicts")["alertSeverity"].find(a => {
              return a.valueCode == row.severity;
            });
            return o.label;
          }
        },
        {
          key: "message",
          label: "报警消息",
          type: "text"
        },
        {
          key: "enabled",
          label: "是否启用",
          type: "text",
          bind: function (row) {
            return row.enabled ? "已启用" : "已停用";
          }
        },
        {
          key: "createTime",
          label: "制定时间",
          type: "text",
          bind: function (row) {
            return $filter("date")(
              new Date(row.createTime),
              "yyyy-MM-dd HH:mm:ss"
            );
          }
        }
      ]
    };

    scope.severityOptionsController = target
      .getRootScope("myDicts")
      ["alertSeverity"].map(item => {
      return {
        id: Number(item.valueCode),
        ...item
      };
    });
    scope.severityConfigController = {
      format: {
        value: "valueCode"
      }
    };
    scope.goClear = function () {
      scope.title = "";
      scope.severity = null;
    };

    scope.goSearch = function () {
      let gridScope = scope.$$childHead;
      while (!gridScope.gridInstance) {
        gridScope = gridScope.$$nextSibling;
      }
      let parameter = {};
      if (scope.title) {
        parameter.title = scope.title;
      }
      if (scope.severity) {
        parameter.severity = scope.severity * 1;
      }
      if (Object.keys(parameter).length > 0) {
        gridScope.gridInstance.goSearch(parameter);
      } else {
        gridScope.gridInstance.goSearch();
      }
    };
  };

  target.on("tree_resourceChange", function (e) {
    initPage(e);
  });
}
</script>
<style lang="less" scoped>
.search-area {
  [class*="col"] {
    padding-left: 10px !important;
    padding-right: 10px !important;
  }
}

.block {
  display: block;
}
</style>
